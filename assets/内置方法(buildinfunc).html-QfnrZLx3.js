import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as e,c as r,a as d}from"./app-nD1Z-e8V.js";const a={},n=d('<h1 id="builtinfunc" tabindex="-1"><a class="header-anchor" href="#builtinfunc" aria-hidden="true">#</a> builtInFunc</h1><h2 id="math" tabindex="-1"><a class="header-anchor" href="#math" aria-hidden="true">#</a> Math</h2><table><thead><tr><th>Function</th><th>Description</th></tr></thead><tbody><tr><td>abs()</td><td>Returns absolute value of a number</td></tr><tr><td>divmod()</td><td>Returns quotient and remainder of integer division</td></tr><tr><td>max()</td><td>Returns the largest of the given arguments or items in an iterable</td></tr><tr><td>min()</td><td>Returns the smallest of the given arguments or items in an iterable</td></tr><tr><td>pow()</td><td>Raises a number to a power</td></tr><tr><td>round()</td><td>Rounds a floating-point value</td></tr><tr><td>sum()</td><td>Sums the items of an iterable</td></tr></tbody></table><h2 id="type-conversion" tabindex="-1"><a class="header-anchor" href="#type-conversion" aria-hidden="true">#</a> Type Conversion</h2><table><thead><tr><th>Function</th><th>Description</th></tr></thead><tbody><tr><td>ascii()</td><td>Returns a string containing a printable representation of an object</td></tr><tr><td>bin()</td><td>Converts an integer to a binary string</td></tr><tr><td>bool()</td><td>Converts an argument to a Boolean value</td></tr><tr><td>chr()</td><td>Returns string representation of character given by integer argument</td></tr><tr><td>complex()</td><td>Returns a complex number constructed from arguments</td></tr><tr><td>float()</td><td>Returns a floating-point object constructed from a number or string</td></tr><tr><td>hex()</td><td>Converts an integer to a hexadecimal string</td></tr><tr><td>int()</td><td>Returns an integer object constructed from a number or string</td></tr><tr><td>oct()</td><td>Converts an integer to an octal string</td></tr><tr><td>ord()</td><td>Returns integer representation of a character</td></tr><tr><td>repr()</td><td>Returns a string containing a printable representation of an object</td></tr><tr><td>str()</td><td>Returns a string version of an object</td></tr><tr><td>type()</td><td>Returns the type of an object or creates a new type object</td></tr></tbody></table><h2 id="iterables-and-iterators" tabindex="-1"><a class="header-anchor" href="#iterables-and-iterators" aria-hidden="true">#</a> Iterables and Iterators</h2><table><thead><tr><th>Function</th><th>Description</th></tr></thead><tbody><tr><td>all()</td><td>Returns True if all elements of an iterable are true</td></tr><tr><td>any()</td><td>Returns True if any elements of an iterable are true</td></tr><tr><td>enumerate()</td><td>Returns a list of tuples containing indices and values from an iterable</td></tr><tr><td>filter()</td><td>Filters elements from an iterable</td></tr><tr><td>iter()</td><td>Returns an iterator object</td></tr><tr><td>len()</td><td>Returns the length of an object</td></tr><tr><td>map()</td><td>Applies a function to every item of an iterable</td></tr><tr><td>next()</td><td>Retrieves the next item from an iterator</td></tr><tr><td>range()</td><td>Generates a range of integer values</td></tr><tr><td>reversed()</td><td>Returns a reverse iterator</td></tr><tr><td>slice()</td><td>Returns a slice object</td></tr><tr><td>sorted()</td><td>Returns a sorted list from an iterable</td></tr><tr><td>zip()</td><td>Creates an iterator that aggregates elements from iterables</td></tr></tbody></table><h2 id="composite-data-type" tabindex="-1"><a class="header-anchor" href="#composite-data-type" aria-hidden="true">#</a> Composite Data Type</h2><table><thead><tr><th>Function</th><th>Description</th></tr></thead><tbody><tr><td>bytearray()</td><td>Creates and returns an object of the bytearray class</td></tr><tr><td>bytes()</td><td>Creates and returns a bytes object (similar to bytearray, but immutable)</td></tr><tr><td>dict()</td><td>Creates a dict object</td></tr><tr><td>frozenset()</td><td>Creates a frozenset object</td></tr><tr><td>list()</td><td>Creates a list object</td></tr><tr><td>object()</td><td>Creates a new featureless object</td></tr><tr><td>set()</td><td>Creates a set object</td></tr><tr><td>tuple()</td><td>Creates a tuple object</td></tr></tbody></table><h2 id="classes-attributes-and-inheritance" tabindex="-1"><a class="header-anchor" href="#classes-attributes-and-inheritance" aria-hidden="true">#</a> Classes, Attributes, and Inheritance</h2><table><thead><tr><th>Function</th><th>Description</th></tr></thead><tbody><tr><td>classmethod()</td><td>Returns a class method for a function</td></tr><tr><td>delattr()</td><td>Deletes an attribute from an object</td></tr><tr><td>getattr()</td><td>Returns the value of a named attribute of an object</td></tr><tr><td>hasattr()</td><td>Returns True if an object has a given attribute</td></tr><tr><td>isinstance()</td><td>Determines whether an object is an instance of a given class</td></tr><tr><td>issubclass()</td><td>Determines whether a class is a subclass of a given class</td></tr><tr><td>property()</td><td>Returns a property value of a class</td></tr><tr><td>setattr()</td><td>Sets the value of a named attribute of an object</td></tr><tr><td>super()</td><td>Returns a proxy object that delegates method calls to a parent or sibling class</td></tr></tbody></table><h2 id="input-output" tabindex="-1"><a class="header-anchor" href="#input-output" aria-hidden="true">#</a> Input/Output</h2><table><thead><tr><th>Function</th><th>Description</th></tr></thead><tbody><tr><td>format()</td><td>Converts a value to a formatted representation</td></tr><tr><td>input()</td><td>Reads input from the console</td></tr><tr><td>open()</td><td>Opens a file and returns a file object</td></tr><tr><td>print()</td><td>Prints to a text stream or the console</td></tr></tbody></table><h2 id="variables-references-and-scope" tabindex="-1"><a class="header-anchor" href="#variables-references-and-scope" aria-hidden="true">#</a> Variables, References, and Scope</h2><table><thead><tr><th>Function</th><th>Description</th></tr></thead><tbody><tr><td>dir()</td><td>Returns a list of names in current local scope or a list of object attributes</td></tr><tr><td>globals()</td><td>Returns a dictionary representing the current global symbol table</td></tr><tr><td>id()</td><td>Returns the identity of an object</td></tr><tr><td>locals()</td><td>Updates and returns a dictionary representing current local symbol table</td></tr><tr><td>vars()</td><td>Returns <code>__dict__</code> attribute for a module, class, or object</td></tr></tbody></table><h2 id="miscellaneous" tabindex="-1"><a class="header-anchor" href="#miscellaneous" aria-hidden="true">#</a> Miscellaneous</h2><table><thead><tr><th>Function</th><th>Description</th></tr></thead><tbody><tr><td>callable()</td><td>Returns True if object appears callable</td></tr><tr><td>compile()</td><td>Compiles source into a code or AST object</td></tr><tr><td>eval()</td><td>Evaluates a Python expression</td></tr><tr><td>exec()</td><td>Implements dynamic execution of Python code</td></tr><tr><td>hash()</td><td>Returns the hash value of an object</td></tr><tr><td>help()</td><td>Invokes the built-in help system</td></tr><tr><td>memoryview()</td><td>Returns a memory view object</td></tr><tr><td>staticmethod()</td><td>Returns a static method for a function</td></tr><tr><td><code>__import__()</code></td><td>Invoked by the import statement</td></tr></tbody></table><p>参考: https://realpython.com/python-data-types/</p>',18),s=[n];function o(i,c){return e(),r("div",null,s)}const u=t(a,[["render",o],["__file","内置方法(buildinfunc).html.vue"]]);export{u as default};
