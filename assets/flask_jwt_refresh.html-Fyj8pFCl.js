const n=JSON.parse(`{"key":"v-774e2d6c","path":"/%E6%9C%AA%E5%88%86%E7%B1%BB/%E5%90%8E%E7%AB%AF/flask/flask_jwt/flask_jwt_refresh.html","title":"jwt_refresh","lang":"zh-CN","frontmatter":{"description":"jwt_refresh refresh token的作用是刷新access token. 因为一直使用同一个access token在网络中传输, 可能会被截获. 偶尔使用一次refresh token会降低风险. access_token只能用于携带访问，并不能用于刷新token；同理refresh_token只能用于刷新，不能用于访问数据。 服务端代码 from flask_jwt_extended import create_access_token from flask_jwt_extended import create_refresh_token from flask_jwt_extended import get_jwt_identity from flask_jwt_extended import jwt_required from flask_jwt_extended import JWTManager from datetime import timedelta from flask import Flask from flask import jsonify app = Flask(__name__) app.config['JWT_SECRET_KEY'] = 'salt' # 加密盐值 ## 统一管理token的失效时间 app.config['JWT_ACCESS_TOKEN_EXPIRES'] = timedelta(hours=1) # 设置access_token的有效时间 app.config[\\"JWT_REFRESH_TOKEN_EXPIRES\\"] = timedelta(days=1) # 设置refresh_token的有效时间 jwt = JWTManager(app) @app.route(\\"/login\\", methods=[\\"POST\\"]) def login(): access_token = create_access_token(identity={'user': 'access'})) # type=access refresh_token = create_refresh_token(identity={'user': 'refresh'}) # type=refresh return jsonify(access_token=access_token, refresh_token=refresh_token) @app.route(\\"/refresh\\", methods=[\\"GET\\"]) @jwt_required(refresh=True) # 必须是type=refresh token才能访问 def refresh(): identity = get_jwt_identity() access_token = create_access_token(identity=identity) return jsonify(access_token=access_token) @app.route(\\"/protected\\", methods=[\\"GET\\"]) @jwt_required() def protected(): current_user = get_jwt_identity() return jsonify(current_user=current_user) if __name__ == \\"__main__\\": app.run()","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/%E6%9C%AA%E5%88%86%E7%B1%BB/%E5%90%8E%E7%AB%AF/flask/flask_jwt/flask_jwt_refresh.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"jwt_refresh"}],["meta",{"property":"og:description","content":"jwt_refresh refresh token的作用是刷新access token. 因为一直使用同一个access token在网络中传输, 可能会被截获. 偶尔使用一次refresh token会降低风险. access_token只能用于携带访问，并不能用于刷新token；同理refresh_token只能用于刷新，不能用于访问数据。 服务端代码 from flask_jwt_extended import create_access_token from flask_jwt_extended import create_refresh_token from flask_jwt_extended import get_jwt_identity from flask_jwt_extended import jwt_required from flask_jwt_extended import JWTManager from datetime import timedelta from flask import Flask from flask import jsonify app = Flask(__name__) app.config['JWT_SECRET_KEY'] = 'salt' # 加密盐值 ## 统一管理token的失效时间 app.config['JWT_ACCESS_TOKEN_EXPIRES'] = timedelta(hours=1) # 设置access_token的有效时间 app.config[\\"JWT_REFRESH_TOKEN_EXPIRES\\"] = timedelta(days=1) # 设置refresh_token的有效时间 jwt = JWTManager(app) @app.route(\\"/login\\", methods=[\\"POST\\"]) def login(): access_token = create_access_token(identity={'user': 'access'})) # type=access refresh_token = create_refresh_token(identity={'user': 'refresh'}) # type=refresh return jsonify(access_token=access_token, refresh_token=refresh_token) @app.route(\\"/refresh\\", methods=[\\"GET\\"]) @jwt_required(refresh=True) # 必须是type=refresh token才能访问 def refresh(): identity = get_jwt_identity() access_token = create_access_token(identity=identity) return jsonify(access_token=access_token) @app.route(\\"/protected\\", methods=[\\"GET\\"]) @jwt_required() def protected(): current_user = get_jwt_identity() return jsonify(current_user=current_user) if __name__ == \\"__main__\\": app.run()"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-25T13:46:58.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2023-11-25T13:46:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"jwt_refresh\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-25T13:46:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[{"level":2,"title":"服务端代码","slug":"服务端代码","link":"#服务端代码","children":[]},{"level":2,"title":"access token直接访问受保护的接口/protected","slug":"access-token直接访问受保护的接口-protected","link":"#access-token直接访问受保护的接口-protected","children":[]},{"level":2,"title":"当access token过期后, 可以使用refresh token到/refresh接口重新获得access token","slug":"当access-token过期后-可以使用refresh-token到-refresh接口重新获得access-token","link":"#当access-token过期后-可以使用refresh-token到-refresh接口重新获得access-token","children":[]},{"level":2,"title":"access token不能访问/refresh接口","slug":"access-token不能访问-refresh接口","link":"#access-token不能访问-refresh接口","children":[]},{"level":2,"title":"refresh token不能访问/protected接口","slug":"refresh-token不能访问-protected接口","link":"#refresh-token不能访问-protected接口","children":[]}],"git":{"createdTime":1700920018000,"updatedTime":1700920018000,"contributors":[{"name":"claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":1.57,"words":472},"filePathRelative":"未分类/后端/flask/flask_jwt/flask_jwt_refresh.md","localizedDate":"2023年11月25日","excerpt":"<h1> jwt_refresh</h1>\\n<p>refresh token的作用是刷新access token. 因为一直使用同一个access token在网络中传输, 可能会被截获. 偶尔使用一次refresh token会降低风险.\\naccess_token只能用于携带访问，并不能用于刷新token；同理refresh_token只能用于刷新，不能用于访问数据。</p>\\n<h2> 服务端代码</h2>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">from</span> flask_jwt_extended <span class=\\"token keyword\\">import</span> create_access_token\\n<span class=\\"token keyword\\">from</span> flask_jwt_extended <span class=\\"token keyword\\">import</span> create_refresh_token\\n<span class=\\"token keyword\\">from</span> flask_jwt_extended <span class=\\"token keyword\\">import</span> get_jwt_identity\\n<span class=\\"token keyword\\">from</span> flask_jwt_extended <span class=\\"token keyword\\">import</span> jwt_required\\n<span class=\\"token keyword\\">from</span> flask_jwt_extended <span class=\\"token keyword\\">import</span> JWTManager\\n\\n<span class=\\"token keyword\\">from</span> datetime <span class=\\"token keyword\\">import</span> timedelta\\n<span class=\\"token keyword\\">from</span> flask <span class=\\"token keyword\\">import</span> Flask\\n<span class=\\"token keyword\\">from</span> flask <span class=\\"token keyword\\">import</span> jsonify\\n\\napp <span class=\\"token operator\\">=</span> Flask<span class=\\"token punctuation\\">(</span>__name__<span class=\\"token punctuation\\">)</span>\\napp<span class=\\"token punctuation\\">.</span>config<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'JWT_SECRET_KEY'</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'salt'</span>  <span class=\\"token comment\\"># 加密盐值</span>\\n<span class=\\"token comment\\">## 统一管理token的失效时间</span>\\napp<span class=\\"token punctuation\\">.</span>config<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'JWT_ACCESS_TOKEN_EXPIRES'</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> timedelta<span class=\\"token punctuation\\">(</span>hours<span class=\\"token operator\\">=</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span>  <span class=\\"token comment\\"># 设置access_token的有效时间</span>\\napp<span class=\\"token punctuation\\">.</span>config<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">\\"JWT_REFRESH_TOKEN_EXPIRES\\"</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> timedelta<span class=\\"token punctuation\\">(</span>days<span class=\\"token operator\\">=</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span>  <span class=\\"token comment\\"># 设置refresh_token的有效时间</span>\\njwt <span class=\\"token operator\\">=</span> JWTManager<span class=\\"token punctuation\\">(</span>app<span class=\\"token punctuation\\">)</span>\\n\\n\\n<span class=\\"token decorator annotation punctuation\\">@app<span class=\\"token punctuation\\">.</span>route</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"/login\\"</span><span class=\\"token punctuation\\">,</span> methods<span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">[</span><span class=\\"token string\\">\\"POST\\"</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">def</span> <span class=\\"token function\\">login</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    access_token <span class=\\"token operator\\">=</span> create_access_token<span class=\\"token punctuation\\">(</span>identity<span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">{</span><span class=\\"token string\\">'user'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'access'</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>  <span class=\\"token comment\\"># type=access</span>\\n    refresh_token <span class=\\"token operator\\">=</span> create_refresh_token<span class=\\"token punctuation\\">(</span>identity<span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">{</span><span class=\\"token string\\">'user'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'refresh'</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>  <span class=\\"token comment\\"># type=refresh</span>\\n    <span class=\\"token keyword\\">return</span> jsonify<span class=\\"token punctuation\\">(</span>access_token<span class=\\"token operator\\">=</span>access_token<span class=\\"token punctuation\\">,</span> refresh_token<span class=\\"token operator\\">=</span>refresh_token<span class=\\"token punctuation\\">)</span>\\n\\n\\n<span class=\\"token decorator annotation punctuation\\">@app<span class=\\"token punctuation\\">.</span>route</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"/refresh\\"</span><span class=\\"token punctuation\\">,</span> methods<span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">[</span><span class=\\"token string\\">\\"GET\\"</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token decorator annotation punctuation\\">@jwt_required</span><span class=\\"token punctuation\\">(</span>refresh<span class=\\"token operator\\">=</span><span class=\\"token boolean\\">True</span><span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\"># 必须是type=refresh token才能访问</span>\\n<span class=\\"token keyword\\">def</span> <span class=\\"token function\\">refresh</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    identity <span class=\\"token operator\\">=</span> get_jwt_identity<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n    access_token <span class=\\"token operator\\">=</span> create_access_token<span class=\\"token punctuation\\">(</span>identity<span class=\\"token operator\\">=</span>identity<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">return</span> jsonify<span class=\\"token punctuation\\">(</span>access_token<span class=\\"token operator\\">=</span>access_token<span class=\\"token punctuation\\">)</span>\\n\\n\\n<span class=\\"token decorator annotation punctuation\\">@app<span class=\\"token punctuation\\">.</span>route</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"/protected\\"</span><span class=\\"token punctuation\\">,</span> methods<span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">[</span><span class=\\"token string\\">\\"GET\\"</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token decorator annotation punctuation\\">@jwt_required</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">def</span> <span class=\\"token function\\">protected</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    current_user <span class=\\"token operator\\">=</span> get_jwt_identity<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">return</span> jsonify<span class=\\"token punctuation\\">(</span>current_user<span class=\\"token operator\\">=</span>current_user<span class=\\"token punctuation\\">)</span>\\n\\n\\n<span class=\\"token keyword\\">if</span> __name__ <span class=\\"token operator\\">==</span> <span class=\\"token string\\">\\"__main__\\"</span><span class=\\"token punctuation\\">:</span>\\n    app<span class=\\"token punctuation\\">.</span>run<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"王新宇"},"autoDesc":true}`);export{n as data};
