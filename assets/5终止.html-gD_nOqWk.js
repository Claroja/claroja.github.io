const n=JSON.parse('{"key":"v-2bbfad20","path":"/4%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/2c%E8%AF%AD%E8%A8%80/9%E7%BA%BF%E7%A8%8B/5%E7%BB%88%E6%AD%A2.html","title":"分离","lang":"zh-CN","frontmatter":{"description":"杀死线程 pthread_cancel 杀死(取消)线程\\t\\t\\t其作用，对应进程中 kill() 函数。 int pthread_cancel(pthread_t thread);\\t 成功：0；失败：错误号 #include &lt;stdio.h&gt; #include &lt;pthread.h&gt; #include &lt;unistd.h&gt; void *tfn(void *arg)//线程函数 { \\tprintf(\\"线程 Thread_ID = %lu\\\\n\\", pthread_self()); \\tsleep(5); \\treturn NULL; } int main(void) { \\tpthread_t tid; \\tpthread_create(&amp;tid, NULL, tfn, NULL);//创建线程 \\tsleep(5); \\tpthread_cancel(tid);//杀死线程 \\tvoid *ret; \\tpthread_join(tid,&amp;ret);//线程回收 \\tprintf(\\"ret return %d\\\\n\\", (int)ret); \\treturn 0; }","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/4%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/2c%E8%AF%AD%E8%A8%80/9%E7%BA%BF%E7%A8%8B/5%E7%BB%88%E6%AD%A2.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"分离"}],["meta",{"property":"og:description","content":"杀死线程 pthread_cancel 杀死(取消)线程\\t\\t\\t其作用，对应进程中 kill() 函数。 int pthread_cancel(pthread_t thread);\\t 成功：0；失败：错误号 #include &lt;stdio.h&gt; #include &lt;pthread.h&gt; #include &lt;unistd.h&gt; void *tfn(void *arg)//线程函数 { \\tprintf(\\"线程 Thread_ID = %lu\\\\n\\", pthread_self()); \\tsleep(5); \\treturn NULL; } int main(void) { \\tpthread_t tid; \\tpthread_create(&amp;tid, NULL, tfn, NULL);//创建线程 \\tsleep(5); \\tpthread_cancel(tid);//杀死线程 \\tvoid *ret; \\tpthread_join(tid,&amp;ret);//线程回收 \\tprintf(\\"ret return %d\\\\n\\", (int)ret); \\treturn 0; }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-24T12:46:58.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2025-02-24T12:46:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"分离\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-24T12:46:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[],"git":{"createdTime":1740401218000,"updatedTime":1740401218000,"contributors":[{"name":"Claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":0.68,"words":203},"filePathRelative":"4编程语言/2c语言/9线程/5终止.md","localizedDate":"2025年2月24日","excerpt":"<p>杀死线程\\npthread_cancel 杀死(取消)线程\\t\\t\\t其作用，对应进程中 kill() 函数。</p>\\n<p><code>int pthread_cancel(pthread_t thread);\\t</code>\\n成功：0；失败：错误号</p>\\n<div class=\\"language-c line-numbers-mode\\" data-ext=\\"c\\"><pre class=\\"language-c\\"><code><span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;stdio.h&gt;</span></span>\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;pthread.h&gt;</span></span>\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;unistd.h&gt;</span></span>\\n\\n<span class=\\"token keyword\\">void</span> <span class=\\"token operator\\">*</span><span class=\\"token function\\">tfn</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">void</span> <span class=\\"token operator\\">*</span>arg<span class=\\"token punctuation\\">)</span><span class=\\"token comment\\">//线程函数</span>\\n<span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token function\\">printf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"线程 Thread_ID = %lu\\\\n\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">pthread_self</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token function\\">sleep</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">5</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token keyword\\">return</span> <span class=\\"token constant\\">NULL</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">int</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">void</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token class-name\\">pthread_t</span> tid<span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token function\\">pthread_create</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">&amp;</span>tid<span class=\\"token punctuation\\">,</span> <span class=\\"token constant\\">NULL</span><span class=\\"token punctuation\\">,</span> tfn<span class=\\"token punctuation\\">,</span> <span class=\\"token constant\\">NULL</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//创建线程</span>\\n\\t<span class=\\"token function\\">sleep</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">5</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token function\\">pthread_cancel</span><span class=\\"token punctuation\\">(</span>tid<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//杀死线程</span>\\n\\t<span class=\\"token keyword\\">void</span> <span class=\\"token operator\\">*</span>ret<span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token function\\">pthread_join</span><span class=\\"token punctuation\\">(</span>tid<span class=\\"token punctuation\\">,</span><span class=\\"token operator\\">&amp;</span>ret<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//线程回收</span>\\n\\t<span class=\\"token function\\">printf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"ret return %d\\\\n\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span><span class=\\"token punctuation\\">)</span>ret<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n\\t<span class=\\"token keyword\\">return</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"王新宇"},"autoDesc":true}');export{n as data};
