import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as t,c as i,a as o}from"./app-7knaTE3M.js";const e="/assets/1-GRNm2Ppn.png",l="/assets/2-RufDyqqx.png",r="/assets/3-b-TLtV9T.png",s="/assets/4-aRN976ab.png",n="/assets/5-bc2OZyJb.png",c={},p=o('<h2 id="bootstrapping" tabindex="-1"><a class="header-anchor" href="#bootstrapping" aria-hidden="true">#</a> Bootstrapping</h2><p>Bootstrapping是随机有放回的抽样. 如下图, 训练集中有5个数据, Cat, Dog, Rat, Cow, Ant. 开始抽样:</p><ol><li>设定抽样的样本集大小以及样本集个数. 这里样本集大小为5, 样本个数为3.</li><li>随机收取数据记录</li><li>将收取后的数据记录放回</li><li>重复2~3直到满足样本集大小为5</li><li>重复2~4直到满足样本集个数为3</li></ol><figure><img src="'+e+'" alt="alt text" tabindex="0" loading="lazy"><figcaption>alt text</figcaption></figure><h2 id="out-of-bag-sample" tabindex="-1"><a class="header-anchor" href="#out-of-bag-sample" aria-hidden="true">#</a> Out-Of-Bag Sample</h2><p>样本集1中没有包含Rat和Cat, 样本集2中没有包含Cat, 样本集3中包含了所有数据记录. 没有被包含的记录我们称为Out-Of-Bag记录. <img src="'+l+'" alt="alt text" loading="lazy"></p><h2 id="out-of-bag-score-oob-score" tabindex="-1"><a class="header-anchor" href="#out-of-bag-score-oob-score" aria-hidden="true">#</a> Out-of-Bag Score (OOB_Score)</h2><p>当我们使用cross-validation technique进行验证时, 验证集上的数据已经用来训练过, 既又数据泄露, 因此会有大的方差. 使用OOB_Score则可以避免这个问题.</p><p>假设有完整的数据集如下, 通过Animals的类型和大小(Size), 来预测能不能被驯化(Pet)?</p><figure><img src="'+r+'" alt="alt text" tabindex="0" loading="lazy"><figcaption>alt text</figcaption></figure><p>通过Bootstrapping取样得到数据集DT_1. 在DT_1中Rat和Cat没有被抽样到, 他们是DT_1的OOB.我们将使用DT_1的数据来预测Rat和Cat. 注意, 这里在训练DT_1时, Rat和Cat没有被使用, 为泄露.</p><figure><img src="'+s+'" alt="alt text" tabindex="0" loading="lazy"><figcaption>alt text</figcaption></figure><p>假设, 抽样集DT_3, DT_7, DT_100也都没有抽到Rat, 将这些抽样集训练的模型来预测Rat. 可以看到, 虽然这些抽样集都没有Rat的数据, 但多数模型还是预测对了, 最后进行投票, 得出正确结论.</p><figure><img src="'+n+'" alt="alt text" tabindex="0" loading="lazy"><figcaption>alt text</figcaption></figure><p>同样的, 每一条数据都会使用OOB抽样集来预测, 得到最终的预测结果. OOB_score就是正确预测的记录数.</p><h2 id="oob的优缺点" tabindex="-1"><a class="header-anchor" href="#oob的优缺点" aria-hidden="true">#</a> OOB的优缺点</h2><ol><li>优点 <ol><li>没有数据泄漏问题</li><li>低的方差</li><li>更好的预测模型</li><li>计算量较少</li></ol></li><li>缺点 <ol><li>计算时间较长</li></ol></li></ol><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2><ol><li>https://www.analyticsvidhya.com/blog/2020/12/out-of-bag-oob-score-in-the-random-forest-algorithm/</li></ol>',19),_=[p];function g(d,h){return t(),i("div",null,_)}const b=a(c,[["render",g],["__file","3_1随机森林理论_OOB.html.vue"]]);export{b as default};
