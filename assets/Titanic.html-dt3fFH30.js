import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as c,c as l,b as n,d as s,e as t,a as p}from"./app-7knaTE3M.js";const i="/assets/1-TXRa5UTd.png",u="/assets/2-Mr-5ZaXz.png",k="/assets/3-1ib_FiY1.png",r="/assets/5-I0VSmYi3.png",d="/assets/6-HPP_LBKL.png",v="/assets/7-ZM4LZ2XG.png",m="/assets/12-Af2US_6u.png",b={},g=n("h2",{id:"业务理解",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#业务理解","aria-hidden":"true"},"#"),s(" 业务理解")],-1),_=n("p",null,"泰坦尼克号于1909年3月31日在爱尔兰动工建造，1911年5月31日下水，次年4月2日完工试航。1912年4月10日她从英国南安普顿出发，途径法国瑟堡和爱尔兰昆士敦，驶向美国纽约。在14日晚23时40分左右，泰坦尼克号与一座冰山相撞，导致船体裂缝进水。次日凌晨2时20分左右，泰坦尼克号断为两截后沉入大西洋，其搭载的2224名船员及乘客，在本次海难中逾1500人丧生。",-1),f={href:"https://www.kaggle.com/c/titanic",target:"_blank",rel:"noopener noreferrer"},h=n("h2",{id:"数据理解",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#数据理解","aria-hidden":"true"},"#"),s(" 数据理解")],-1),y={id:"字段",tabindex:"-1"},x=n("a",{class:"header-anchor",href:"#字段","aria-hidden":"true"},"#",-1),S={href:"https://www.kaggle.com/c/titanic/data",target:"_blank",rel:"noopener noreferrer"},w=p(`<ol><li>PassengerId: 行唯一标识, 对目标没有作用</li><li>Survived: 要预测的目标变量(target variable), 0 或 1 <ol><li>1 = Yes(生还)</li><li>0 = No(未生还)</li></ol></li><li>Pclass: 乘客舱位的经济等级, Ordinal: <ol><li>1 = Upper Class(上等舱)</li><li>2 = Middle Class(中等舱)</li><li>3 = Lower Class(低等舱)</li></ol></li><li>Name:</li><li>Sex: 性别, Categorical</li><li>Age: 年龄, 以年为单位, Numerical</li><li>SibSp: siblings and spouse, 乘客的兄弟姐妹和配偶的总数, Numerical</li><li>Parch: parents and children, 乘客的孩子和父母的总数(一些孩子和保姆一起, 所以Parch=0), Numerical</li><li>Ticket: 乘客的票号, Categorical</li><li>Fare: 乘客的乘船费用, Numerical</li><li>Cabin: 乘客的区域号, Categorical</li><li>Embarked: 登船的地点, Categorical <ol><li>C = Cherbourg</li><li>Q = Queenstown</li><li>S = Southampton</li></ol></li></ol><h3 id="数据形状" tabindex="-1"><a class="header-anchor" href="#数据形状" aria-hidden="true">#</a> 数据形状</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li><p>训练集有891行, 11个特征, 1个目标</p><table><thead><tr><th>PassengerId</th><th>Survived</th><th>Pclass</th><th>Name</th><th>Sex</th><th>Age</th><th>SibSp</th><th>Parch</th><th>Ticket</th><th>Fare</th><th>Cabin</th><th>Embarked</th></tr></thead><tbody><tr><td>690</td><td>1</td><td>1</td><td>Madill, Miss. Georgette Alexandra</td><td>female</td><td>15.0</td><td>0</td><td>1</td><td>24160</td><td>211.3375</td><td>B5</td><td>S</td></tr><tr><td>526</td><td>0</td><td>3</td><td>Farrell, Mr. James</td><td>male</td><td>40.5</td><td>0</td><td>0</td><td>367232</td><td>7.7500</td><td>NaN</td><td>Q</td></tr><tr><td>279</td><td>0</td><td>3</td><td>Rice, Master. Eric</td><td>male</td><td>7.0</td><td>4</td><td>1</td><td>382652</td><td>29.1250</td><td>NaN</td><td>Q</td></tr></tbody></table></li><li><p>测试集有418行, 11个特征, 目标列为空</p><table><thead><tr><th>PassengerId</th><th>Pclass</th><th>Name</th><th>Sex</th><th>Age</th><th>SibSp</th><th>Parch</th><th>Ticket</th><th>Fare</th><th>Cabin</th><th>Embarked</th></tr></thead><tbody><tr><td>1287</td><td>1</td><td>Smith, Mrs. Lucien Philip (Mary Eloise Hughes)</td><td>female</td><td>18.0</td><td>1</td><td>0</td><td>13695</td><td>60.0000</td><td>C31</td><td>S</td></tr><tr><td>1202</td><td>3</td><td>Cacic, Mr. Jego Grga</td><td>male</td><td>18.0</td><td>0</td><td>0</td><td>315091</td><td>8.6625</td><td>NaN</td><td>S</td></tr><tr><td>1095</td><td>2</td><td>Quick, Miss. Winifred Vera</td><td>female</td><td>8.0</td><td>1</td><td>1</td><td>26360</td><td>26.0000</td><td>NaN</td><td>S</td></tr></tbody></table></li></ol><h3 id="异常值查看" tabindex="-1"><a class="header-anchor" href="#异常值查看" aria-hidden="true">#</a> 异常值查看</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>df_train <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&#39;./kaggle/input/titanic/train.csv&#39;</span><span class="token punctuation">)</span>
df_train<span class="token punctuation">[</span><span class="token string">&#39;dataset&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;train&#39;</span>
df_test <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&#39;./kaggle/input/titanic/test.csv&#39;</span><span class="token punctuation">)</span>
df_test<span class="token punctuation">[</span><span class="token string">&#39;dataset&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;test&#39;</span>
df_all <span class="token operator">=</span> pd<span class="token punctuation">.</span>concat<span class="token punctuation">(</span><span class="token punctuation">[</span>df_train<span class="token punctuation">,</span> df_test<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span>drop<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

df_all<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Age/Cabin/Embarked/Fare四项数据有缺失值，其中Cabin字段缺失近四分之三的数据。</p><h3 id="查看特征与标签间关系" tabindex="-1"><a class="header-anchor" href="#查看特征与标签间关系" aria-hidden="true">#</a> 查看特征与标签间关系</h3><h4 id="embarked" tabindex="-1"><a class="header-anchor" href="#embarked" aria-hidden="true">#</a> Embarked</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>df_train<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;Embarked&#39;</span><span class="token punctuation">,</span> group_keys<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> <span class="token builtin">len</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>x<span class="token punctuation">[</span><span class="token string">&#39;Survived&#39;</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token builtin">len</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li>Embarked为&quot;C&quot;的乘客，其生存率为0.55</li><li>Embarked为&quot;Q&quot;的乘客，其生存率为0.39</li><li>Embarked为&quot;S&quot;的乘客，其生存率为0.34</li></ol><p>法国登船乘客生存率较高, 可能是因为法国登船的人, 会乘坐Pclass=1的舱位</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>df_all_count <span class="token operator">=</span> df_all<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Embarked&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;Pclass&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&#39;PassengerId&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>rename<span class="token punctuation">(</span>columns<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;PassengerId&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Count&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span><span class="token punctuation">)</span>
df_all_count<span class="token punctuation">[</span><span class="token string">&#39;Embarked_sum&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df_all_count<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;Embarked&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;Count&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>transform<span class="token punctuation">(</span><span class="token builtin">sum</span><span class="token punctuation">)</span>
df_all_count<span class="token punctuation">[</span><span class="token string">&#39;Pclass_ratio&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df_all_count<span class="token punctuation">[</span><span class="token string">&#39;Count&#39;</span><span class="token punctuation">]</span><span class="token operator">/</span>df_all_count<span class="token punctuation">[</span><span class="token string">&#39;Embarked_sum&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parch" tabindex="-1"><a class="header-anchor" href="#parch" aria-hidden="true">#</a> Parch</h4><p>当乘客同行的父母及子女数量适中时，生存率较高</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>df_train<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;Parch&#39;</span><span class="token punctuation">,</span> group_keys<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> <span class="token builtin">len</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>x<span class="token punctuation">[</span><span class="token string">&#39;Survived&#39;</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token builtin">len</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="sibsp" tabindex="-1"><a class="header-anchor" href="#sibsp" aria-hidden="true">#</a> SibSp</h4><p>当乘客同行的同辈数量适中时生存率较高</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>df_train<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;SibSp&#39;</span><span class="token punctuation">,</span> group_keys<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> <span class="token builtin">len</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>x<span class="token punctuation">[</span><span class="token string">&#39;Survived&#39;</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token builtin">len</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="pclass" tabindex="-1"><a class="header-anchor" href="#pclass" aria-hidden="true">#</a> Pclass</h4><p>乘客客舱等级越高，生存率越高</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>df_train<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;Pclass&#39;</span><span class="token punctuation">,</span> group_keys<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> <span class="token builtin">len</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>x<span class="token punctuation">[</span><span class="token string">&#39;Survived&#39;</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token builtin">len</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="sex" tabindex="-1"><a class="header-anchor" href="#sex" aria-hidden="true">#</a> Sex</h4><p>女性的生存率远高于男性</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>df_train<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;Sex&#39;</span><span class="token punctuation">,</span> group_keys<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> <span class="token builtin">len</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>x<span class="token punctuation">[</span><span class="token string">&#39;Survived&#39;</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token builtin">len</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="age" tabindex="-1"><a class="header-anchor" href="#age" aria-hidden="true">#</a> Age</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>df_train<span class="token punctuation">[</span><span class="token string">&#39;Age_cut&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> pd<span class="token punctuation">.</span>cut<span class="token punctuation">(</span>df_train<span class="token punctuation">[</span><span class="token string">&#39;Age&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">)</span>
df_train<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;Age_cut&#39;</span><span class="token punctuation">,</span> group_keys<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> <span class="token number">0</span> <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token keyword">else</span> <span class="token builtin">len</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>x<span class="token punctuation">[</span><span class="token string">&#39;Survived&#39;</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token builtin">len</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="fare" tabindex="-1"><a class="header-anchor" href="#fare" aria-hidden="true">#</a> Fare</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>df_train<span class="token punctuation">[</span><span class="token string">&#39;Fare_cut&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> pd<span class="token punctuation">.</span>cut<span class="token punctuation">(</span>df_train<span class="token punctuation">[</span><span class="token string">&#39;Fare&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">)</span>
df_train<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;Fare_cut&#39;</span><span class="token punctuation">,</span> group_keys<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> <span class="token number">0</span> <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token keyword">else</span> <span class="token builtin">len</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>x<span class="token punctuation">[</span><span class="token string">&#39;Survived&#39;</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token builtin">len</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>fare的分布呈左偏的形态，其偏度skewness=4.37较大，说明数据偏移平均值较多，因此我们需要对数据进行对数化处理，防止数据权重分布不均匀。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#对数化处理fare值</span>
full<span class="token punctuation">[</span><span class="token string">&#39;Fare&#39;</span><span class="token punctuation">]</span><span class="token operator">=</span>full<span class="token punctuation">[</span><span class="token string">&#39;Fare&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> np<span class="token punctuation">.</span>log<span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token keyword">if</span> x<span class="token operator">&gt;</span><span class="token number">0</span> <span class="token keyword">else</span> <span class="token number">0</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="特征工程" tabindex="-1"><a class="header-anchor" href="#特征工程" aria-hidden="true">#</a> 特征工程</h2><p>对数据的缺失值、异常值进行处理，便于对数据进一步分析。本数据集有四个字段的数据存在缺失情况，即Cabin/Embarked/Fare/Age，未发现数据存在明显异常情况。其中Age字段缺失较多且为连续型数值，挖取更多特征后再填充缺失值。</p><h3 id="cabin缺失值填充" tabindex="-1"><a class="header-anchor" href="#cabin缺失值填充" aria-hidden="true">#</a> Cabin缺失值填充</h3><p>对Cabin缺失值进行处理，利用U（Unknown）填充缺失值</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>full<span class="token punctuation">[</span><span class="token string">&#39;Cabin&#39;</span><span class="token punctuation">]</span><span class="token operator">=</span>full<span class="token punctuation">[</span><span class="token string">&#39;Cabin&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>fillna<span class="token punctuation">(</span><span class="token string">&#39;U&#39;</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="embarked缺失值填充" tabindex="-1"><a class="header-anchor" href="#embarked缺失值填充" aria-hidden="true">#</a> Embarked缺失值填充</h3><p>众数填充</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>full<span class="token punctuation">[</span><span class="token string">&#39;Embarked&#39;</span><span class="token punctuation">]</span><span class="token operator">=</span>full<span class="token punctuation">[</span><span class="token string">&#39;Embarked&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>fillna<span class="token punctuation">(</span><span class="token string">&#39;S&#39;</span><span class="token punctuation">)</span> 

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fare缺失值填充" tabindex="-1"><a class="header-anchor" href="#fare缺失值填充" aria-hidden="true">#</a> Fare缺失值填充</h3><p>利用3等舱，登船港口为英国，舱位未知旅客的平均票价来填充缺失值。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>full<span class="token punctuation">[</span><span class="token string">&#39;Fare&#39;</span><span class="token punctuation">]</span><span class="token operator">=</span>full<span class="token punctuation">[</span><span class="token string">&#39;Fare&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>fillna<span class="token punctuation">(</span>full<span class="token punctuation">[</span><span class="token punctuation">(</span>full<span class="token punctuation">[</span><span class="token string">&#39;Pclass&#39;</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token punctuation">(</span>full<span class="token punctuation">[</span><span class="token string">&#39;Embarked&#39;</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">&#39;S&#39;</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token punctuation">(</span>full<span class="token punctuation">[</span><span class="token string">&#39;Cabin&#39;</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">&#39;U&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;Fare&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="name中的头衔信息-title" tabindex="-1"><a class="header-anchor" href="#name中的头衔信息-title" aria-hidden="true">#</a> Name中的头衔信息-Title</h3><p>旅客姓名数据中包含头衔信息，不同头衔也可以反映旅客的身份，而不同身份的旅客其生存率有可能会出现较大差异。头衔为&#39;Mr&#39;及&#39;Officer&#39;的乘客，生存率明显较低。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#构造新特征Title</span>
full<span class="token punctuation">[</span><span class="token string">&#39;Title&#39;</span><span class="token punctuation">]</span><span class="token operator">=</span>full<span class="token punctuation">[</span><span class="token string">&#39;Name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span>x<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

TitleDict<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
TitleDict<span class="token punctuation">[</span><span class="token string">&#39;Mr&#39;</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">&#39;Mr&#39;</span>
TitleDict<span class="token punctuation">[</span><span class="token string">&#39;Mlle&#39;</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">&#39;Miss&#39;</span>
TitleDict<span class="token punctuation">[</span><span class="token string">&#39;Miss&#39;</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">&#39;Miss&#39;</span>
TitleDict<span class="token punctuation">[</span><span class="token string">&#39;Master&#39;</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">&#39;Master&#39;</span>
TitleDict<span class="token punctuation">[</span><span class="token string">&#39;Jonkheer&#39;</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">&#39;Master&#39;</span>
TitleDict<span class="token punctuation">[</span><span class="token string">&#39;Mme&#39;</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">&#39;Mrs&#39;</span>
TitleDict<span class="token punctuation">[</span><span class="token string">&#39;Ms&#39;</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">&#39;Mrs&#39;</span>
TitleDict<span class="token punctuation">[</span><span class="token string">&#39;Mrs&#39;</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">&#39;Mrs&#39;</span>
TitleDict<span class="token punctuation">[</span><span class="token string">&#39;Don&#39;</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">&#39;Royalty&#39;</span>
TitleDict<span class="token punctuation">[</span><span class="token string">&#39;Sir&#39;</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">&#39;Royalty&#39;</span>
TitleDict<span class="token punctuation">[</span><span class="token string">&#39;the Countess&#39;</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">&#39;Royalty&#39;</span>
TitleDict<span class="token punctuation">[</span><span class="token string">&#39;Dona&#39;</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">&#39;Royalty&#39;</span>
TitleDict<span class="token punctuation">[</span><span class="token string">&#39;Lady&#39;</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">&#39;Royalty&#39;</span>
TitleDict<span class="token punctuation">[</span><span class="token string">&#39;Capt&#39;</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">&#39;Officer&#39;</span>
TitleDict<span class="token punctuation">[</span><span class="token string">&#39;Col&#39;</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">&#39;Officer&#39;</span>
TitleDict<span class="token punctuation">[</span><span class="token string">&#39;Major&#39;</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">&#39;Officer&#39;</span>
TitleDict<span class="token punctuation">[</span><span class="token string">&#39;Dr&#39;</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">&#39;Officer&#39;</span>
TitleDict<span class="token punctuation">[</span><span class="token string">&#39;Rev&#39;</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">&#39;Officer&#39;</span>

full<span class="token punctuation">[</span><span class="token string">&#39;Title&#39;</span><span class="token punctuation">]</span><span class="token operator">=</span>full<span class="token punctuation">[</span><span class="token string">&#39;Title&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span>TitleDict<span class="token punctuation">)</span>

full<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>full<span class="token punctuation">[</span><span class="token string">&#39;dataset&#39;</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">&#39;train&#39;</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;Title&#39;</span><span class="token punctuation">,</span> group_keys<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> <span class="token builtin">len</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>x<span class="token punctuation">[</span><span class="token string">&#39;Survived&#39;</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token builtin">len</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="familynum及familysize信息" tabindex="-1"><a class="header-anchor" href="#familynum及familysize信息" aria-hidden="true">#</a> FamilyNum及FamilySize信息</h2><p>将Parch及SibSp字段整合得到一名乘客同行家庭成员总人数FamilyNum的字段，再根据家庭成员具体人数的多少得到家庭规模FamilySize这个新字段。</p><p>家庭成员人数在2-4人时，乘客的生存率较高，当没有家庭成员同行或家庭成员人数过多时生存率较低。我们按照家庭成员人数多少，将家庭规模分为“小、中、大”三类：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>full<span class="token punctuation">[</span><span class="token string">&#39;familyNum&#39;</span><span class="token punctuation">]</span><span class="token operator">=</span>full<span class="token punctuation">[</span><span class="token string">&#39;Parch&#39;</span><span class="token punctuation">]</span><span class="token operator">+</span>full<span class="token punctuation">[</span><span class="token string">&#39;SibSp&#39;</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token number">1</span>

<span class="token keyword">def</span> <span class="token function">familysize</span><span class="token punctuation">(</span>familyNum<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> familyNum<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token number">0</span>
    <span class="token keyword">elif</span> <span class="token punctuation">(</span>familyNum<span class="token operator">&gt;=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token punctuation">(</span>familyNum<span class="token operator">&lt;=</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token number">1</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token number">2</span>

full<span class="token punctuation">[</span><span class="token string">&#39;familySize&#39;</span><span class="token punctuation">]</span><span class="token operator">=</span>full<span class="token punctuation">[</span><span class="token string">&#39;familyNum&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span>familysize<span class="token punctuation">)</span>
full<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>full<span class="token punctuation">[</span><span class="token string">&#39;dataset&#39;</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">&#39;train&#39;</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;familySize&#39;</span><span class="token punctuation">,</span> group_keys<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> <span class="token builtin">len</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>x<span class="token punctuation">[</span><span class="token string">&#39;Survived&#39;</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token builtin">len</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="cabin客舱类型信息-deck" tabindex="-1"><a class="header-anchor" href="#cabin客舱类型信息-deck" aria-hidden="true">#</a> Cabin客舱类型信息-Deck</h2><p>Cabin字段的首字母代表客舱的类型，也反映不同乘客群体的特点，可能也与乘客的生存率相关。提取Cabin字段首字母.当乘客的客舱类型为B/D/E时，生存率较高；当客舱类型为U/T时，生存率较低。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>
full<span class="token punctuation">[</span><span class="token string">&#39;Deck&#39;</span><span class="token punctuation">]</span><span class="token operator">=</span>full<span class="token punctuation">[</span><span class="token string">&#39;Cabin&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span>x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

full<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>full<span class="token punctuation">[</span><span class="token string">&#39;dataset&#39;</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">&#39;train&#39;</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;Deck&#39;</span><span class="token punctuation">,</span> group_keys<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> <span class="token builtin">len</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>x<span class="token punctuation">[</span><span class="token string">&#39;Survived&#39;</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token builtin">len</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="共票号乘客数量tickcot及tickgroup" tabindex="-1"><a class="header-anchor" href="#共票号乘客数量tickcot及tickgroup" aria-hidden="true">#</a> 共票号乘客数量TickCot及TickGroup</h2><p>当TickCot大小适中时，乘客生存率较高。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>
<span class="token comment">#提取各票号的乘客数量</span>

full<span class="token punctuation">[</span><span class="token string">&#39;TickCot&#39;</span><span class="token punctuation">]</span><span class="token operator">=</span>full<span class="token punctuation">[</span><span class="token string">&#39;Ticket&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span>full<span class="token punctuation">[</span><span class="token string">&#39;Ticket&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value_counts<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

full<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>full<span class="token punctuation">[</span><span class="token string">&#39;dataset&#39;</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">&#39;train&#39;</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;TickCot&#39;</span><span class="token punctuation">,</span> group_keys<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> <span class="token builtin">len</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>x<span class="token punctuation">[</span><span class="token string">&#39;Survived&#39;</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token builtin">len</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">#按照TickCot大小，将TickGroup分为三类。</span>
<span class="token keyword">def</span> <span class="token function">TickCountGroup</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>num<span class="token operator">&gt;=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token punctuation">(</span>num<span class="token operator">&lt;=</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token number">0</span>
    <span class="token keyword">elif</span> <span class="token punctuation">(</span>num<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">|</span><span class="token punctuation">(</span><span class="token punctuation">(</span>num<span class="token operator">&gt;=</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token punctuation">(</span>num<span class="token operator">&lt;=</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token number">1</span>
    <span class="token keyword">else</span> <span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token number">2</span>
<span class="token comment">#得到各位乘客TickGroup的类别</span>
full<span class="token punctuation">[</span><span class="token string">&#39;TickGroup&#39;</span><span class="token punctuation">]</span><span class="token operator">=</span>full<span class="token punctuation">[</span><span class="token string">&#39;TickCot&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span>TickCountGroup<span class="token punctuation">)</span>

full<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>full<span class="token punctuation">[</span><span class="token string">&#39;dataset&#39;</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">&#39;train&#39;</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;TickGroup&#39;</span><span class="token punctuation">,</span> group_keys<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> <span class="token builtin">len</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>x<span class="token punctuation">[</span><span class="token string">&#39;Survived&#39;</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token builtin">len</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="age缺失值填充-构建随机森林模型预测缺失的数据" tabindex="-1"><a class="header-anchor" href="#age缺失值填充-构建随机森林模型预测缺失的数据" aria-hidden="true">#</a> Age缺失值填充-构建随机森林模型预测缺失的数据</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>
<span class="token comment">#筛选数据集</span>
AgePre<span class="token operator">=</span>full<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&#39;Age&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;Parch&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;Pclass&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;SibSp&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;Title&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;familyNum&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;TickCot&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token comment">#进行one-hot编码</span>
AgePre<span class="token operator">=</span>pd<span class="token punctuation">.</span>get_dummies<span class="token punctuation">(</span>AgePre<span class="token punctuation">)</span>
ParAge<span class="token operator">=</span>pd<span class="token punctuation">.</span>get_dummies<span class="token punctuation">(</span>AgePre<span class="token punctuation">[</span><span class="token string">&#39;Parch&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>prefix<span class="token operator">=</span><span class="token string">&#39;Parch&#39;</span><span class="token punctuation">)</span>
SibAge<span class="token operator">=</span>pd<span class="token punctuation">.</span>get_dummies<span class="token punctuation">(</span>AgePre<span class="token punctuation">[</span><span class="token string">&#39;SibSp&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>prefix<span class="token operator">=</span><span class="token string">&#39;SibSp&#39;</span><span class="token punctuation">)</span>
PclAge<span class="token operator">=</span>pd<span class="token punctuation">.</span>get_dummies<span class="token punctuation">(</span>AgePre<span class="token punctuation">[</span><span class="token string">&#39;Pclass&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>prefix<span class="token operator">=</span><span class="token string">&#39;Pclass&#39;</span><span class="token punctuation">)</span>

AgePre<span class="token operator">=</span>pd<span class="token punctuation">.</span>concat<span class="token punctuation">(</span><span class="token punctuation">[</span>AgePre<span class="token punctuation">,</span>ParAge<span class="token punctuation">,</span>SibAge<span class="token punctuation">,</span>PclAge<span class="token punctuation">]</span><span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>


<span class="token comment">#拆分实验集和预测集</span>
AgeKnown<span class="token operator">=</span>AgePre<span class="token punctuation">[</span>AgePre<span class="token punctuation">[</span><span class="token string">&#39;Age&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>notnull<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
AgeUnKnown<span class="token operator">=</span>AgePre<span class="token punctuation">[</span>AgePre<span class="token punctuation">[</span><span class="token string">&#39;Age&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>isnull<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>

<span class="token comment">#生成实验数据的特征和标签</span>
AgeKnown_X<span class="token operator">=</span>AgeKnown<span class="token punctuation">.</span>drop<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Age&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
AgeKnown_y<span class="token operator">=</span>AgeKnown<span class="token punctuation">[</span><span class="token string">&#39;Age&#39;</span><span class="token punctuation">]</span>
<span class="token comment">#生成预测数据的特征</span>
AgeUnKnown_X<span class="token operator">=</span>AgeUnKnown<span class="token punctuation">.</span>drop<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Age&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>

<span class="token comment">#利用随机森林构建模型</span>
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>ensemble <span class="token keyword">import</span> RandomForestRegressor
rfr<span class="token operator">=</span>RandomForestRegressor<span class="token punctuation">(</span>random_state<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>n_estimators<span class="token operator">=</span><span class="token number">500</span><span class="token punctuation">,</span>n_jobs<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
rfr<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>AgeKnown_X<span class="token punctuation">,</span>AgeKnown_y<span class="token punctuation">)</span>
<span class="token comment">#预测年龄</span>
AgeUnKnown_y<span class="token operator">=</span>rfr<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>AgeUnKnown_X<span class="token punctuation">)</span>
<span class="token comment">#填充预测数据</span>
full<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>full<span class="token punctuation">[</span><span class="token string">&#39;Age&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>isnull<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">&#39;Age&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">=</span>AgeUnKnown_y

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="同组识别" tabindex="-1"><a class="header-anchor" href="#同组识别" aria-hidden="true">#</a> 同组识别</h2><p>虽然通过分析数据已有特征与标签的关系可以构建有效的预测模型，但是部分具有明显共同特征的用户可能与整体模型逻辑并不一致。如果将这部分具有同组效应的用户识别出来并对其数据加以修正，就可以有效提高模型的准确率。在Titancic案例中，我们主要探究相同姓氏的乘客是否存在明显的同组效应。</p><p>提取两部分数据，分别查看其“姓氏”是否存在同组效应（因为性别和年龄与乘客生存率关系最为密切，因此用这两个特征作为分类条件）：</p><ol><li>12岁以上男性：找出男性中同姓氏均获救的部分；</li><li>女性以及年龄在12岁以下儿童：找出女性及儿童中同姓氏均遇难的部分。</li></ol><p>男性同组效应分析：</p><p>大多数同姓氏的男性存在“同生共死”的特点，因此利用该同组效应，我们对生存率为1的姓氏里的男性数据进行修正，提升其预测为“可以幸存”的概率。</p><p>女性及儿童同组效应分析：</p><p>与男性组特征相似，女性及儿童也存在明显的“同生共死”的特点，因此利用同组效应，对生存率为0的姓氏里的女性及儿童数据进行修正，提升其预测为“并未幸存”的概率。</p><p>对数据集中这些姓氏的两组数据数据分别进行修正：</p><p>男性数据修正为：1、性别改为女；2、年龄改为5； 女性及儿童数据修正为：1、性别改为男；2、年龄改为60。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>
<span class="token comment">#提取乘客的姓氏及相应的乘客数</span>
full<span class="token punctuation">[</span><span class="token string">&#39;Surname&#39;</span><span class="token punctuation">]</span><span class="token operator">=</span>full<span class="token punctuation">[</span><span class="token string">&#39;Name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span>x<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
full<span class="token punctuation">[</span><span class="token string">&#39;SurnameNum&#39;</span><span class="token punctuation">]</span><span class="token operator">=</span>full<span class="token punctuation">[</span><span class="token string">&#39;Surname&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span>full<span class="token punctuation">[</span><span class="token string">&#39;Surname&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value_counts<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">#将数据分为两组</span>
MaleDf<span class="token operator">=</span>full<span class="token punctuation">[</span><span class="token punctuation">(</span>full<span class="token punctuation">[</span><span class="token string">&#39;Sex&#39;</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">&#39;male&#39;</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token punctuation">(</span>full<span class="token punctuation">[</span><span class="token string">&#39;Age&#39;</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token punctuation">(</span>full<span class="token punctuation">[</span><span class="token string">&#39;familyNum&#39;</span><span class="token punctuation">]</span><span class="token operator">&gt;=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
FemChildDf<span class="token operator">=</span>full<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token punctuation">(</span>full<span class="token punctuation">[</span><span class="token string">&#39;Sex&#39;</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">&#39;female&#39;</span><span class="token punctuation">)</span><span class="token operator">|</span><span class="token punctuation">(</span>full<span class="token punctuation">[</span><span class="token string">&#39;Age&#39;</span><span class="token punctuation">]</span><span class="token operator">&lt;=</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token punctuation">(</span>full<span class="token punctuation">[</span><span class="token string">&#39;familyNum&#39;</span><span class="token punctuation">]</span><span class="token operator">&gt;=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">]</span>

MSurNamDf<span class="token operator">=</span>MaleDf<span class="token punctuation">[</span><span class="token string">&#39;Survived&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>groupby<span class="token punctuation">(</span>MaleDf<span class="token punctuation">[</span><span class="token string">&#39;Surname&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span>

MSurNamDf<span class="token punctuation">.</span>value_counts<span class="token punctuation">(</span><span class="token punctuation">)</span>

MSurNamDict<span class="token operator">=</span>MSurNamDf<span class="token punctuation">[</span>MSurNamDf<span class="token punctuation">.</span>values<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>index

FCSurNamDf<span class="token operator">=</span>FemChildDf<span class="token punctuation">[</span><span class="token string">&#39;Survived&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>groupby<span class="token punctuation">(</span>FemChildDf<span class="token punctuation">[</span><span class="token string">&#39;Surname&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span>

FCSurNamDf<span class="token punctuation">.</span>value_counts<span class="token punctuation">(</span><span class="token punctuation">)</span>

FCSurNamDict<span class="token operator">=</span>FCSurNamDf<span class="token punctuation">[</span>FCSurNamDf<span class="token punctuation">.</span>values<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>index

<span class="token comment">#对数据集中这些姓氏的男性数据进行修正：1、性别改为女；2、年龄改为5。</span>
full<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">(</span>full<span class="token punctuation">[</span><span class="token string">&#39;Survived&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>isnull<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token punctuation">(</span>full<span class="token punctuation">[</span><span class="token string">&#39;Surname&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>isin<span class="token punctuation">(</span>MSurNamDict<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token punctuation">(</span>full<span class="token punctuation">[</span><span class="token string">&#39;Sex&#39;</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">&#39;male&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&#39;Age&#39;</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">5</span>
full<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">(</span>full<span class="token punctuation">[</span><span class="token string">&#39;Survived&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>isnull<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token punctuation">(</span>full<span class="token punctuation">[</span><span class="token string">&#39;Surname&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>isin<span class="token punctuation">(</span>MSurNamDict<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token punctuation">(</span>full<span class="token punctuation">[</span><span class="token string">&#39;Sex&#39;</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">&#39;male&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&#39;Sex&#39;</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">&#39;female&#39;</span>

<span class="token comment">#对数据集中这些姓氏的女性及儿童的数据进行修正：1、性别改为男；2、年龄改为60。</span>
full<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">(</span>full<span class="token punctuation">[</span><span class="token string">&#39;Survived&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>isnull<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token punctuation">(</span>full<span class="token punctuation">[</span><span class="token string">&#39;Surname&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>isin<span class="token punctuation">(</span>FCSurNamDict<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token punctuation">(</span><span class="token punctuation">(</span>full<span class="token punctuation">[</span><span class="token string">&#39;Sex&#39;</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">&#39;female&#39;</span><span class="token punctuation">)</span><span class="token operator">|</span><span class="token punctuation">(</span>full<span class="token punctuation">[</span><span class="token string">&#39;Age&#39;</span><span class="token punctuation">]</span><span class="token operator">&lt;=</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&#39;Age&#39;</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">60</span>
full<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">(</span>full<span class="token punctuation">[</span><span class="token string">&#39;Survived&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>isnull<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token punctuation">(</span>full<span class="token punctuation">[</span><span class="token string">&#39;Surname&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>isin<span class="token punctuation">(</span>FCSurNamDict<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token punctuation">(</span><span class="token punctuation">(</span>full<span class="token punctuation">[</span><span class="token string">&#39;Sex&#39;</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">&#39;female&#39;</span><span class="token punctuation">)</span><span class="token operator">|</span><span class="token punctuation">(</span>full<span class="token punctuation">[</span><span class="token string">&#39;Age&#39;</span><span class="token punctuation">]</span><span class="token operator">&lt;=</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&#39;Sex&#39;</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">&#39;male&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="筛选子集" tabindex="-1"><a class="header-anchor" href="#筛选子集" aria-hidden="true">#</a> 筛选子集</h2><p>在对数据进行分析处理的过程中，数据的维度更高了，为提升数据有效性需要对数据进行降维处理。通过找出与乘客生存率“Survived”相关性更高的特征，剔除重复的且相关性较低的特征，从而实现数据降维。</p><p>先人工初步筛除与标签预测明显不相关或相关度很低的特征，再查看剩余特征与标签之间的相关性大小做进一步降维。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>
<span class="token comment">#人工筛选</span>
fullSel<span class="token operator">=</span>full<span class="token punctuation">.</span>drop<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Cabin&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;Name&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;Ticket&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;PassengerId&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;Surname&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;SurnameNum&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token comment">#查看各特征与标签的相关性</span>
corrDf<span class="token operator">=</span>pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">)</span>
corrDf<span class="token operator">=</span>fullSel<span class="token punctuation">.</span>corr<span class="token punctuation">(</span><span class="token punctuation">)</span>
corrDf<span class="token punctuation">[</span><span class="token string">&#39;Survived&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span>ascending<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

fullSel<span class="token operator">=</span>fullSel<span class="token punctuation">.</span>drop<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;familyNum&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;SibSp&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;TickCot&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;Parch&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token comment">#one-hot编码</span>
fullSel<span class="token operator">=</span>pd<span class="token punctuation">.</span>get_dummies<span class="token punctuation">(</span>fullSel<span class="token punctuation">)</span>
PclassDf<span class="token operator">=</span>pd<span class="token punctuation">.</span>get_dummies<span class="token punctuation">(</span>full<span class="token punctuation">[</span><span class="token string">&#39;Pclass&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>prefix<span class="token operator">=</span><span class="token string">&#39;Pclass&#39;</span><span class="token punctuation">)</span>
TickGroupDf<span class="token operator">=</span>pd<span class="token punctuation">.</span>get_dummies<span class="token punctuation">(</span>full<span class="token punctuation">[</span><span class="token string">&#39;TickGroup&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>prefix<span class="token operator">=</span><span class="token string">&#39;TickGroup&#39;</span><span class="token punctuation">)</span>
familySizeDf<span class="token operator">=</span>pd<span class="token punctuation">.</span>get_dummies<span class="token punctuation">(</span>full<span class="token punctuation">[</span><span class="token string">&#39;familySize&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>prefix<span class="token operator">=</span><span class="token string">&#39;familySize&#39;</span><span class="token punctuation">)</span>

fullSel<span class="token operator">=</span>pd<span class="token punctuation">.</span>concat<span class="token punctuation">(</span><span class="token punctuation">[</span>fullSel<span class="token punctuation">,</span>PclassDf<span class="token punctuation">,</span>TickGroupDf<span class="token punctuation">,</span>familySizeDf<span class="token punctuation">]</span><span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="本文所需要依赖" tabindex="-1"><a class="header-anchor" href="#本文所需要依赖" aria-hidden="true">#</a> 本文所需要依赖</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
<span class="token keyword">import</span> seaborn <span class="token keyword">as</span> sns
sns<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span>style<span class="token operator">=</span><span class="token string">&quot;darkgrid&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>ensemble <span class="token keyword">import</span> RandomForestClassifier
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">import</span> OneHotEncoder<span class="token punctuation">,</span> LabelEncoder<span class="token punctuation">,</span> StandardScaler
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">import</span> roc_curve<span class="token punctuation">,</span> auc
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>model_selection <span class="token keyword">import</span> StratifiedKFold
<span class="token keyword">import</span> string
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="读取数据并进行基本探索" tabindex="-1"><a class="header-anchor" href="#读取数据并进行基本探索" aria-hidden="true">#</a> 读取数据并进行基本探索</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
<span class="token keyword">import</span> seaborn <span class="token keyword">as</span> sns
sns<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span>style<span class="token operator">=</span><span class="token string">&quot;darkgrid&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>ensemble <span class="token keyword">import</span> RandomForestClassifier
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">import</span> OneHotEncoder<span class="token punctuation">,</span> LabelEncoder<span class="token punctuation">,</span> StandardScaler
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">import</span> roc_curve<span class="token punctuation">,</span> auc
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>model_selection <span class="token keyword">import</span> StratifiedKFold
<span class="token keyword">import</span> string


df_train <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&#39;./data/train.csv&#39;</span><span class="token punctuation">)</span>
df_train<span class="token punctuation">[</span><span class="token string">&#39;dataset&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;train&#39;</span>
df_test <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&#39;./data/test.csv&#39;</span><span class="token punctuation">)</span>
df_test<span class="token punctuation">[</span><span class="token string">&#39;dataset&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;test&#39;</span>
df_all <span class="token operator">=</span> pd<span class="token punctuation">.</span>concat<span class="token punctuation">(</span><span class="token punctuation">[</span>df_train<span class="token punctuation">,</span> df_test<span class="token punctuation">]</span><span class="token punctuation">,</span> sort<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span>drop<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>


df_all_col <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">)</span>
df_all_col<span class="token punctuation">[</span><span class="token string">&#39;dtypes&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df_all<span class="token punctuation">.</span>dtypes
df_all_col<span class="token punctuation">[</span><span class="token string">&#39;missing&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df_all<span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> col<span class="token punctuation">:</span> col<span class="token punctuation">.</span>isnull<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span><span class="token string">&#39;int64&#39;</span><span class="token punctuation">)</span>
df_all_col<span class="token punctuation">[</span><span class="token string">&#39;missing_ratio&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df_all<span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> col<span class="token punctuation">:</span> col<span class="token punctuation">.</span>isnull<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token builtin">len</span><span class="token punctuation">(</span>col<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span><span class="token string">&#39;float64&#39;</span><span class="token punctuation">)</span>


options <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;Age&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;num&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;Cabin&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;cat&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;Embarked&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;cat&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;Fare&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;num&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;Name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;cat&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;Parch&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;rank&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;PassengerId&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;num&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;Pclass&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;rank&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;Sex&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;cat&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;SibSp&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;rank&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;Survived&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;cat&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;Ticket&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;cat&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;dataset&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;cat&#39;</span>
<span class="token punctuation">}</span>
<span class="token keyword">for</span> key <span class="token keyword">in</span> options<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    df_all_col<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>key<span class="token punctuation">,</span><span class="token string">&#39;stat_type&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> options<span class="token punctuation">[</span>key<span class="token punctuation">]</span>

df_all_col
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li><p><code>dtypes</code>是pandas保存的类型</p></li><li><p><code>missing</code>是每列的缺失值</p></li><li><p><code>missing_ratio</code>是每列缺失值的占比</p></li><li><p><code>stat_type</code>统计学中的数学分类, 有数值型(num), 分类型(cat), 排序型(rank)</p><pre><code>       dtypes  missing  missing_ratio stat_type
</code></pre></li></ol><p>Age float64 263 0.200917 num Cabin object 1014 0.774637 cat Embarked object 2 0.001528 cat Fare float64 1 0.000764 num Name object 0 0.000000 cat Parch int64 0 0.000000 rank PassengerId int64 0 0.000000 num Pclass int64 0 0.000000 rank Sex object 0 0.000000 cat SibSp int64 0 0.000000 rank Survived float64 418 0.319328 cat Ticket object 0 0.000000 cat dataset object 0 0.000000 cat</p><ol><li>Age, Embarked和Fare三个字段, 有较少的缺失值, 可以通过统计方法填补.</li><li>Cabin有80%缺失值, 不能直接使用统计方法填补.</li></ol><p>✨将训练集和测试集的数据连接其处理缺失值, 否则会造成过拟合.</p><h2 id="构建属性的相似度矩阵" tabindex="-1"><a class="header-anchor" href="#构建属性的相似度矩阵" aria-hidden="true">#</a> 构建属性的相似度矩阵</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>df_all_corr <span class="token operator">=</span> df_all<span class="token punctuation">.</span>corr<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">abs</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><pre><code>              Age      Fare     Parch  PassengerId    Pclass     SibSp  Survived
</code></pre><p>Age 1.000000 0.178740 0.150917 0.028814 0.408106 0.243699 0.077221 Fare 0.178740 1.000000 0.221539 0.031428 0.558629 0.160238 0.257307 Parch 0.150917 0.221539 1.000000 0.008942 0.018322 0.373587 0.081629 PassengerId 0.028814 0.031428 0.008942 1.000000 0.038354 0.055224 0.005007 Pclass 0.408106 0.558629 0.018322 0.038354 1.000000 0.060832 0.338481 SibSp 0.243699 0.160238 0.373587 0.055224 0.060832 1.000000 0.035322 Survived 0.077221 0.257307 0.081629 0.005007 0.338481 0.035322 1.000000</p><p>✨<code>coor()</code>方法只对数值型数据起作用.</p><h2 id="age字段处理" tabindex="-1"><a class="header-anchor" href="#age字段处理" aria-hidden="true">#</a> Age字段处理</h2><h3 id="缺失值处理" tabindex="-1"><a class="header-anchor" href="#缺失值处理" aria-hidden="true">#</a> 缺失值处理</h3><ol><li><p>简单处理, 可以使用<code>Age</code>的整体的中位数填补</p></li><li><p>使用使用Pclass分类后的中位数. 因为Pclass和Age有0.408106相似度, 和目标变量Survived有0.338481相似度.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>df_all_corr_stack<span class="token operator">=</span> df_all_corr<span class="token punctuation">.</span>stack<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>rename<span class="token punctuation">(</span>columns<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&quot;level_0&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Feature 1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;level_1&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Feature 2&quot;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">:</span> <span class="token string">&#39;Correlation&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
df_all_corr_stack<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>df_all_corr_stack<span class="token punctuation">[</span><span class="token string">&#39;Feature 1&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;Age&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span>by<span class="token operator">=</span><span class="token string">&#39;Correlation&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span>drop<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
age_by_pclass_sex <span class="token operator">=</span> df_all<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Sex&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Pclass&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>median<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;Age&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span><span class="token punctuation">)</span>
age_by_pclass_sex
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code> Sex  Pclass   Age
</code></pre><p>0 female 1 36.0 1 female 2 28.0 2 female 3 22.0 3 male 1 42.0 4 male 2 29.5 5 male 3 25.0</p></li><li><p>将Sex也加入分组中, 因为在以Pclass分组的前提下, 可以看到, females(女性)比males(男性)的中位数相对较低.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>age_by_pclass_sex <span class="token operator">=</span> df_all<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Sex&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Pclass&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>median<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;Age&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span><span class="token punctuation">)</span>
age_by_pclass_sex
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><pre><code> Sex  Pclass   Age
</code></pre><p>0 female 1 36.0 1 female 2 28.0 2 female 3 22.0 3 male 1 42.0 4 male 2 29.5 5 male 3 25.0</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>df_all<span class="token punctuation">[</span><span class="token string">&#39;Age&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df_all<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Sex&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Pclass&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;Age&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x<span class="token punctuation">.</span>fillna<span class="token punctuation">(</span>x<span class="token punctuation">.</span>median<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><h2 id="embarked-1" tabindex="-1"><a class="header-anchor" href="#embarked-1" aria-hidden="true">#</a> Embarked</h2><p>Embarked是只有2个缺失值的分类变量. 两个记录有相同的票号, 且都是女性. 也就是说她们知道彼此, 且在同一个港口登船. <code>Embarked</code>女性的众数是C(Cherbourg), 但是并不意味着他们就是从C登船的.</p><p>Age Cabin Embarked Fare Name Parch PassengerId Pclass Sex SibSp Survived Ticket 38.0 B28 NaN 80.0 Icard, Miss. Amelie 0 62 1 female 0 1.0 113572 62.0 B28 NaN 80.0 Stone, Mrs. George Nelson (Martha Evelyn) 0 830 1 female 0 1.0 113572</p>`,91),F={href:"https://www.encyclopedia-titanica.org/titanic-survivor/martha-evelyn-stone.html",target:"_blank",rel:"noopener noreferrer"},A=p(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>
df_all<span class="token punctuation">[</span><span class="token string">&#39;Embarked&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df_all<span class="token punctuation">[</span><span class="token string">&#39;Embarked&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>fillna<span class="token punctuation">(</span><span class="token string">&#39;S&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="fare-1" tabindex="-1"><a class="header-anchor" href="#fare-1" aria-hidden="true">#</a> Fare</h2><p>Fare只有一个缺失值, 他和家庭成员多少(Parch, SibSp)和Pclass(舱位的经济等级)有关. 所以使用Pclass=3, Parch=0, SibSp=0的中位数填补比较合适.</p><table><thead><tr><th>Age</th><th>Cabin</th><th>Embarked</th><th>Fare</th><th>Name</th><th>Parch</th><th>PassengerId</th><th>Pclass</th><th>Sex</th><th>SibSp</th><th>Survived</th><th>Ticket</th></tr></thead><tbody><tr><td>60.5</td><td>NaN</td><td>S</td><td>NaN</td><td>Storey, Mr. Thomas</td><td>0</td><td>1044</td><td>3</td><td>male</td><td>0</td><td>NaN</td><td>3701</td></tr></tbody></table><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>med_fare <span class="token operator">=</span> df_all<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Pclass&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Parch&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;SibSp&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>median<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;Fare&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
df_all<span class="token punctuation">[</span><span class="token string">&#39;Fare&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df_all<span class="token punctuation">[</span><span class="token string">&#39;Fare&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>fillna<span class="token punctuation">(</span>med_fare<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cabin" tabindex="-1"><a class="header-anchor" href="#cabin" aria-hidden="true">#</a> Cabin</h3><p>Titanic甲板从上往下按ABCDEFG的顺序排列, 很明显, 上层甲板上的人更容易生还.</p><figure><img src="`+i+`" alt="alt text" tabindex="0" loading="lazy"><figcaption>alt text</figcaption></figure><ol><li>A: promenade deck(散步甲板)</li><li>B: Bridge deck(桥接甲板)</li><li>C: Shelter deck</li><li>D: Saloon deck</li><li>E: Upper deck</li><li>F: Middle deck</li><li>G: Lower deck</li></ol><p><code>Cabin</code>的第一位是甲板的位置, 后面是房间号, 提取所在甲板位置:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>df_all<span class="token punctuation">[</span><span class="token string">&#39;Deck&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df_all<span class="token punctuation">[</span><span class="token string">&#39;Cabin&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> s<span class="token punctuation">:</span> s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">if</span> pd<span class="token punctuation">.</span>notnull<span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token string">&#39;M&#39;</span><span class="token punctuation">)</span>
df_all<span class="token punctuation">[</span><span class="token string">&#39;Deck&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value_counts<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>sort_index<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>A 22 B 65 C 94 D 46 E 41 F 21 G 5 M 1014 T 1</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>df_all_count <span class="token operator">=</span> df_all<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Deck&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Pclass&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&#39;Name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>rename<span class="token punctuation">(</span>columns<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;Name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Count&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span><span class="token punctuation">)</span>

df_all_count<span class="token punctuation">[</span><span class="token string">&#39;deck_sum&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df_all_count<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;Deck&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;Count&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>transform<span class="token punctuation">(</span><span class="token builtin">sum</span><span class="token punctuation">)</span>
df_all_count<span class="token punctuation">[</span><span class="token string">&#39;deck_ratio&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df_all_count<span class="token punctuation">[</span><span class="token string">&#39;Count&#39;</span><span class="token punctuation">]</span><span class="token operator">/</span>df_all_count<span class="token punctuation">[</span><span class="token string">&#39;deck_sum&#39;</span><span class="token punctuation">]</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Deck Pclass Count deck_sum deck_ratio 0 A 1 22 22 1.000000 1 B 1 65 65 1.000000 2 C 1 94 94 1.000000 3 D 1 40 46 0.869565 4 D 2 6 46 0.130435 5 E 1 34 41 0.829268 6 E 2 4 41 0.097561 7 E 3 3 41 0.073171 8 F 2 13 21 0.619048 9 F 3 8 21 0.380952 10 G 3 5 5 1.000000 11 M 1 67 1014 0.066075 12 M 2 254 1014 0.250493 13 M 3 693 1014 0.683432 14 T 1 1 1 1.000000</p><ol><li>在甲板(Deck), 有6间房子被标记为 T, U, W, X, Y, Z, 但是在数据集中只显示T</li><li>ABC有100%的1等级舱</li><li>D有87%的1等舱和13%的2等舱</li><li>E有83%的1等舱, 10%的2等舱, 7%的3等舱</li><li>F有62%的2等舱, 38%的3等舱</li><li>G有100%的3等舱</li><li>DE给所有等级舱位</li><li>FG给2, 3等级舱位</li><li>有1个乘客是T区域, 他是1等舱, T和A相似, 所以将其改为A</li><li>使用M代替缺失值, 因为太难填补了.</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Passenger in the T deck is changed to A</span>
idx <span class="token operator">=</span> df_all<span class="token punctuation">[</span>df_all<span class="token punctuation">[</span><span class="token string">&#39;Deck&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;T&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>index
df_all<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>idx<span class="token punctuation">,</span> <span class="token string">&#39;Deck&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;A&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>每一个Deck都有不同的生还率.</p><ol><li>A, B, C标记为ABC, 因为他们只有1等舱乘客</li><li>D, E标记为DE, 因为他们乘客的生还率相似</li><li>F, G标记为FG, 因为他们乘客的生还率相似</li><li>M单独标记, 因为他的生还率最低.</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>df_all<span class="token punctuation">[</span><span class="token string">&#39;Deck&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df_all<span class="token punctuation">[</span><span class="token string">&#39;Deck&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;C&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;ABC&#39;</span><span class="token punctuation">)</span>
df_all<span class="token punctuation">[</span><span class="token string">&#39;Deck&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df_all<span class="token punctuation">[</span><span class="token string">&#39;Deck&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;D&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;E&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;DE&#39;</span><span class="token punctuation">)</span>
df_all<span class="token punctuation">[</span><span class="token string">&#39;Deck&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df_all<span class="token punctuation">[</span><span class="token string">&#39;Deck&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;F&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;G&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;FG&#39;</span><span class="token punctuation">)</span>

df_all<span class="token punctuation">[</span><span class="token string">&#39;Deck&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value_counts<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>M 1014 ABC 181 DE 87 FG 26 T 1</p><h2 id="目标分布" tabindex="-1"><a class="header-anchor" href="#目标分布" aria-hidden="true">#</a> 目标分布</h2><p>训练集中:</p><ol><li>38.38%(342/891)是类别1</li><li>61.62%(549/891)是类别0</li></ol><h2 id="特征中的目标分布" tabindex="-1"><a class="header-anchor" href="#特征中的目标分布" aria-hidden="true">#</a> 特征中的目标分布</h2><h3 id="连续特征" tabindex="-1"><a class="header-anchor" href="#连续特征" aria-hidden="true">#</a> 连续特征</h3><h4 id="age-1" tabindex="-1"><a class="header-anchor" href="#age-1" aria-hidden="true">#</a> Age</h4><p>Age&lt;15时有较高的生还率</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
fig<span class="token punctuation">,</span> ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span><span class="token punctuation">)</span>

df_train<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>df_train<span class="token punctuation">[</span><span class="token string">&#39;Survived&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;Age&#39;</span><span class="token punctuation">]</span>

ax<span class="token punctuation">.</span>hist<span class="token punctuation">(</span>df_train<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>df_train<span class="token punctuation">[</span><span class="token string">&#39;Survived&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;Age&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> bins<span class="token operator">=</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">,</span> density<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&#39;Survived=1&#39;</span><span class="token punctuation">)</span>
ax<span class="token punctuation">.</span>hist<span class="token punctuation">(</span>df_train<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>df_train<span class="token punctuation">[</span><span class="token string">&#39;Survived&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&#39;Age&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> bins<span class="token operator">=</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">,</span> density<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&#39;Survived=0&#39;</span><span class="token punctuation">)</span> 

ax<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+u+'" alt="alt text" tabindex="0" loading="lazy"><figcaption>alt text</figcaption></figure><figure><img src="'+k+`" alt="alt text" tabindex="0" loading="lazy"><figcaption>alt text</figcaption></figure><ol><li>Fare在尾巴部分有更好的生还率</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
fig<span class="token punctuation">,</span> ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span><span class="token punctuation">)</span>

df_train<span class="token punctuation">[</span><span class="token string">&#39;Fare&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

df_train<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>df_train<span class="token punctuation">[</span><span class="token string">&#39;Survived&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;Fare&#39;</span><span class="token punctuation">]</span>

ax<span class="token punctuation">.</span>hist<span class="token punctuation">(</span>df_train<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>df_train<span class="token punctuation">[</span><span class="token string">&#39;Survived&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;Fare&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> bins<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> density<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&#39;Survived=1&#39;</span><span class="token punctuation">)</span>
ax<span class="token punctuation">.</span>hist<span class="token punctuation">(</span>df_train<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>df_train<span class="token punctuation">[</span><span class="token string">&#39;Survived&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&#39;Fare&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> bins<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> density<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&#39;Survived=0&#39;</span><span class="token punctuation">)</span> 

ax<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+r+`" alt="alt text" tabindex="0" loading="lazy"><figcaption>alt text</figcaption></figure><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
fig<span class="token punctuation">,</span> ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span><span class="token punctuation">)</span>

df_train<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>df_train<span class="token punctuation">[</span><span class="token string">&#39;Survived&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;Fare&#39;</span><span class="token punctuation">]</span>
ax<span class="token punctuation">.</span>hist<span class="token punctuation">(</span>df_train<span class="token punctuation">[</span><span class="token string">&#39;Fare&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> bins<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> density<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&#39;_train&#39;</span><span class="token punctuation">)</span>
ax<span class="token punctuation">.</span>hist<span class="token punctuation">(</span>df_test<span class="token punctuation">[</span><span class="token string">&#39;Fare&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> bins<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> density<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&#39;_test&#39;</span><span class="token punctuation">)</span> 
df_train<span class="token punctuation">[</span><span class="token string">&#39;Fare&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>plot<span class="token punctuation">(</span>kind <span class="token operator">=</span> <span class="token string">&#39;kde&#39;</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">,</span> label <span class="token operator">=</span> <span class="token string">&#39;train&#39;</span><span class="token punctuation">)</span>
df_test<span class="token punctuation">[</span><span class="token string">&#39;Fare&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>plot<span class="token punctuation">(</span>kind <span class="token operator">=</span> <span class="token string">&#39;kde&#39;</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">,</span> label <span class="token operator">=</span> <span class="token string">&#39;test&#39;</span><span class="token punctuation">)</span>
ax<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+d+'" alt="alt text" tabindex="0" loading="lazy"><figcaption>alt text</figcaption></figure><h3 id="分类特征" tabindex="-1"><a class="header-anchor" href="#分类特征" aria-hidden="true">#</a> 分类特征</h3><p>每个特征至少有一个类别有高的死亡率, 这对预测有很好的作用.</p><p>Parch 和 SibSp表名, 只有一个亲人的, 生还率更高.</p><figure><img src="'+v+`" alt="alt text" tabindex="0" loading="lazy"><figcaption>alt text</figcaption></figure><h2 id="特征工程-1" tabindex="-1"><a class="header-anchor" href="#特征工程-1" aria-hidden="true">#</a> 特征工程</h2><h3 id="连续变量分箱" tabindex="-1"><a class="header-anchor" href="#连续变量分箱" aria-hidden="true">#</a> 连续变量分箱</h3><h4 id="fare-2" tabindex="-1"><a class="header-anchor" href="#fare-2" aria-hidden="true">#</a> Fare</h4><p>使用13个分位点分割Fare特征. 分割后, Fare较低的生还率较低, 较高的生还率较高.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>df_all<span class="token punctuation">[</span><span class="token string">&#39;Fare&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> pd<span class="token punctuation">.</span>qcut<span class="token punctuation">(</span>df_all<span class="token punctuation">[</span><span class="token string">&#39;Fare&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">)</span>
df_all<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Fare&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Survived&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>             Fare  Survived   0
</code></pre><p>0 (-0.001, 7.25] 0.0 72 1 (-0.001, 7.25] 1.0 11 2 (7.25, 7.75] 0.0 39 3 (7.25, 7.75] 1.0 18 4 (7.75, 7.896] 0.0 68 5 (7.75, 7.896] 1.0 15 6 (7.896, 8.05] 0.0 48 7 (7.896, 8.05] 1.0 14 8 (8.05, 10.5] 0.0 60 9 (8.05, 10.5] 1.0 18 10 (10.5, 13.0] 0.0 35 11 (10.5, 13.0] 1.0 30 12 (13.0, 15.742] 0.0 33 13 (13.0, 15.742] 1.0 16 14 (15.742, 23.25] 0.0 32 15 (15.742, 23.25] 1.0 36 16 (23.25, 26.55] 0.0 41 17 (23.25, 26.55] 1.0 36 18 (26.55, 34.075] 0.0 40 19 (26.55, 34.075] 1.0 25 20 (34.075, 56.496] 0.0 41 21 (34.075, 56.496] 1.0 34 22 (56.496, 83.475] 0.0 25 23 (56.496, 83.475] 1.0 38 24 (83.475, 512.329] 0.0 15 25 (83.475, 512.329] 1.0 51</p><h4 id="age-2" tabindex="-1"><a class="header-anchor" href="#age-2" aria-hidden="true">#</a> Age</h4><p>使用10个分位点分割Age特征.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>df_all<span class="token punctuation">[</span><span class="token string">&#39;Age&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> pd<span class="token punctuation">.</span>qcut<span class="token punctuation">(</span>df_all<span class="token punctuation">[</span><span class="token string">&#39;Age&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>
df_all<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Age&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Survived&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>          Age  Survived    0
</code></pre><p>0 (0.169, 16.0] 0.0 45 1 (0.169, 16.0] 1.0 55 2 (16.0, 21.0] 0.0 72 3 (16.0, 21.0] 1.0 32 4 (21.0, 22.0] 0.0 33 5 (21.0, 22.0] 1.0 36 6 (22.0, 25.0] 0.0 129 7 (22.0, 25.0] 1.0 35 8 (25.0, 26.0] 0.0 12 9 (25.0, 26.0] 1.0 6 10 (26.0, 29.5] 0.0 46 11 (26.0, 29.5] 1.0 30 12 (29.5, 34.0] 0.0 54 13 (29.5, 34.0] 1.0 40 14 (34.0, 40.0] 0.0 47 15 (34.0, 40.0] 1.0 48 16 (40.0, 48.0] 0.0 62 17 (40.0, 48.0] 1.0 29 18 (48.0, 80.0] 0.0 49 19 (48.0, 80.0] 1.0 31</p><h3 id="frequency-encoding" tabindex="-1"><a class="header-anchor" href="#frequency-encoding" aria-hidden="true">#</a> Frequency Encoding</h3><p>Family_Size是通过SibSp, Parch和1来创建的, 其中1是乘客本人.</p><ol><li>Family_Size = 1, 标记为Alone</li><li>Family_Size = 2, 3, 4标记为Small</li><li>Family_Size = 5, 6, 标记为Medium</li><li>Family_Size = 7, 8, 11, 标记为Large</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>df_all<span class="token punctuation">[</span><span class="token string">&#39;Family_Size&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df_all<span class="token punctuation">[</span><span class="token string">&#39;SibSp&#39;</span><span class="token punctuation">]</span> <span class="token operator">+</span> df_all<span class="token punctuation">[</span><span class="token string">&#39;Parch&#39;</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span>
family_map <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">:</span> <span class="token string">&#39;Alone&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">:</span> <span class="token string">&#39;Small&#39;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">:</span> <span class="token string">&#39;Small&#39;</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">:</span> <span class="token string">&#39;Small&#39;</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">:</span> <span class="token string">&#39;Medium&#39;</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">:</span> <span class="token string">&#39;Medium&#39;</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">:</span> <span class="token string">&#39;Large&#39;</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">:</span> <span class="token string">&#39;Large&#39;</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">:</span> <span class="token string">&#39;Large&#39;</span><span class="token punctuation">}</span>
df_all<span class="token punctuation">[</span><span class="token string">&#39;Family_Size_Grouped&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df_all<span class="token punctuation">[</span><span class="token string">&#39;Family_Size&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span>family_map<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ticket" tabindex="-1"><a class="header-anchor" href="#ticket" aria-hidden="true">#</a> Ticket</h3><p>将Ticket分组求和, 和Family_Size的区别是, 同样的票会在一组, 不同的家庭成员可能在不同组里. 因为Ticket的前缀信息, 已经在Pclass或Embarked中提取出来了, 所以没必要使用前缀信息分组.</p><p>可以看到, 2,3,4人一组的生还概率大. 这个特征和Family-size非常相似, 是又有所不同.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>df_all<span class="token punctuation">[</span><span class="token string">&#39;Ticket_Frequency&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df_all<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;Ticket&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;Ticket&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>transform<span class="token punctuation">(</span><span class="token string">&#39;count&#39;</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="name" tabindex="-1"><a class="header-anchor" href="#name" aria-hidden="true">#</a> name</h3><p>名字的前缀可以提取性别. 将Miss, Mrs, Ms, Mlle, Lady, Mme, the Countess, Dona替换成Miss/Mrs/Ms, 因为他们都是女性. Dr, Col, Major, Jonkheer, Capt, Sir, Don, Rev替换成Dr/Military/Noble/Clergy, 因为他们有相同的特征. Master是独一无二的前缀, 特指26岁以下的男性.</p><p>Is_Married(是否结婚)可以通过Mrs前缀获得.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>df_all<span class="token punctuation">[</span><span class="token string">&#39;Title&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df_all<span class="token punctuation">[</span><span class="token string">&#39;Name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">str</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;, &#39;</span><span class="token punctuation">,</span> expand<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">str</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">,</span> expand<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
df_all<span class="token punctuation">[</span><span class="token string">&#39;Is_Married&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>
df_all<span class="token punctuation">[</span><span class="token string">&#39;Is_Married&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>loc<span class="token punctuation">[</span>df_all<span class="token punctuation">[</span><span class="token string">&#39;Title&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;Mrs&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="目标编码" tabindex="-1"><a class="header-anchor" href="#目标编码" aria-hidden="true">#</a> 目标编码</h2><p>extract_surname方法是从Name属性中抽取surname. Family特征从抽取的surname中获取. 这样做的目的是为了以家庭为单位进行聚合.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">extract_surname</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>    
    families <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token comment"># 遍历每一行</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        name <span class="token operator">=</span> data<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
        <span class="token comment"># 如果name字段里有&#39;(&#39;, 则去掉()里的内容</span>
        <span class="token keyword">if</span> <span class="token string">&#39;(&#39;</span> <span class="token keyword">in</span> name<span class="token punctuation">:</span>
            name_no_bracket <span class="token operator">=</span> name<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;(&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> 
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            name_no_bracket <span class="token operator">=</span> name
        <span class="token comment"># 将姓氏作为家庭标志</span>
        family <span class="token operator">=</span> name_no_bracket<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
        <span class="token comment"># 去掉姓氏中的标签符号</span>
        <span class="token keyword">for</span> c <span class="token keyword">in</span> string<span class="token punctuation">.</span>punctuation<span class="token punctuation">:</span>
            family <span class="token operator">=</span> family<span class="token punctuation">.</span>replace<span class="token punctuation">(</span>c<span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>
        families<span class="token punctuation">.</span>append<span class="token punctuation">(</span>family<span class="token punctuation">)</span>
    <span class="token keyword">return</span> families

df_all<span class="token punctuation">[</span><span class="token string">&#39;Family&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> extract_surname<span class="token punctuation">(</span>df_all<span class="token punctuation">[</span><span class="token string">&#39;Name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
df_train <span class="token operator">=</span> df_all<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">890</span><span class="token punctuation">]</span>
df_test <span class="token operator">=</span> df_all<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token number">891</span><span class="token punctuation">:</span><span class="token punctuation">]</span>
dfs <span class="token operator">=</span> <span class="token punctuation">[</span>df_train<span class="token punctuation">,</span> df_test<span class="token punctuation">]</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Family_Survival_Rate是在训练集中计算家庭的生还率(测试集中没有). 在训练集和测试集中同时出现的家庭名称, 会有这个特征. 这个特征只是针对2个成员以上的家庭. Family_Survival_Rate_NA特征是只为在测试集中出现的家庭创建的.</p><p>Ticket_Survival_Rate和Ticket_Survival_Rate_NA用相同的方法创建. Survival_Rate是Ticket_Survival_Rate和Family_Survival_Rate的均值 Survival_Rate_NA是Ticket_Survival_Rate_NA和Family_Survival_Rate_NA的合并.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Creating a list of families and tickets that are occuring in both training and test set</span>
non_unique_families <span class="token operator">=</span> <span class="token punctuation">[</span>x <span class="token keyword">for</span> x <span class="token keyword">in</span> df_train<span class="token punctuation">[</span><span class="token string">&#39;Family&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>unique<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">if</span> x <span class="token keyword">in</span> df_test<span class="token punctuation">[</span><span class="token string">&#39;Family&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>unique<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
non_unique_tickets <span class="token operator">=</span> <span class="token punctuation">[</span>x <span class="token keyword">for</span> x <span class="token keyword">in</span> df_train<span class="token punctuation">[</span><span class="token string">&#39;Ticket&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>unique<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">if</span> x <span class="token keyword">in</span> df_test<span class="token punctuation">[</span><span class="token string">&#39;Ticket&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>unique<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>

df_family_survival_rate <span class="token operator">=</span> df_train<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;Family&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;Survived&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Family&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;Family_Size&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>median<span class="token punctuation">(</span><span class="token punctuation">)</span>
df_ticket_survival_rate <span class="token operator">=</span> df_train<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;Ticket&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;Survived&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Ticket&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;Ticket_Frequency&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>median<span class="token punctuation">(</span><span class="token punctuation">)</span>

family_rates <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
ticket_rates <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>df_family_survival_rate<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># Checking a family exists in both training and test set, and has members more than 1</span>
    <span class="token keyword">if</span> df_family_survival_rate<span class="token punctuation">.</span>index<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token keyword">in</span> non_unique_families <span class="token keyword">and</span> df_family_survival_rate<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span>i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">:</span>
        family_rates<span class="token punctuation">[</span>df_family_survival_rate<span class="token punctuation">.</span>index<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> df_family_survival_rate<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span>i<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span>

<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>df_ticket_survival_rate<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># Checking a ticket exists in both training and test set, and has members more than 1</span>
    <span class="token keyword">if</span> df_ticket_survival_rate<span class="token punctuation">.</span>index<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token keyword">in</span> non_unique_tickets <span class="token keyword">and</span> df_ticket_survival_rate<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span>i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">:</span>
        ticket_rates<span class="token punctuation">[</span>df_ticket_survival_rate<span class="token punctuation">.</span>index<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> df_ticket_survival_rate<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span>i<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span>
mean_survival_rate <span class="token operator">=</span> np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>df_train<span class="token punctuation">[</span><span class="token string">&#39;Survived&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

train_family_survival_rate <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
train_family_survival_rate_NA <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
test_family_survival_rate <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
test_family_survival_rate_NA <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>df_train<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> df_train<span class="token punctuation">[</span><span class="token string">&#39;Family&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token keyword">in</span> family_rates<span class="token punctuation">:</span>
        train_family_survival_rate<span class="token punctuation">.</span>append<span class="token punctuation">(</span>family_rates<span class="token punctuation">[</span>df_train<span class="token punctuation">[</span><span class="token string">&#39;Family&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        train_family_survival_rate_NA<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        train_family_survival_rate<span class="token punctuation">.</span>append<span class="token punctuation">(</span>mean_survival_rate<span class="token punctuation">)</span>
        train_family_survival_rate_NA<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
        
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>df_test<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> df_test<span class="token punctuation">[</span><span class="token string">&#39;Family&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>iloc<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token keyword">in</span> family_rates<span class="token punctuation">:</span>
        test_family_survival_rate<span class="token punctuation">.</span>append<span class="token punctuation">(</span>family_rates<span class="token punctuation">[</span>df_test<span class="token punctuation">[</span><span class="token string">&#39;Family&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>iloc<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        test_family_survival_rate_NA<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        test_family_survival_rate<span class="token punctuation">.</span>append<span class="token punctuation">(</span>mean_survival_rate<span class="token punctuation">)</span>
        test_family_survival_rate_NA<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
        
df_train<span class="token punctuation">[</span><span class="token string">&#39;Family_Survival_Rate&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> train_family_survival_rate
df_train<span class="token punctuation">[</span><span class="token string">&#39;Family_Survival_Rate_NA&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> train_family_survival_rate_NA
df_test<span class="token punctuation">[</span><span class="token string">&#39;Family_Survival_Rate&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> test_family_survival_rate
df_test<span class="token punctuation">[</span><span class="token string">&#39;Family_Survival_Rate_NA&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> test_family_survival_rate_NA

train_ticket_survival_rate <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
train_ticket_survival_rate_NA <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
test_ticket_survival_rate <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
test_ticket_survival_rate_NA <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>df_train<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> df_train<span class="token punctuation">[</span><span class="token string">&#39;Ticket&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token keyword">in</span> ticket_rates<span class="token punctuation">:</span>
        train_ticket_survival_rate<span class="token punctuation">.</span>append<span class="token punctuation">(</span>ticket_rates<span class="token punctuation">[</span>df_train<span class="token punctuation">[</span><span class="token string">&#39;Ticket&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        train_ticket_survival_rate_NA<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        train_ticket_survival_rate<span class="token punctuation">.</span>append<span class="token punctuation">(</span>mean_survival_rate<span class="token punctuation">)</span>
        train_ticket_survival_rate_NA<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
        
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>df_test<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> df_test<span class="token punctuation">[</span><span class="token string">&#39;Ticket&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>iloc<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token keyword">in</span> ticket_rates<span class="token punctuation">:</span>
        test_ticket_survival_rate<span class="token punctuation">.</span>append<span class="token punctuation">(</span>ticket_rates<span class="token punctuation">[</span>df_test<span class="token punctuation">[</span><span class="token string">&#39;Ticket&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>iloc<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        test_ticket_survival_rate_NA<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        test_ticket_survival_rate<span class="token punctuation">.</span>append<span class="token punctuation">(</span>mean_survival_rate<span class="token punctuation">)</span>
        test_ticket_survival_rate_NA<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
        
df_train<span class="token punctuation">[</span><span class="token string">&#39;Ticket_Survival_Rate&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> train_ticket_survival_rate
df_train<span class="token punctuation">[</span><span class="token string">&#39;Ticket_Survival_Rate_NA&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> train_ticket_survival_rate_NA
df_test<span class="token punctuation">[</span><span class="token string">&#39;Ticket_Survival_Rate&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> test_ticket_survival_rate
df_test<span class="token punctuation">[</span><span class="token string">&#39;Ticket_Survival_Rate_NA&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> test_ticket_survival_rate_NA

<span class="token keyword">for</span> df <span class="token keyword">in</span> <span class="token punctuation">[</span>df_train<span class="token punctuation">,</span> df_test<span class="token punctuation">]</span><span class="token punctuation">:</span>
    df<span class="token punctuation">[</span><span class="token string">&#39;Survival_Rate&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;Ticket_Survival_Rate&#39;</span><span class="token punctuation">]</span> <span class="token operator">+</span> df<span class="token punctuation">[</span><span class="token string">&#39;Family_Survival_Rate&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span>
    df<span class="token punctuation">[</span><span class="token string">&#39;Survival_Rate_NA&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;Ticket_Survival_Rate_NA&#39;</span><span class="token punctuation">]</span> <span class="token operator">+</span> df<span class="token punctuation">[</span><span class="token string">&#39;Family_Survival_Rate_NA&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span> 

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="特征转换" tabindex="-1"><a class="header-anchor" href="#特征转换" aria-hidden="true">#</a> 特征转换</h2><h3 id="标签编码非数值特征" tabindex="-1"><a class="header-anchor" href="#标签编码非数值特征" aria-hidden="true">#</a> 标签编码非数值特征</h3><p>Embarked, Sex, Deck , Title 和 Family_Size_Grouped, Age和Fare, 通过LabelEncoder转化为0~n.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>non_numeric_features <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Embarked&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Sex&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Deck&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Title&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Family_Size_Grouped&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Age&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Fare&#39;</span><span class="token punctuation">]</span>

<span class="token keyword">for</span> df <span class="token keyword">in</span> dfs<span class="token punctuation">:</span>
    <span class="token keyword">for</span> feature <span class="token keyword">in</span> non_numeric_features<span class="token punctuation">:</span>        
        df<span class="token punctuation">[</span>feature<span class="token punctuation">]</span> <span class="token operator">=</span> LabelEncoder<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>df<span class="token punctuation">[</span>feature<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="one-hot编码分类特征" tabindex="-1"><a class="header-anchor" href="#one-hot编码分类特征" aria-hidden="true">#</a> one-hot编码分类特征</h3><p>Pclass, Sex, Deck, Embarked, Title通过OneHotEncoder编码. Age和Fare不编码, 因为他们是有序特征.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>cat_features <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Pclass&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Sex&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Deck&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Embarked&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Title&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Family_Size_Grouped&#39;</span><span class="token punctuation">]</span>
encoded_features <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

<span class="token keyword">for</span> df <span class="token keyword">in</span> dfs<span class="token punctuation">:</span>
    <span class="token keyword">for</span> feature <span class="token keyword">in</span> cat_features<span class="token punctuation">:</span>
        encoded_feat <span class="token operator">=</span> OneHotEncoder<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>df<span class="token punctuation">[</span>feature<span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>toarray<span class="token punctuation">(</span><span class="token punctuation">)</span>
        n <span class="token operator">=</span> df<span class="token punctuation">[</span>feature<span class="token punctuation">]</span><span class="token punctuation">.</span>nunique<span class="token punctuation">(</span><span class="token punctuation">)</span>
        cols <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;{}_{}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>feature<span class="token punctuation">,</span> n<span class="token punctuation">)</span> <span class="token keyword">for</span> n <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
        encoded_df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>encoded_feat<span class="token punctuation">,</span> columns<span class="token operator">=</span>cols<span class="token punctuation">)</span>
        encoded_df<span class="token punctuation">.</span>index <span class="token operator">=</span> df<span class="token punctuation">.</span>index
        encoded_features<span class="token punctuation">.</span>append<span class="token punctuation">(</span>encoded_df<span class="token punctuation">)</span>

df_train <span class="token operator">=</span> pd<span class="token punctuation">.</span>concat<span class="token punctuation">(</span><span class="token punctuation">[</span>df_train<span class="token punctuation">,</span> <span class="token operator">*</span>encoded_features<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
df_test <span class="token operator">=</span> pd<span class="token punctuation">.</span>concat<span class="token punctuation">(</span><span class="token punctuation">[</span>df_test<span class="token punctuation">,</span> <span class="token operator">*</span>encoded_features<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>df_all <span class="token operator">=</span> concat_df<span class="token punctuation">(</span>df_train<span class="token punctuation">,</span> df_test<span class="token punctuation">)</span>
drop_cols <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Deck&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Embarked&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Family&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Family_Size&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Family_Size_Grouped&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Survived&#39;</span><span class="token punctuation">,</span>
             <span class="token string">&#39;Name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Parch&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;PassengerId&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Pclass&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Sex&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;SibSp&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Ticket&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Title&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;Ticket_Survival_Rate&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Family_Survival_Rate&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Ticket_Survival_Rate_NA&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Family_Survival_Rate_NA&#39;</span><span class="token punctuation">]</span>

df_all<span class="token punctuation">.</span>drop<span class="token punctuation">(</span>columns<span class="token operator">=</span>drop_cols<span class="token punctuation">,</span> inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

df_all<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Age Deck_1 Deck_2 Deck_3 Deck_4 Embarked_1 Embarked_2 Embarked_3 Family_Size_Grouped_1 Family_Size_Grouped_2 Family_Size_Grouped_3 Family_Size_Grouped_4 Fare Is_Married Pclass_1 Pclass_2 Pclass_3 Sex_1 Sex_2 Survival_Rate Survival_Rate_NA Ticket_Frequency Title_1 Title_2 Title_3 Title_4 2 0.0 0.0 0.0 1.0 0.0 0.0 1.0 0.0 0.0 0.0 1.0 0 0 0.0 0.0 1.0 0.0 1.0 0.383838 0.0 1 0.0 0.0 0.0 1.0 7 1.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 1.0 11 1 1.0 0.0 0.0 1.0 0.0 1.000000 1.0 2 0.0 0.0 1.0 0.0 4 0.0 0.0 0.0 1.0 0.0 0.0 1.0 1.0 0.0 0.0 0.0 3 0 0.0 0.0 1.0 1.0 0.0 0.383838 0.0 1 0.0 0.0 1.0 0.0 7 1.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 1.0 10 1 1.0 0.0 0.0 1.0 0.0 0.383838 0.0 2 0.0 0.0 1.0 0.0 7 0.0 0.0 0.0 1.0 0.0 0.0 1.0 1.0 0.0 0.0 0.0 3 0 0.0 0.0 1.0 0.0 1.0 0.383838 0.0 1 0.0 0.0 0.0 1.0</p><h2 id="建模" tabindex="-1"><a class="header-anchor" href="#建模" aria-hidden="true">#</a> 建模</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>X_train <span class="token operator">=</span> StandardScaler<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>df_train<span class="token punctuation">.</span>drop<span class="token punctuation">(</span>columns<span class="token operator">=</span>drop_cols<span class="token punctuation">)</span><span class="token punctuation">)</span>
y_train <span class="token operator">=</span> df_train<span class="token punctuation">[</span><span class="token string">&#39;Survived&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values
X_test <span class="token operator">=</span> StandardScaler<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>df_test<span class="token punctuation">.</span>drop<span class="token punctuation">(</span>columns<span class="token operator">=</span>drop_cols<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;X_train shape: {}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>X_train<span class="token punctuation">.</span>shape<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;y_train shape: {}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>y_train<span class="token punctuation">.</span>shape<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;X_test shape: {}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>X_test<span class="token punctuation">.</span>shape<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="随机森林" tabindex="-1"><a class="header-anchor" href="#随机森林" aria-hidden="true">#</a> 随机森林</h3><p>创建两个随机森林模型, 一个是单一模型, 另一个是k-fold cross validation.</p><p>single_best_model准确率是0.82775, 主要用来进行测试和调参. leaderboard_model是k-fold多个模型的组合, 适用于具体应用.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>single_best_model <span class="token operator">=</span> RandomForestClassifier<span class="token punctuation">(</span>criterion<span class="token operator">=</span><span class="token string">&#39;gini&#39;</span><span class="token punctuation">,</span> 
                                           n_estimators<span class="token operator">=</span><span class="token number">1100</span><span class="token punctuation">,</span>
                                           max_depth<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span>
                                           min_samples_split<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span>
                                           min_samples_leaf<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span>
                                           max_features<span class="token operator">=</span><span class="token string">&#39;auto&#39;</span><span class="token punctuation">,</span>
                                           oob_score<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>
                                           random_state<span class="token operator">=</span>SEED<span class="token punctuation">,</span>
                                           n_jobs<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>
                                           verbose<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>

leaderboard_model <span class="token operator">=</span> RandomForestClassifier<span class="token punctuation">(</span>criterion<span class="token operator">=</span><span class="token string">&#39;gini&#39;</span><span class="token punctuation">,</span>
                                           n_estimators<span class="token operator">=</span><span class="token number">1750</span><span class="token punctuation">,</span>
                                           max_depth<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">,</span>
                                           min_samples_split<span class="token operator">=</span><span class="token number">6</span><span class="token punctuation">,</span>
                                           min_samples_leaf<span class="token operator">=</span><span class="token number">6</span><span class="token punctuation">,</span>
                                           max_features<span class="token operator">=</span><span class="token string">&#39;auto&#39;</span><span class="token punctuation">,</span>
                                           oob_score<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>
                                           random_state<span class="token operator">=</span>SEED<span class="token punctuation">,</span>
                                           n_jobs<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>
                                           verbose<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>N <span class="token operator">=</span> <span class="token number">5</span>
oob <span class="token operator">=</span> <span class="token number">0</span>
probs <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>X_test<span class="token punctuation">)</span><span class="token punctuation">,</span> N <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> columns<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;Fold_{}_Prob_{}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> N <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
importances <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span>X_train<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> N<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> columns<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;Fold_{}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> N <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> index<span class="token operator">=</span>df_all<span class="token punctuation">.</span>columns<span class="token punctuation">)</span>
fprs<span class="token punctuation">,</span> tprs<span class="token punctuation">,</span> scores <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

skf <span class="token operator">=</span> StratifiedKFold<span class="token punctuation">(</span>n_splits<span class="token operator">=</span>N<span class="token punctuation">,</span> random_state<span class="token operator">=</span>N<span class="token punctuation">,</span> shuffle<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

<span class="token keyword">for</span> fold<span class="token punctuation">,</span> <span class="token punctuation">(</span>trn_idx<span class="token punctuation">,</span> val_idx<span class="token punctuation">)</span> <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>skf<span class="token punctuation">.</span>split<span class="token punctuation">(</span>X_train<span class="token punctuation">,</span> y_train<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Fold {}\\n&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>fold<span class="token punctuation">)</span><span class="token punctuation">)</span>
    
    <span class="token comment"># Fitting the model</span>
    leaderboard_model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X_train<span class="token punctuation">[</span>trn_idx<span class="token punctuation">]</span><span class="token punctuation">,</span> y_train<span class="token punctuation">[</span>trn_idx<span class="token punctuation">]</span><span class="token punctuation">)</span>
    
    <span class="token comment"># Computing Train AUC score</span>
    trn_fpr<span class="token punctuation">,</span> trn_tpr<span class="token punctuation">,</span> trn_thresholds <span class="token operator">=</span> roc_curve<span class="token punctuation">(</span>y_train<span class="token punctuation">[</span>trn_idx<span class="token punctuation">]</span><span class="token punctuation">,</span> leaderboard_model<span class="token punctuation">.</span>predict_proba<span class="token punctuation">(</span>X_train<span class="token punctuation">[</span>trn_idx<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    trn_auc_score <span class="token operator">=</span> auc<span class="token punctuation">(</span>trn_fpr<span class="token punctuation">,</span> trn_tpr<span class="token punctuation">)</span>
    <span class="token comment"># Computing Validation AUC score</span>
    val_fpr<span class="token punctuation">,</span> val_tpr<span class="token punctuation">,</span> val_thresholds <span class="token operator">=</span> roc_curve<span class="token punctuation">(</span>y_train<span class="token punctuation">[</span>val_idx<span class="token punctuation">]</span><span class="token punctuation">,</span> leaderboard_model<span class="token punctuation">.</span>predict_proba<span class="token punctuation">(</span>X_train<span class="token punctuation">[</span>val_idx<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    val_auc_score <span class="token operator">=</span> auc<span class="token punctuation">(</span>val_fpr<span class="token punctuation">,</span> val_tpr<span class="token punctuation">)</span>  
      
    scores<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">(</span>trn_auc_score<span class="token punctuation">,</span> val_auc_score<span class="token punctuation">)</span><span class="token punctuation">)</span>
    fprs<span class="token punctuation">.</span>append<span class="token punctuation">(</span>val_fpr<span class="token punctuation">)</span>
    tprs<span class="token punctuation">.</span>append<span class="token punctuation">(</span>val_tpr<span class="token punctuation">)</span>
    
    <span class="token comment"># X_test probabilities</span>
    probs<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token string">&#39;Fold_{}_Prob_0&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>fold<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> leaderboard_model<span class="token punctuation">.</span>predict_proba<span class="token punctuation">(</span>X_test<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span>
    probs<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token string">&#39;Fold_{}_Prob_1&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>fold<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> leaderboard_model<span class="token punctuation">.</span>predict_proba<span class="token punctuation">(</span>X_test<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span>
    importances<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> fold <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> leaderboard_model<span class="token punctuation">.</span>feature_importances_
        
    oob <span class="token operator">+=</span> leaderboard_model<span class="token punctuation">.</span>oob_score_ <span class="token operator">/</span> N
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Fold {} OOB Score: {}\\n&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>fold<span class="token punctuation">,</span> leaderboard_model<span class="token punctuation">.</span>oob_score_<span class="token punctuation">)</span><span class="token punctuation">)</span>   
    
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Average OOB Score: {}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>oob<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="特征的重要程度" tabindex="-1"><a class="header-anchor" href="#特征的重要程度" aria-hidden="true">#</a> 特征的重要程度</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>importances<span class="token punctuation">[</span><span class="token string">&#39;Mean_Importance&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> importances<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
importances<span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span>by<span class="token operator">=</span><span class="token string">&#39;Mean_Importance&#39;</span><span class="token punctuation">,</span> inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> ascending<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>

plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
sns<span class="token punctuation">.</span>barplot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">&#39;Mean_Importance&#39;</span><span class="token punctuation">,</span> y<span class="token operator">=</span>importances<span class="token punctuation">.</span>index<span class="token punctuation">,</span> data<span class="token operator">=</span>importances<span class="token punctuation">)</span>

plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token string">&#39;x&#39;</span><span class="token punctuation">,</span> labelsize<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token string">&#39;y&#39;</span><span class="token punctuation">,</span> labelsize<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;Random Forest Classifier Mean Feature Importance Between Folds&#39;</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">)</span>

plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="roc曲线" tabindex="-1"><a class="header-anchor" href="#roc曲线" aria-hidden="true">#</a> ROC曲线</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">plot_roc_curve</span><span class="token punctuation">(</span>fprs<span class="token punctuation">,</span> tprs<span class="token punctuation">)</span><span class="token punctuation">:</span>
    
    tprs_interp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    aucs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    mean_fpr <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>
    f<span class="token punctuation">,</span> ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    
    <span class="token comment"># Plotting ROC for each fold and computing AUC scores</span>
    <span class="token keyword">for</span> i<span class="token punctuation">,</span> <span class="token punctuation">(</span>fpr<span class="token punctuation">,</span> tpr<span class="token punctuation">)</span> <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span><span class="token builtin">zip</span><span class="token punctuation">(</span>fprs<span class="token punctuation">,</span> tprs<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        tprs_interp<span class="token punctuation">.</span>append<span class="token punctuation">(</span>np<span class="token punctuation">.</span>interp<span class="token punctuation">(</span>mean_fpr<span class="token punctuation">,</span> fpr<span class="token punctuation">,</span> tpr<span class="token punctuation">)</span><span class="token punctuation">)</span>
        tprs_interp<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0.0</span>
        roc_auc <span class="token operator">=</span> auc<span class="token punctuation">(</span>fpr<span class="token punctuation">,</span> tpr<span class="token punctuation">)</span>
        aucs<span class="token punctuation">.</span>append<span class="token punctuation">(</span>roc_auc<span class="token punctuation">)</span>
        ax<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>fpr<span class="token punctuation">,</span> tpr<span class="token punctuation">,</span> lw<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.3</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&#39;ROC Fold {} (AUC = {:.3f})&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> roc_auc<span class="token punctuation">)</span><span class="token punctuation">)</span>
        
    <span class="token comment"># Plotting ROC for random guessing</span>
    plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> linestyle<span class="token operator">=</span><span class="token string">&#39;--&#39;</span><span class="token punctuation">,</span> lw<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.8</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&#39;Random Guessing&#39;</span><span class="token punctuation">)</span>
    
    mean_tpr <span class="token operator">=</span> np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>tprs_interp<span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>
    mean_tpr<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1.0</span>
    mean_auc <span class="token operator">=</span> auc<span class="token punctuation">(</span>mean_fpr<span class="token punctuation">,</span> mean_tpr<span class="token punctuation">)</span>
    std_auc <span class="token operator">=</span> np<span class="token punctuation">.</span>std<span class="token punctuation">(</span>aucs<span class="token punctuation">)</span>
    
    <span class="token comment"># Plotting the mean ROC</span>
    ax<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>mean_fpr<span class="token punctuation">,</span> mean_tpr<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&#39;Mean ROC (AUC = {:.3f} $\\pm$ {:.3f})&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>mean_auc<span class="token punctuation">,</span> std_auc<span class="token punctuation">)</span><span class="token punctuation">,</span> lw<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.8</span><span class="token punctuation">)</span>
    
    <span class="token comment"># Plotting the standard deviation around the mean ROC Curve</span>
    std_tpr <span class="token operator">=</span> np<span class="token punctuation">.</span>std<span class="token punctuation">(</span>tprs_interp<span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>
    tprs_upper <span class="token operator">=</span> np<span class="token punctuation">.</span>minimum<span class="token punctuation">(</span>mean_tpr <span class="token operator">+</span> std_tpr<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
    tprs_lower <span class="token operator">=</span> np<span class="token punctuation">.</span>maximum<span class="token punctuation">(</span>mean_tpr <span class="token operator">-</span> std_tpr<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
    ax<span class="token punctuation">.</span>fill_between<span class="token punctuation">(</span>mean_fpr<span class="token punctuation">,</span> tprs_lower<span class="token punctuation">,</span> tprs_upper<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">&#39;grey&#39;</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">.2</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&#39;$\\pm$ 1 std. dev.&#39;</span><span class="token punctuation">)</span>
    
    ax<span class="token punctuation">.</span>set_xlabel<span class="token punctuation">(</span><span class="token string">&#39;False Positive Rate&#39;</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">,</span> labelpad<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span>
    ax<span class="token punctuation">.</span>set_ylabel<span class="token punctuation">(</span><span class="token string">&#39;True Positive Rate&#39;</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">,</span> labelpad<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span>
    ax<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token string">&#39;x&#39;</span><span class="token punctuation">,</span> labelsize<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">)</span>
    ax<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token string">&#39;y&#39;</span><span class="token punctuation">,</span> labelsize<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">)</span>
    ax<span class="token punctuation">.</span>set_xlim<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.05</span><span class="token punctuation">,</span> <span class="token number">1.05</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    ax<span class="token punctuation">.</span>set_ylim<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.05</span><span class="token punctuation">,</span> <span class="token number">1.05</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

    ax<span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">&#39;ROC Curves of Folds&#39;</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token number">1.02</span><span class="token punctuation">)</span>
    ax<span class="token punctuation">.</span>legend<span class="token punctuation">(</span>loc<span class="token operator">=</span><span class="token string">&#39;lower right&#39;</span><span class="token punctuation">,</span> prop<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;size&#39;</span><span class="token punctuation">:</span> <span class="token number">13</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    
    plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>

plot_roc_curve<span class="token punctuation">(</span>fprs<span class="token punctuation">,</span> tprs<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+m+`" alt="alt text" tabindex="0" loading="lazy"><figcaption>alt text</figcaption></figure><h3 id="提交" tabindex="-1"><a class="header-anchor" href="#提交" aria-hidden="true">#</a> 提交</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>class_survived <span class="token operator">=</span> <span class="token punctuation">[</span>col <span class="token keyword">for</span> col <span class="token keyword">in</span> probs<span class="token punctuation">.</span>columns <span class="token keyword">if</span> col<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">&#39;Prob_1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
probs<span class="token punctuation">[</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> probs<span class="token punctuation">[</span>class_survived<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> N
probs<span class="token punctuation">[</span><span class="token string">&#39;0&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> probs<span class="token punctuation">.</span>drop<span class="token punctuation">(</span>columns<span class="token operator">=</span>class_survived<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> N
probs<span class="token punctuation">[</span><span class="token string">&#39;pred&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>
pos <span class="token operator">=</span> probs<span class="token punctuation">[</span>probs<span class="token punctuation">[</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">]</span> <span class="token operator">&gt;=</span> <span class="token number">0.5</span><span class="token punctuation">]</span><span class="token punctuation">.</span>index
probs<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>pos<span class="token punctuation">,</span> <span class="token string">&#39;pred&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>

y_pred <span class="token operator">=</span> probs<span class="token punctuation">[</span><span class="token string">&#39;pred&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">)</span>

submission_df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>columns<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;PassengerId&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Survived&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
submission_df<span class="token punctuation">[</span><span class="token string">&#39;PassengerId&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df_test<span class="token punctuation">[</span><span class="token string">&#39;PassengerId&#39;</span><span class="token punctuation">]</span>
submission_df<span class="token punctuation">[</span><span class="token string">&#39;Survived&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> y_pred<span class="token punctuation">.</span>values
submission_df<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string">&#39;submissions.csv&#39;</span><span class="token punctuation">,</span> header<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
submission_df<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2><ol><li>https://www.kaggle.com/code/gunesevitan/titanic-advanced-feature-engineering-tutorial/notebook</li><li>https://zhuanlan.zhihu.com/p/50194676</li></ol>`,94);function T(N,P){const a=o("ExternalLinkIcon");return c(),l("div",null,[g,_,n("p",null,[s("Kaggle平台为我们提供了一个竞赛案例"),n("a",f,[s("Titanic: Machine Learning from Disaster"),t(a)]),s("，在该案例中，我们将探究什么样的人在此次海难中幸存的几率更高，并通过构建预测模型来预测乘客生存率。")]),h,n("h3",y,[x,s(),n("a",S,[s("字段"),t(a)])]),w,n("p",null,[n("a",F,[s("Martha Evelyn Stone: Titanic Survivor"),t(a)]),s("一文中提到Stone, Mrs. George Nelson (Martha Evelyn)和她的佣人Icard, Miss. Amelie在 S (Southampton)登船. 所以使用S填补缺失值.")]),A])}const M=e(b,[["render",T],["__file","Titanic.html.vue"]]);export{M as default};
