const n=JSON.parse(`{"key":"v-5d7f69bb","path":"/8%E6%95%B0%E6%8D%AE%E5%B7%A5%E7%A8%8B/2flink/pyflinksql/sink.html","title":"sink","lang":"zh-CN","frontmatter":{"description":"sink mysql from pyflink.table import EnvironmentSettings, TableEnvironment ## create a stream TableEnvironment env_settings = EnvironmentSettings.in_streaming_mode() table_env = TableEnvironment.create(env_settings) table_env.get_config().set(\\"pipeline.jars\\", \\"file:///D:/code/test_python/jar/flink-connector-jdbc-1.15.1.jar;file:///D:/code/test_python/jar/mysql-connector-java-8.0.23.jar\\") table_env.get_config().set(\\"table.exec.resource.default-parallelism\\", \\"1\\") ## 2. 创建 source 表, 使用datagen生成数据 table_env.execute_sql(\\"\\"\\" CREATE TABLE source_table ( f0 INT ) WITH ( 'connector' = 'datagen', 'rows-per-second'='1', 'fields.f0.start' = '0', 'fields.f0.end' = '100000', 'fields.f0.kind' = 'sequence' ) \\"\\"\\") ## table_env.execute_sql(\\"select * from source_table\\").print() table_env.execute_sql(\\"\\"\\"CREATE TABLE print_table ( f0 INT ) WITH ( 'connector' = 'jdbc', 'url' = 'jdbc:mysql://aos-db.c6w5wba58yqu.rds.cn-northwest-1.amazonaws.com.cn:3306/test?useSSL=false', 'driver'= 'com.mysql.cj.jdbc.Driver', 'table-name' = 'print_table', 'username' = 'admin', 'password' = 'HuamiAdmin2017' ); \\"\\"\\") table_env.execute_sql(\\"insert into print_table select f0 from source_table\\").wait(60000) ## table = table_env.from_path(\\"mySource\\") ## table.execute().print()","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/8%E6%95%B0%E6%8D%AE%E5%B7%A5%E7%A8%8B/2flink/pyflinksql/sink.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"sink"}],["meta",{"property":"og:description","content":"sink mysql from pyflink.table import EnvironmentSettings, TableEnvironment ## create a stream TableEnvironment env_settings = EnvironmentSettings.in_streaming_mode() table_env = TableEnvironment.create(env_settings) table_env.get_config().set(\\"pipeline.jars\\", \\"file:///D:/code/test_python/jar/flink-connector-jdbc-1.15.1.jar;file:///D:/code/test_python/jar/mysql-connector-java-8.0.23.jar\\") table_env.get_config().set(\\"table.exec.resource.default-parallelism\\", \\"1\\") ## 2. 创建 source 表, 使用datagen生成数据 table_env.execute_sql(\\"\\"\\" CREATE TABLE source_table ( f0 INT ) WITH ( 'connector' = 'datagen', 'rows-per-second'='1', 'fields.f0.start' = '0', 'fields.f0.end' = '100000', 'fields.f0.kind' = 'sequence' ) \\"\\"\\") ## table_env.execute_sql(\\"select * from source_table\\").print() table_env.execute_sql(\\"\\"\\"CREATE TABLE print_table ( f0 INT ) WITH ( 'connector' = 'jdbc', 'url' = 'jdbc:mysql://aos-db.c6w5wba58yqu.rds.cn-northwest-1.amazonaws.com.cn:3306/test?useSSL=false', 'driver'= 'com.mysql.cj.jdbc.Driver', 'table-name' = 'print_table', 'username' = 'admin', 'password' = 'HuamiAdmin2017' ); \\"\\"\\") table_env.execute_sql(\\"insert into print_table select f0 from source_table\\").wait(60000) ## table = table_env.from_path(\\"mySource\\") ## table.execute().print()"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-24T12:46:58.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2025-02-24T12:46:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"sink\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-24T12:46:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[{"level":2,"title":"mysql","slug":"mysql","link":"#mysql","children":[]},{"level":2,"title":"redis","slug":"redis","link":"#redis","children":[]}],"git":{"createdTime":1740401218000,"updatedTime":1740401218000,"contributors":[{"name":"Claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":0.5,"words":149},"filePathRelative":"8数据工程/2flink/pyflinksql/sink.md","localizedDate":"2025年2月24日","excerpt":"<h1> sink</h1>\\n<h2> mysql</h2>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">from</span> pyflink<span class=\\"token punctuation\\">.</span>table <span class=\\"token keyword\\">import</span> EnvironmentSettings<span class=\\"token punctuation\\">,</span> TableEnvironment\\n\\n<span class=\\"token comment\\">## create a stream TableEnvironment</span>\\nenv_settings <span class=\\"token operator\\">=</span> EnvironmentSettings<span class=\\"token punctuation\\">.</span>in_streaming_mode<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\ntable_env <span class=\\"token operator\\">=</span> TableEnvironment<span class=\\"token punctuation\\">.</span>create<span class=\\"token punctuation\\">(</span>env_settings<span class=\\"token punctuation\\">)</span>\\ntable_env<span class=\\"token punctuation\\">.</span>get_config<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token builtin\\">set</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"pipeline.jars\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"file:///D:/code/test_python/jar/flink-connector-jdbc-1.15.1.jar;file:///D:/code/test_python/jar/mysql-connector-java-8.0.23.jar\\"</span><span class=\\"token punctuation\\">)</span>\\ntable_env<span class=\\"token punctuation\\">.</span>get_config<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token builtin\\">set</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"table.exec.resource.default-parallelism\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"1\\"</span><span class=\\"token punctuation\\">)</span>\\n\\n\\n\\n<span class=\\"token comment\\">## 2. 创建 source 表, 使用datagen生成数据</span>\\ntable_env<span class=\\"token punctuation\\">.</span>execute_sql<span class=\\"token punctuation\\">(</span><span class=\\"token triple-quoted-string string\\">\\"\\"\\"\\nCREATE TABLE source_table (\\n    f0 INT\\n    ) WITH (\\n    'connector' = 'datagen',\\n    'rows-per-second'='1',\\n    'fields.f0.start' = '0',\\n    'fields.f0.end' = '100000',\\n    'fields.f0.kind' = 'sequence'\\n    )\\n\\"\\"\\"</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token comment\\">## table_env.execute_sql(\\"select * from source_table\\").print()</span>\\n\\n\\ntable_env<span class=\\"token punctuation\\">.</span>execute_sql<span class=\\"token punctuation\\">(</span><span class=\\"token triple-quoted-string string\\">\\"\\"\\"CREATE TABLE print_table (\\n    f0 INT\\n    ) WITH (\\n    'connector' = 'jdbc',\\n    'url' = 'jdbc:mysql://aos-db.c6w5wba58yqu.rds.cn-northwest-1.amazonaws.com.cn:3306/test?useSSL=false',\\n    'driver'= 'com.mysql.cj.jdbc.Driver',\\n    'table-name' = 'print_table',\\n    'username' = 'admin',\\n    'password' = 'HuamiAdmin2017'\\n);\\n\\"\\"\\"</span><span class=\\"token punctuation\\">)</span>\\n\\ntable_env<span class=\\"token punctuation\\">.</span>execute_sql<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"insert into print_table select f0 from source_table\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span>wait<span class=\\"token punctuation\\">(</span><span class=\\"token number\\">60000</span><span class=\\"token punctuation\\">)</span>\\n\\n\\n\\n<span class=\\"token comment\\">## table = table_env.from_path(\\"mySource\\")</span>\\n<span class=\\"token comment\\">## table.execute().print()</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"王新宇"},"autoDesc":true}`);export{n as data};
