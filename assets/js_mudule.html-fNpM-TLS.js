const e=JSON.parse('{"key":"v-5f848e2e","path":"/%E6%9C%AA%E5%88%86%E7%B1%BB/%E5%89%8D%E7%AB%AF/javaScript/%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/js_mudule.html","title":"mudule","lang":"zh-CN","frontmatter":{"description":"mudule 早期,JS没有模块化的概念(Python中有module,Java中有Package).是直接引入整个JS代码. &lt;script type=\\"text/javascript\\" src=\\"index.js\\"&gt;&lt;/script&gt; 缺点: 污染全局变量,相当于将所有JS文本拼贴到一起 加载有顺序: 使用getElement等方法会报错, 因为html文件还没加载 如果JS文件有依赖关系, 则需要把被依赖的JS文件放前面, 先加载","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/%E6%9C%AA%E5%88%86%E7%B1%BB/%E5%89%8D%E7%AB%AF/javaScript/%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/js_mudule.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"mudule"}],["meta",{"property":"og:description","content":"mudule 早期,JS没有模块化的概念(Python中有module,Java中有Package).是直接引入整个JS代码. &lt;script type=\\"text/javascript\\" src=\\"index.js\\"&gt;&lt;/script&gt; 缺点: 污染全局变量,相当于将所有JS文本拼贴到一起 加载有顺序: 使用getElement等方法会报错, 因为html文件还没加载 如果JS文件有依赖关系, 则需要把被依赖的JS文件放前面, 先加载"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-25T13:46:58.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2023-11-25T13:46:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"mudule\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-25T13:46:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[{"level":2,"title":"ES6","slug":"es6","link":"#es6","children":[{"level":3,"title":"按需导入方法和对象","slug":"按需导入方法和对象","link":"#按需导入方法和对象","children":[]},{"level":3,"title":"导出整个模块","slug":"导出整个模块","link":"#导出整个模块","children":[]}]},{"level":2,"title":"CommonJS规范","slug":"commonjs规范","link":"#commonjs规范","children":[]},{"level":2,"title":"将ES6语法转换为CommonJS","slug":"将es6语法转换为commonjs","link":"#将es6语法转换为commonjs","children":[{"level":3,"title":"查看Node.js对ES6的支持情况","slug":"查看node-js对es6的支持情况","link":"#查看node-js对es6的支持情况","children":[]},{"level":3,"title":"使用babel, 将ES6语法转换为CommonJS","slug":"使用babel-将es6语法转换为commonjs","link":"#使用babel-将es6语法转换为commonjs","children":[]}]}],"git":{"createdTime":1700920018000,"updatedTime":1700920018000,"contributors":[{"name":"claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":2.28,"words":685},"filePathRelative":"未分类/前端/javaScript/安装配置/js_mudule.md","localizedDate":"2023年11月25日","excerpt":"<h1> mudule</h1>\\n<p>早期,JS没有模块化的概念(Python中有module,Java中有Package).是直接引入整个JS代码.\\n<code>&lt;script type=\\"text/javascript\\" src=\\"index.js\\"&gt;&lt;/script&gt;</code>\\n缺点:</p>\\n<ul>\\n<li>污染全局变量,相当于将所有JS文本拼贴到一起</li>\\n<li>加载有顺序:\\n<ul>\\n<li>使用getElement等方法会报错, 因为html文件还没加载</li>\\n<li>如果JS文件有依赖关系, 则需要把被依赖的JS文件放前面, 先加载</li>\\n</ul>\\n</li>\\n</ul>","copyright":{"author":"王新宇"},"autoDesc":true}');export{e as data};
