import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as d,c as e,e as r}from"./app-MTzDpLgJ.js";const a={},o=r('<h1 id="num" tabindex="-1"><a class="header-anchor" href="#num" aria-hidden="true">#</a> num</h1><h2 id="function" tabindex="-1"><a class="header-anchor" href="#function" aria-hidden="true">#</a> function</h2><table><thead><tr><th>Name</th><th>Description</th><th>例子</th></tr></thead><tbody><tr><td>ABS(X)</td><td>绝对值</td><td><code>SELECT ABS(-32); # -&gt; 32</code></td></tr><tr><td>ACOS(X)</td><td>反余弦</td><td><code>SELECT ACOS(1); # -&gt; 0</code></td></tr><tr><td>ASIN(X)</td><td>反正弦</td><td><code>SELECT ASIN(0.2); # -&gt; 0.20135792079033</code></td></tr><tr><td>ATAN(X)</td><td>反正切</td><td><code>SELECT ATAN(2); # -&gt; 1.1071487177941</code></td></tr><tr><td>ATAN2(), ATAN()</td><td>Return the arc tangent of the two arguments</td><td></td></tr><tr><td>CEIL(X)</td><td>CEILING()</td><td></td></tr><tr><td>CEILING(X)</td><td>向上取整</td><td><code>SELECT CEILING(1.23); # -&gt; 2</code></td></tr><tr><td>CONV(N,from_base,to_base)</td><td>Convert numbers between different number bases</td><td></td></tr><tr><td>COS(X)</td><td>余弦</td><td><code>SELECT COS(PI()); # -&gt; -1</code></td></tr><tr><td>COT()</td><td>Return the cotangent</td><td></td></tr><tr><td>CRC32()</td><td>Compute a cyclic redundancy check value</td><td></td></tr><tr><td>DEGREES(X)</td><td>Convert radians to degrees</td><td><code>SELECT DEGREES(PI()); # -&gt; 180</code></td></tr><tr><td>EXP(X)</td><td>指数</td><td><code>SELECT EXP(2); # -&gt; 7.3890560989307</code></td></tr><tr><td>FLOOR()</td><td>向下取整</td><td><code>SELECT FLOOR(1.23), FLOOR(-1.23); # -&gt; 1, -2</code></td></tr><tr><td>LN(X)</td><td>Return the natural logarithm of the argument</td><td><code>SELECT LN(2); # -&gt; 0.69314718055995</code></td></tr><tr><td>LOG()</td><td>Return the natural logarithm of the first argument</td><td><code>SELECT LOG(10,100); # -&gt; 2</code></td></tr><tr><td>LOG10()</td><td>Return the base-10 logarithm of the argument</td><td></td></tr><tr><td>LOG2()</td><td>Return the base-2 logarithm of the argument</td><td></td></tr><tr><td>MOD(N,M), N % M, N MOD M</td><td>Return the remainder</td><td><code>SELECT MOD(234, 10); # -&gt; 4</code></td></tr><tr><td>PI()</td><td>Return the value of pi</td><td><code>SELECT PI(); # -&gt; 3.141593</code></td></tr><tr><td>POW()</td><td>Return the argument raised to the specified power</td><td><code>SELECT POW(2,2); # -&gt; 4</code></td></tr><tr><td>POWER()</td><td>POW()</td><td></td></tr><tr><td>RADIANS()</td><td>Return argument converted to radians</td><td></td></tr><tr><td>RAND([N])</td><td>随机数</td><td><code>SELECT FLOOR(7 + (RAND() * 5));</code></td></tr><tr><td>ROUND(X), ROUND(X,D)</td><td>随机数</td><td><code>SELECT ROUND(-1.23); # -&gt; -1</code></td></tr><tr><td>SIGN(X)</td><td>大于0的判定为1,小于0的返回-1,0等于0</td><td><code>SELECT SIGN(-32);</code></td></tr><tr><td>SIN(X)</td><td>Return the sine of the argument</td><td></td></tr><tr><td>SQRT(X)</td><td>Return the square root of the argument</td><td><code>SELECT SQRT(4); # -&gt; 2</code></td></tr><tr><td>TAN()</td><td>Return the tangent of the argument</td><td></td></tr><tr><td><code>TRUNCATE(X,D)</code></td><td>Truncate to specified number of decimal places</td><td><code>SELECT TRUNCATE(-1.999,1); # -&gt; 100</code></td></tr></tbody></table><h2 id="type" tabindex="-1"><a class="header-anchor" href="#type" aria-hidden="true">#</a> type</h2><h3 id="integer" tabindex="-1"><a class="header-anchor" href="#integer" aria-hidden="true">#</a> Integer</h3><table><thead><tr><th>Type</th><th>Storage (Bytes)</th><th>Minimum Value Signed</th><th>Minimum Value Unsigned</th><th>Maximum Value Signed</th><th>Maximum Value Unsigned</th></tr></thead><tbody><tr><td>TINYINT</td><td>1</td><td>-128</td><td>0</td><td>127</td><td>255</td></tr><tr><td>SMALLINT</td><td>2</td><td>-32768</td><td>0</td><td>32767</td><td>65535</td></tr><tr><td>MEDIUMINT</td><td>3</td><td>-8388608</td><td>0</td><td>8388607</td><td>16777215</td></tr><tr><td>INT</td><td>4</td><td>-2147483648</td><td>0</td><td>2147483647</td><td>4294967295</td></tr><tr><td>BIGINT</td><td>8</td><td>-263</td><td>0</td><td>2^63-1</td><td>2^64-1</td></tr></tbody></table><h3 id="decimal" tabindex="-1"><a class="header-anchor" href="#decimal" aria-hidden="true">#</a> Decimal</h3><p><code>salary DECIMAL(5,2)</code></p><h3 id="float-double" tabindex="-1"><a class="header-anchor" href="#float-double" aria-hidden="true">#</a> Float&amp;Double</h3><p><code>FLOAT(7,4) will look like -999.9999 when displayed. </code><code>MySQL performs rounding when storing values, so if you insert 999.00009 into a FLOAT(7,4) column, the approximate result is 999.0001.</code></p><h3 id="bit" tabindex="-1"><a class="header-anchor" href="#bit" aria-hidden="true">#</a> Bit</h3><p>If you assign a value to a BIT(M) column that is less than M bits long, the value is padded on the left with zeros. For example, assigning a value of b&#39;101&#39; to a BIT(6) column is, in effect, the same as assigning b&#39;000101&#39;.</p><p>参考: https://dev.mysql.com/doc/refman/8.0/en/numeric-types.html https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html</p>',13),n=[o];function c(h,i){return d(),e("div",null,n)}const l=t(a,[["render",c],["__file","num.html.vue"]]);export{l as default};
