import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,e as t}from"./app-A10JnHE0.js";const p={},e=t(`<div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/select.h&gt;</span></span>
<span class="token keyword">int</span> <span class="token function">select</span><span class="token punctuation">(</span><span class="token keyword">int</span> nfds<span class="token punctuation">,</span> fd_set <span class="token operator">*</span>readfds<span class="token punctuation">,</span> fd_set <span class="token operator">*</span>writefds<span class="token punctuation">,</span>
			fd_set <span class="token operator">*</span>exceptfds<span class="token punctuation">,</span> <span class="token keyword">struct</span> <span class="token class-name">timeval</span> <span class="token operator">*</span>timeout<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>nfds</td><td>监听文件描述符中最大的+1,或者填1024</td></tr><tr><td>readfds</td><td>读集合</td></tr><tr><td>writefds</td><td>写集合</td></tr><tr><td>exceptfds</td><td>异常集合</td></tr><tr><td>timeout</td><td>定时阻塞监控时间，3种情况</td></tr></tbody></table><p>timeout: 1.NULL，永远等下去 2.设置timeval，等待固定时间 3.设置timeval里时间均为0，检查描述字后立即返回，轮询</p><p>文件描述符操作函数</p><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td>void FD_CLR(int fd, fd_set *set);</td><td>清0</td></tr><tr><td>int FD_ISSET(int fd, fd_set *set);</td><td>是否置1</td></tr><tr><td>void FD_SET(int fd, fd_set *set);</td><td>fd位置1</td></tr><tr><td>void FD_ZERO(fd_set *set);</td><td>所有位清0</td></tr></tbody></table><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">//创建一个文件描述符表</span>
fd_st reads<span class="token punctuation">,</span>temp<span class="token punctuation">;</span>
<span class="token comment">//初始化</span>
<span class="token function">fd_zero</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>reads<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//将监听的描述符添加到读集合</span>
<span class="token function">fd_set</span><span class="token punctuation">(</span>lfd<span class="token punctuation">,</span><span class="token operator">&amp;</span>reads<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//内核检测</span>
<span class="token keyword">while</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	temp <span class="token operator">=</span> reads<span class="token punctuation">;</span>
	<span class="token keyword">int</span> ret <span class="token operator">=</span> <span class="token function">select</span><span class="token punctuation">(</span>maxfd<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>reads<span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//是不是鉴定的</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">fd_isset</span><span class="token punctuation">(</span>lfd<span class="token punctuation">,</span><span class="token operator">&amp;</span>temp<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">int</span> cfd <span class="token operator">=</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//cfd加入读集合</span>
	<span class="token function">fd_set</span><span class="token punctuation">(</span>cfd<span class="token punctuation">,</span><span class="token operator">&amp;</span>reads<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//更新maxfd</span>
	maxfd<span class="token operator">=</span>maxfd<span class="token operator">&lt;</span>cfd<span class="token operator">?</span>cfd<span class="token operator">:</span>maxfd<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token comment">//客户端发送数据</span>
	<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> lfd<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>maxfd<span class="token punctuation">;</span><span class="token operator">++</span>i<span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">fd_isset</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token operator">&amp;</span>temp<span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token keyword">int</span> len <span class="token operator">=</span> <span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span><span class="token punctuation">(</span>len <span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
				<span class="token comment">//cfd 从读集合中删除</span>
				<span class="token function">fd_clr</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token operator">&amp;</span>reads<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token function">write</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>select 优点: 跨平台 缺点: 1.select仅支持1024个文件描述符 2.用户空间和内核空间相互拷贝浪费资源 3.遍历也很浪费资源</p>`,7),o=[e];function c(l,i){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","4_1select.html.vue"]]);export{r as default};
