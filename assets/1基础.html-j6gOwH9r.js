const t=JSON.parse('{"key":"v-1956a819","path":"/4%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/2c%E8%AF%AD%E8%A8%80/9%E7%BA%BF%E7%A8%8B/1%E5%9F%BA%E7%A1%80.html","title":"基础","lang":"zh-CN","frontmatter":{"description":"基础 线程除了内存中的栈区不共享,其他的都共享(因为线程本质就是执行一个函数) 如果只有一个cpu多线程是无用的,因为同一时间一个进程只能获得一个cpu light weight process 轻量级的进程，本质仍是进程\\t 线程：最小的执行单位,有PCB,但没有地址空间(共享进程的) 进程：最小分配资源单位，可看成是只有一个线程的进程。有PCB,有独立的地址空间 ps –Lf pid 查看多线程进程 线程与进程 进程 线程 fork pthread_create exit pthread_exit wait pthread_join kill pthread_cancel getpid pthread_self","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/4%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/2c%E8%AF%AD%E8%A8%80/9%E7%BA%BF%E7%A8%8B/1%E5%9F%BA%E7%A1%80.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"基础"}],["meta",{"property":"og:description","content":"基础 线程除了内存中的栈区不共享,其他的都共享(因为线程本质就是执行一个函数) 如果只有一个cpu多线程是无用的,因为同一时间一个进程只能获得一个cpu light weight process 轻量级的进程，本质仍是进程\\t 线程：最小的执行单位,有PCB,但没有地址空间(共享进程的) 进程：最小分配资源单位，可看成是只有一个线程的进程。有PCB,有独立的地址空间 ps –Lf pid 查看多线程进程 线程与进程 进程 线程 fork pthread_create exit pthread_exit wait pthread_join kill pthread_cancel getpid pthread_self"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-24T12:46:58.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2025-02-24T12:46:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"基础\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-24T12:46:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[],"git":{"createdTime":1740401218000,"updatedTime":1740401218000,"contributors":[{"name":"Claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":0.89,"words":268},"filePathRelative":"4编程语言/2c语言/9线程/1基础.md","localizedDate":"2025年2月24日","excerpt":"<h1> 基础</h1>\\n<ol>\\n<li>线程除了内存中的栈区不共享,其他的都共享(因为线程本质就是执行一个函数)</li>\\n<li>如果只有一个cpu多线程是无用的,因为同一时间一个进程只能获得一个cpu</li>\\n<li>light weight process 轻量级的进程，本质仍是进程\\t\\n线程：最小的执行单位,有PCB,但没有地址空间(共享进程的)\\n进程：最小分配资源单位，可看成是只有一个线程的进程。有PCB,有独立的地址空间\\n<code>ps –Lf pid</code> 查看多线程进程</li>\\n</ol>\\n<h1> 线程与进程</h1>\\n<table>\\n<thead>\\n<tr>\\n<th>进程</th>\\n<th>线程</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>fork</td>\\n<td>pthread_create</td>\\n</tr>\\n<tr>\\n<td>exit</td>\\n<td>pthread_exit</td>\\n</tr>\\n<tr>\\n<td>wait</td>\\n<td>pthread_join</td>\\n</tr>\\n<tr>\\n<td>kill</td>\\n<td>pthread_cancel</td>\\n</tr>\\n<tr>\\n<td>getpid</td>\\n<td>pthread_self</td>\\n</tr>\\n</tbody>\\n</table>","copyright":{"author":"王新宇"},"autoDesc":true}');export{t as data};
