const e=JSON.parse('{"key":"v-54db12af","path":"/2%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/5_1javascript/8%E5%90%8C%E6%AD%A5%E5%BC%82%E6%AD%A5(promise)/promise.html","title":"基础","lang":"zh-CN","frontmatter":{"description":"基础 同步异步 同步任务: 在主线程上执行, 形成一个任务队列 异步任务: 通过回调函数实现, 形成一个任务队列 普通事件, 如: click, resize 资源加载, 如: load, error 定时器, 如: setInterval, setTimeout js的执行机制: 先执行同步任务队列中的任务 将异步任务(回调函数)放入任务队列中, 最新解决方案是promise 所有的同步任务执行结束后, 执行异步任务队列中的任务","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/2%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/5_1javascript/8%E5%90%8C%E6%AD%A5%E5%BC%82%E6%AD%A5(promise)/promise.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"基础"}],["meta",{"property":"og:description","content":"基础 同步异步 同步任务: 在主线程上执行, 形成一个任务队列 异步任务: 通过回调函数实现, 形成一个任务队列 普通事件, 如: click, resize 资源加载, 如: load, error 定时器, 如: setInterval, setTimeout js的执行机制: 先执行同步任务队列中的任务 将异步任务(回调函数)放入任务队列中, 最新解决方案是promise 所有的同步任务执行结束后, 执行异步任务队列中的任务"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://claroja.github.io/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-21T12:59:55.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"基础"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2025-02-21T12:59:55.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"基础\\",\\"image\\":[\\"https://claroja.github.io/\\"],\\"dateModified\\":\\"2025-02-21T12:59:55.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[{"level":2,"title":"同步异步","slug":"同步异步","link":"#同步异步","children":[]},{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"状态(PromiseState)","slug":"状态-promisestate","link":"#状态-promisestate","children":[]},{"level":2,"title":"promise结果(PromiseResult)","slug":"promise结果-promiseresult","link":"#promise结果-promiseresult","children":[]},{"level":2,"title":"代码","slug":"代码","link":"#代码","children":[]},{"level":2,"title":"修改promise对象状态","slug":"修改promise对象状态","link":"#修改promise对象状态","children":[]},{"level":2,"title":"一个 promise 指定多个成功/失败回调函数,  都会调用当 promise 改变为对应状态时都会调用","slug":"一个-promise-指定多个成功-失败回调函数-都会调用当-promise-改变为对应状态时都会调用","link":"#一个-promise-指定多个成功-失败回调函数-都会调用当-promise-改变为对应状态时都会调用","children":[]},{"level":2,"title":"改变 promise 状态和指定回调函数谁先谁后?","slug":"改变-promise-状态和指定回调函数谁先谁后","link":"#改变-promise-状态和指定回调函数谁先谁后","children":[]},{"level":2,"title":"promise.then()返回的新 promise 的结果状态由什么决定?","slug":"promise-then-返回的新-promise-的结果状态由什么决定","link":"#promise-then-返回的新-promise-的结果状态由什么决定","children":[]},{"level":2,"title":"promise 如何串连多个操作任务?","slug":"promise-如何串连多个操作任务","link":"#promise-如何串连多个操作任务","children":[]},{"level":2,"title":"promise 异常传透?","slug":"promise-异常传透","link":"#promise-异常传透","children":[]},{"level":2,"title":"中断 promise 链","slug":"中断-promise-链","link":"#中断-promise-链","children":[]},{"level":2,"title":"api","slug":"api","link":"#api","children":[{"level":3,"title":"Promise 构造函数:","slug":"promise-构造函数","link":"#promise-构造函数","children":[]},{"level":3,"title":"Promise.prototype.then","slug":"promise-prototype-then","link":"#promise-prototype-then","children":[]},{"level":3,"title":"Promise.prototype.catch","slug":"promise-prototype-catch","link":"#promise-prototype-catch","children":[]},{"level":3,"title":"Promise.resolve","slug":"promise-resolve","link":"#promise-resolve","children":[]},{"level":3,"title":"Promise.reject","slug":"promise-reject","link":"#promise-reject","children":[]},{"level":3,"title":"Promise.race","slug":"promise-race","link":"#promise-race","children":[]}]}],"git":{"createdTime":1740142795000,"updatedTime":1740142795000,"contributors":[{"name":"Claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":6.63,"words":1988},"filePathRelative":"2编程语言/5_1javascript/8同步异步(promise)/promise.md","localizedDate":"2025年2月21日","excerpt":"<h1> 基础</h1>\\n<h2> 同步异步</h2>\\n<ul>\\n<li>同步任务: 在主线程上执行, 形成一个任务队列</li>\\n<li>异步任务: 通过回调函数实现, 形成一个任务队列\\n<ul>\\n<li>普通事件, 如: click, resize</li>\\n<li>资源加载, 如: load, error</li>\\n<li>定时器, 如: setInterval, setTimeout</li>\\n</ul>\\n</li>\\n</ul>\\n<p>js的执行机制:</p>\\n<ol>\\n<li>先执行同步任务队列中的任务</li>\\n<li>将异步任务(回调函数)放入任务队列中, 最新解决方案是promise</li>\\n<li>所有的同步任务执行结束后, 执行异步任务队列中的任务</li>\\n</ol>","copyright":{"author":"王新宇"},"autoDesc":true}');export{e as data};
