const e=JSON.parse('{"key":"v-7213a0a7","path":"/6%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/2DOM/5%E9%9F%B3%E9%A2%91/oscillator.html","title":"智能补全","lang":"zh-CN","frontmatter":{"description":"智能补全 参数 描述 detune: 每个八度都有1200个cent, detune代表有多少个cent. 比如我们想提高一个八度, 那么就让detune=1200. cents将两个半音分为100份, 每一份是一个cent frequency 原始声波的频率, 默认是440, 单位hertz.effectiveFrequency是真正的输出频率(音高), 它的计算方式如下, 是根据原始的frequency和detune共同决定的. 当detune=0时, 就是原始音高, 当detune=1200时, 频率提高一倍, 就提高了一个八度.effectiveFrequency = frequency * pow(2, detune / 1200) type 波形的类型, 有sine, square, sawtooth, or triangle","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/6%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/2DOM/5%E9%9F%B3%E9%A2%91/oscillator.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"智能补全"}],["meta",{"property":"og:description","content":"智能补全 参数 描述 detune: 每个八度都有1200个cent, detune代表有多少个cent. 比如我们想提高一个八度, 那么就让detune=1200. cents将两个半音分为100份, 每一份是一个cent frequency 原始声波的频率, 默认是440, 单位hertz.effectiveFrequency是真正的输出频率(音高), 它的计算方式如下, 是根据原始的frequency和detune共同决定的. 当detune=0时, 就是原始音高, 当detune=1200时, 频率提高一倍, 就提高了一个八度.effectiveFrequency = frequency * pow(2, detune / 1200) type 波形的类型, 有sine, square, sawtooth, or triangle"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-24T12:46:58.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2025-02-24T12:46:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"智能补全\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-24T12:46:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[],"git":{"createdTime":1740401218000,"updatedTime":1740401218000,"contributors":[{"name":"Claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":0.85,"words":256},"filePathRelative":"6前端开发/2DOM/5音频/oscillator.md","localizedDate":"2025年2月24日","excerpt":"<h1> 智能补全</h1>\\n<table>\\n<thead>\\n<tr>\\n<th>参数</th>\\n<th>描述</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\"https://www.javascripture.com/OscillatorNode#detune\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">detune</a>: 每个八度都有1200个cent, detune代表有多少个cent. 比如我们想提高一个八度, 那么就让detune=1200. <a href=\\"https://en.wikipedia.org/wiki/Cent_(music)\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">cents</a>将两个半音分为100份, 每一份是一个cent</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td><code>frequency</code></td>\\n<td>原始声波的频率, 默认是440, 单位<code>hertz</code>.<code>effectiveFrequency</code>是真正的输出频率(音高), 它的计算方式如下, 是根据原始的<code>frequency</code>和<code>detune</code>共同决定的. 当<code>detune</code>=0时, 就是原始音高, 当<code>detune</code>=1200时, 频率提高一倍, 就提高了一个八度.<code>effectiveFrequency = frequency * pow(2, detune / 1200)</code></td>\\n</tr>\\n<tr>\\n<td><code>type</code></td>\\n<td>波形的类型, 有<code>sine</code>, <code>square</code>, <code>sawtooth</code>, or <code>triangle</code></td>\\n</tr>\\n</tbody>\\n</table>","copyright":{"author":"王新宇"},"autoDesc":true}');export{e as data};
