import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as i,o as d,c,a as n,b as e,d as s,e as l}from"./app-A10JnHE0.js";const o={},r=l(`<h1 id="markdown-preview-enhanced" tabindex="-1"><a class="header-anchor" href="#markdown-preview-enhanced" aria-hidden="true">#</a> Markdown Preview Enhanced</h1><h2 id="生成侧边目录的html" tabindex="-1"><a class="header-anchor" href="#生成侧边目录的html" aria-hidden="true">#</a> 生成侧边目录的html</h2><ol><li><p>在文章顶部插入, 注意缩进是四个空格</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>---
html:
    toc: true
---
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>开启<code>Enable Script Execution</code> preferences(首选项) -&gt; settings(设置) -&gt; 打开Enable Script Execution</p></li><li><p>在Markdown Preview Enhanced预览阶段中输出<code>html</code> export -&gt; HTML -&gt; HTML</p></li></ol><h2 id="设置html样式" tabindex="-1"><a class="header-anchor" href="#设置html样式" aria-hidden="true">#</a> 设置html样式</h2>`,4),u={href:"https://www.cnblogs.com/zxyfrank/p/17040967.html",target:"_blank",rel:"noopener noreferrer"},p=n("h2",{id:"codechunk",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#codechunk","aria-hidden":"true"},"#"),e(" codeChunk")],-1),h=n("h3",{id:"概览",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#概览","aria-hidden":"true"},"#"),e(" 概览")],-1),m={href:"https://shd101wyy.github.io/markdown-preview-enhanced/#/zh-cn/code-chunk",target:"_blank",rel:"noopener noreferrer"},v=n("h3",{id:"语法",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#语法","aria-hidden":"true"},"#"),e(" 语法")],-1),k=n("div",{class:"language-lang line-numbers-mode","data-ext":"lang"},[n("pre",{cmd:"lang",opt1:"value1",opt2:"value2","css-module":".",class:"language-lang"},[n("code",null,`
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),b=n("h3",{id:"参数",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#参数","aria-hidden":"true"},"#"),e(" 参数")],-1),g=n("ul",null,[n("li",null,[n("code",null,"cmd"),e(": "),n("code",null,"cmd"),e("将要被运行的命令, 如"),n("code",null,"node"),e(", "),n("code",null,"javascript"),e(", "),n("code",null,"python"),e(", 建议提供.")]),n("li",null,[n("code",null,"output"),e(": "),n("code",null,"html"),e("将会添加输出结果为"),n("code",null,"html"),e("。"),n("code",null,"markdown"),e("将会添加输出结果为"),n("code",null,"markdown"),e("。"),n("code",null,"png"),e("将会添加输出结果到"),n("code",null,"base64"),e("图片。"),n("code",null,"none"),e("将会隐藏输出结果。")]),n("li",null,[n("code",null,"args"),e(": 运行解释器时, 需要传入的参数, 如"),n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{cmd:"true",args:'["-v"]',class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Verbose will be printed first"'),n("span",{class:"token punctuation"},")"),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])])]),n("li",null,[n("code",null,"stdin"),e(": 如果"),n("code",null,"stdin"),e("被设置为"),n("code",null,"true"),e(", 代码将会被传递到"),n("code",null,"stdin"),e("而不是作为文件。")]),n("li",null,[n("code",null,"hide"),e(": "),n("code",null,"hide"),e("将会隐藏代码块但是会显示运行结果，默认为"),n("code",null,"false")]),n("li",null,[n("code",null,"continue"),e(": 如果设置 continue: true，那么这个 code chunk 将会继续运行上一个 code chunk 的内容。 如果设置continue: id，那么这个 code chunk 从拥有这个 id 的 code chunk 运行。")]),n("li",null,[n("code",null,"id"),e(": Code chunk 的 id。这个选项可以配合 continue 选项使用。")]),n("li",null,[n("code",null,"class"),e(": 设置代码的样式, 如"),n("code",null,'class="line-numbers"')]),n("li",null,[n("code",null,"element"),e(": 添加html标签")]),n("li",null,[n("code",null,"run_on_save"),e(": 当 markdown 文件被保存时，自动运行 code chunk。默认 false")]),n("li",null,[n("code",null,"modify_source"),e(": 插入 code chunk 的运行结果直接到 markdown 文件。默认 false。")])],-1),_=l(`<h3 id="最佳实践" tabindex="-1"><a class="header-anchor" href="#最佳实践" aria-hidden="true">#</a> 最佳实践</h3><p>🍐在markdown中显示echarts</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>
@import &quot;echarts.min.js&quot;

\`\`\`javascript {cmd=&quot;javascript&quot; element=&quot;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>haha<span class="token punctuation">&#39;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 600px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span>400px<span class="token punctuation">;</span></span><span class="token punctuation">&#39;</span></span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>&quot;}
// 基于准备好的dom，初始化echarts实例
console.log(document.getElementById(&#39;haha&#39;))
var myChart = echarts.init(document.getElementById(&#39;haha&#39;));
// 绘制图表
myChart.setOption({
title: {
    text: &#39;ECharts 入门示例&#39;
},
tooltip: {},
xAxis: {
    data: [&#39;衬衫&#39;, &#39;羊毛衫&#39;, &#39;雪纺衫&#39;, &#39;裤子&#39;, &#39;高跟鞋&#39;, &#39;袜子&#39;]
},
yAxis: {},
series: [
    {
    name: &#39;销量&#39;,
    type: &#39;bar&#39;,
    data: [5, 20, 36, 10, 10, 20]
    }
]
});
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2><ul><li>https://shd101wyy.github.io/markdown-preview-enhanced/#/</li><li>https://blog.csdn.net/yqahx/article/details/119785262</li></ul>`,5);function x(w,f){const a=i("ExternalLinkIcon");return d(),c("div",null,[r,n("p",null,[n("a",u,[e("参考"),s(a)])]),p,h,n("p",null,[e("用来渲染代码, 需要在设置中打开enableScriptExecution, 参考"),n("a",m,[e("codeChunk"),s(a)])]),v,k,b,g,_])}const q=t(o,[["render",x],["__file","MarkdownPreviewEnhanced.html.vue"]]);export{q as default};
