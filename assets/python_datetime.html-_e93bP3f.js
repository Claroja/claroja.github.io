const e=JSON.parse('{"key":"v-579841fe","path":"/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/%E5%9F%BA%E6%9C%AC%E7%B1%BB%E5%9E%8B/python_datetime.html","title":"datetime","lang":"zh-CN","frontmatter":{"description":"datetime timezone: 时区 aware time: 有时区时间 naive time: 无时区时间 总结 时间戳,datetime,字符串三者的转换关系 graph LR; 时间戳 --&gt;|fromtimestamp类方法| datetime --&gt;|strftime实例方法或isoformat实例方法| 字符串; 字符串 --&gt;|strptime类方法或fromisoformat类方法| datetime --&gt;|timestamp实例方法| 时间戳; date对象,time对象, datetime对象都是datetime模块的一部分, 一般使用datetime对象的date()和time()方法获得两个对象, 而不是直接使用 graph LR; datetime模块 --&gt; datetime对象 &amp; timedelta对象; datetime对象 --&gt; date对象 &amp; time对象","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/%E5%9F%BA%E6%9C%AC%E7%B1%BB%E5%9E%8B/python_datetime.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"datetime"}],["meta",{"property":"og:description","content":"datetime timezone: 时区 aware time: 有时区时间 naive time: 无时区时间 总结 时间戳,datetime,字符串三者的转换关系 graph LR; 时间戳 --&gt;|fromtimestamp类方法| datetime --&gt;|strftime实例方法或isoformat实例方法| 字符串; 字符串 --&gt;|strptime类方法或fromisoformat类方法| datetime --&gt;|timestamp实例方法| 时间戳; date对象,time对象, datetime对象都是datetime模块的一部分, 一般使用datetime对象的date()和time()方法获得两个对象, 而不是直接使用 graph LR; datetime模块 --&gt; datetime对象 &amp; timedelta对象; datetime对象 --&gt; date对象 &amp; time对象"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-25T13:46:58.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2023-11-25T13:46:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"datetime\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-25T13:46:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]},{"level":2,"title":"datetime对象","slug":"datetime对象","link":"#datetime对象","children":[{"level":3,"title":"构造方法","slug":"构造方法","link":"#构造方法","children":[]},{"level":3,"title":"类方法","slug":"类方法","link":"#类方法","children":[]},{"level":3,"title":"实例属性","slug":"实例属性","link":"#实例属性","children":[]},{"level":3,"title":"实例方法","slug":"实例方法","link":"#实例方法","children":[]}]},{"level":2,"title":"iso格式","slug":"iso格式","link":"#iso格式","children":[]},{"level":2,"title":"tz(time zone)","slug":"tz-time-zone","link":"#tz-time-zone","children":[{"level":3,"title":"时区基本理解","slug":"时区基本理解","link":"#时区基本理解","children":[]},{"level":3,"title":"有无时区之间的转换","slug":"有无时区之间的转换","link":"#有无时区之间的转换","children":[]},{"level":3,"title":"获得时间的时区信息","slug":"获得时间的时区信息","link":"#获得时间的时区信息","children":[]},{"level":3,"title":"不同时区之间的转换","slug":"不同时区之间的转换","link":"#不同时区之间的转换","children":[]},{"level":3,"title":"获得所有时区","slug":"获得所有时区","link":"#获得所有时区","children":[]}]},{"level":2,"title":"处理本地时间","slug":"处理本地时间","link":"#处理本地时间","children":[]},{"level":2,"title":"combine","slug":"combine","link":"#combine","children":[]},{"level":2,"title":"字符串与时间的转化","slug":"字符串与时间的转化","link":"#字符串与时间的转化","children":[{"level":3,"title":"其他格式转化成时间","slug":"其他格式转化成时间","link":"#其他格式转化成时间","children":[]},{"level":3,"title":"时间转化为其他格式","slug":"时间转化为其他格式","link":"#时间转化为其他格式","children":[]}]},{"level":2,"title":"应用","slug":"应用","link":"#应用","children":[]}],"git":{"createdTime":1700920018000,"updatedTime":1700920018000,"contributors":[{"name":"claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":7.12,"words":2137},"filePathRelative":"编程语言/python/基本类型/python_datetime.md","localizedDate":"2023年11月25日","excerpt":"<h1> datetime</h1>\\n<p>timezone: 时区\\naware time: 有时区时间\\nnaive time: 无时区时间</p>\\n<h2> 总结</h2>\\n<ol>\\n<li>\\n<p>时间戳,datetime,字符串三者的转换关系</p>\\n<div class=\\"language-mermaid line-numbers-mode\\" data-ext=\\"mermaid\\"><pre class=\\"language-mermaid\\"><code><span class=\\"token keyword\\">graph</span> LR<span class=\\"token punctuation\\">;</span>\\n时间戳 <span class=\\"token arrow operator\\">--&gt;</span><span class=\\"token label property\\">|fromtimestamp类方法|</span> datetime <span class=\\"token arrow operator\\">--&gt;</span><span class=\\"token label property\\">|strftime实例方法或isoformat实例方法|</span> 字符串<span class=\\"token punctuation\\">;</span>\\n字符串 <span class=\\"token arrow operator\\">--&gt;</span><span class=\\"token label property\\">|strptime类方法或fromisoformat类方法|</span> datetime <span class=\\"token arrow operator\\">--&gt;</span><span class=\\"token label property\\">|timestamp实例方法|</span> 时间戳<span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p><code>date</code>对象,<code>time</code>对象, <code>datetime</code>对象都是<code>datetime</code>模块的一部分, 一般使用<code>datetime</code>对象的<code>date()</code>和<code>time()</code>方法获得两个对象, 而不是直接使用</p>\\n<div class=\\"language-mermaid line-numbers-mode\\" data-ext=\\"mermaid\\"><pre class=\\"language-mermaid\\"><code><span class=\\"token keyword\\">graph</span> LR<span class=\\"token punctuation\\">;</span>\\ndatetime模块 <span class=\\"token arrow operator\\">--&gt;</span> datetime对象 &amp; timedelta对象<span class=\\"token punctuation\\">;</span>\\ndatetime对象 <span class=\\"token arrow operator\\">--&gt;</span> date对象 &amp; time对象\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n</ol>","copyright":{"author":"王新宇"},"autoDesc":true}');export{e as data};
