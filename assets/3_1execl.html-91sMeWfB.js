import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as e,c,e as d}from"./app-jdLxCr9I.js";const a={},r=d('<h1 id="基础" tabindex="-1"><a class="header-anchor" href="#基础" aria-hidden="true">#</a> 基础</h1><p>1.<code>exec</code>族函数是产生新进程,替换原有的进程,所以pid不会改变.</p><h1 id="函数" tabindex="-1"><a class="header-anchor" href="#函数" aria-hidden="true">#</a> 函数</h1><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td>int execl(cONst char *path, const char *arg, ...);</td><td></td></tr><tr><td>int execlp(const char *file, const char *arg, ...);</td><td></td></tr><tr><td>int execle(const char *path, const char *arg, ..., char *const envp[]);</td><td></td></tr><tr><td>int execv(const char *path, char *const argv[]);</td><td></td></tr><tr><td>int execvp(const char *file, char *const argv[]);</td><td></td></tr><tr><td>int execve(const char *path, char *const argv[], char *const envp[]);</td><td></td></tr></tbody></table><ol><li>execv开头函数,是参数以<code>char *argv[]</code>形式传递参数;而<code>execl</code>则是讲参数一个一个列出来,然后以<code>NULL</code>表示结束,也可以写程<code>(char *)0</code></li><li>以p结尾的函数<code>execlp</code>和<code>execvp</code>,可以自动读取环境变量中的path,所以不需要输入命令的完整路径</li><li><code>execle</code>和<code>execve</code>使用<code>char *envp[]</code>来改变环境变量</li></ol><p>参考: https://blog.csdn.net/aile770339804/article/details/7443921</p>',6),o=[r];function h(n,i){return e(),c("div",null,o)}const p=t(a,[["render",h],["__file","3_1execl.html.vue"]]);export{p as default};
