const n=JSON.parse(`{"key":"v-e1ca263c","path":"/%E6%95%B0%E5%AD%A6/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/matplotlib/artist%E5%9B%BE%E5%83%8F/hist.html","title":"hist","lang":"zh-CN","frontmatter":{"description":"hist 直方图主要用来查看数据的分布. 例子 import numpy as np import matplotlib.pyplot as plt mu, sigma = 100, 15 data = mu + sigma * np.random.randn(10000) fig = plt.figure(figsize=(6,6)) axs = fig.subplots(2,2) ## 在[0,0]位置绘制频数图 n, bins, patches = axs[0][0].hist(data,bins=10) axs[0][0].set(title=\\"frequency\\") ## 在[0,1]位置绘制频率图, 这里需要指定的是每个数据点的权重, 纵轴表示的是权重的相加 weights = np.ones_like(data )/float(len(data)) n, bins, patches = axs[0][1].hist(data,bins=10,weights=weights) axs[0][1].set(title=\\"relative frequency\\") ## 绘制概率密度函数, 这里y轴是没有实际含义的 ''' y轴的f(x)可以用正态分布的性质反推出来，可以说是没有具体意义的数值, 核心是：我们使用正态分布的时候通常考虑的是在某个区间$(\\\\mu \\\\pm \\\\sigma)$发生的概率, 是积分的面积.所以y轴的值并不像传统的$y=f(x)$因此正态分布的y(x)是可以由其应有的性质反推出来的。 $\\\\mu$确定了正态分布的平分线, 标准差确定了钟型的宽窄, 积分面积为1, 所以y轴的值是为了其他参数而存在的 ''' mu = np.mean(data) sigma = np.std(data) y = norm.pdf(bins, mu, sigma) axs[1][0].plot(bins, y, 'r--') axs[1][0].hist(data,bins=10,density=1) axs[1][0].set(title=\\"probability density function\\") ## 绘制累计密度函数 axs[1][1].hist(data,20,density=1,cumulative=True) axs[1][1].set(title=\\"cumulative distribution function\\") fig.show()","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/%E6%95%B0%E5%AD%A6/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/matplotlib/artist%E5%9B%BE%E5%83%8F/hist.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"hist"}],["meta",{"property":"og:description","content":"hist 直方图主要用来查看数据的分布. 例子 import numpy as np import matplotlib.pyplot as plt mu, sigma = 100, 15 data = mu + sigma * np.random.randn(10000) fig = plt.figure(figsize=(6,6)) axs = fig.subplots(2,2) ## 在[0,0]位置绘制频数图 n, bins, patches = axs[0][0].hist(data,bins=10) axs[0][0].set(title=\\"frequency\\") ## 在[0,1]位置绘制频率图, 这里需要指定的是每个数据点的权重, 纵轴表示的是权重的相加 weights = np.ones_like(data )/float(len(data)) n, bins, patches = axs[0][1].hist(data,bins=10,weights=weights) axs[0][1].set(title=\\"relative frequency\\") ## 绘制概率密度函数, 这里y轴是没有实际含义的 ''' y轴的f(x)可以用正态分布的性质反推出来，可以说是没有具体意义的数值, 核心是：我们使用正态分布的时候通常考虑的是在某个区间$(\\\\mu \\\\pm \\\\sigma)$发生的概率, 是积分的面积.所以y轴的值并不像传统的$y=f(x)$因此正态分布的y(x)是可以由其应有的性质反推出来的。 $\\\\mu$确定了正态分布的平分线, 标准差确定了钟型的宽窄, 积分面积为1, 所以y轴的值是为了其他参数而存在的 ''' mu = np.mean(data) sigma = np.std(data) y = norm.pdf(bins, mu, sigma) axs[1][0].plot(bins, y, 'r--') axs[1][0].hist(data,bins=10,density=1) axs[1][0].set(title=\\"probability density function\\") ## 绘制累计密度函数 axs[1][1].hist(data,20,density=1,cumulative=True) axs[1][1].set(title=\\"cumulative distribution function\\") fig.show()"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-30T12:42:23.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2023-11-30T12:42:23.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"hist\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-30T12:42:23.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[{"level":2,"title":"例子","slug":"例子","link":"#例子","children":[]},{"level":2,"title":"API","slug":"api","link":"#api","children":[{"level":3,"title":"参数","slug":"参数","link":"#参数","children":[]},{"level":3,"title":"返回","slug":"返回","link":"#返回","children":[]}]},{"level":2,"title":"np.histogram","slug":"np-histogram","link":"#np-histogram","children":[{"level":3,"title":"参数","slug":"参数-1","link":"#参数-1","children":[]},{"level":3,"title":"返回","slug":"返回-1","link":"#返回-1","children":[]}]}],"git":{"createdTime":1701348143000,"updatedTime":1701348143000,"contributors":[{"name":"claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":3.72,"words":1116},"filePathRelative":"数学/分析工具/matplotlib/artist图像/hist.md","localizedDate":"2023年11月30日","excerpt":"<h1> hist</h1>\\n<p>直方图主要用来查看数据的分布.</p>\\n<h2> 例子</h2>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">import</span> numpy <span class=\\"token keyword\\">as</span> np\\n<span class=\\"token keyword\\">import</span> matplotlib<span class=\\"token punctuation\\">.</span>pyplot <span class=\\"token keyword\\">as</span> plt\\nmu<span class=\\"token punctuation\\">,</span> sigma <span class=\\"token operator\\">=</span> <span class=\\"token number\\">100</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">15</span>\\ndata <span class=\\"token operator\\">=</span> mu <span class=\\"token operator\\">+</span> sigma <span class=\\"token operator\\">*</span> np<span class=\\"token punctuation\\">.</span>random<span class=\\"token punctuation\\">.</span>randn<span class=\\"token punctuation\\">(</span><span class=\\"token number\\">10000</span><span class=\\"token punctuation\\">)</span>\\nfig <span class=\\"token operator\\">=</span> plt<span class=\\"token punctuation\\">.</span>figure<span class=\\"token punctuation\\">(</span>figsize<span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">6</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">6</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\naxs <span class=\\"token operator\\">=</span> fig<span class=\\"token punctuation\\">.</span>subplots<span class=\\"token punctuation\\">(</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span>\\n\\n\\n<span class=\\"token comment\\">## 在[0,0]位置绘制频数图</span>\\nn<span class=\\"token punctuation\\">,</span> bins<span class=\\"token punctuation\\">,</span> patches <span class=\\"token operator\\">=</span> axs<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">.</span>hist<span class=\\"token punctuation\\">(</span>data<span class=\\"token punctuation\\">,</span>bins<span class=\\"token operator\\">=</span><span class=\\"token number\\">10</span><span class=\\"token punctuation\\">)</span>\\naxs<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">.</span><span class=\\"token builtin\\">set</span><span class=\\"token punctuation\\">(</span>title<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"frequency\\"</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token comment\\">## 在[0,1]位置绘制频率图, 这里需要指定的是每个数据点的权重, 纵轴表示的是权重的相加</span>\\nweights <span class=\\"token operator\\">=</span> np<span class=\\"token punctuation\\">.</span>ones_like<span class=\\"token punctuation\\">(</span>data <span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">/</span><span class=\\"token builtin\\">float</span><span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">len</span><span class=\\"token punctuation\\">(</span>data<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\nn<span class=\\"token punctuation\\">,</span> bins<span class=\\"token punctuation\\">,</span> patches <span class=\\"token operator\\">=</span> axs<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">.</span>hist<span class=\\"token punctuation\\">(</span>data<span class=\\"token punctuation\\">,</span>bins<span class=\\"token operator\\">=</span><span class=\\"token number\\">10</span><span class=\\"token punctuation\\">,</span>weights<span class=\\"token operator\\">=</span>weights<span class=\\"token punctuation\\">)</span>\\naxs<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">.</span><span class=\\"token builtin\\">set</span><span class=\\"token punctuation\\">(</span>title<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"relative frequency\\"</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token comment\\">## 绘制概率密度函数, 这里y轴是没有实际含义的</span>\\n<span class=\\"token triple-quoted-string string\\">'''\\ny轴的f(x)可以用正态分布的性质反推出来，可以说是没有具体意义的数值, 核心是：我们使用正态分布的时候通常考虑的是在某个区间$(\\\\mu \\\\pm \\\\sigma)$发生的概率, 是积分的面积.所以y轴的值并不像传统的$y=f(x)$因此正态分布的y(x)是可以由其应有的性质反推出来的。\\n$\\\\mu$确定了正态分布的平分线, 标准差确定了钟型的宽窄, 积分面积为1, 所以y轴的值是为了其他参数而存在的\\n'''</span>\\nmu <span class=\\"token operator\\">=</span> np<span class=\\"token punctuation\\">.</span>mean<span class=\\"token punctuation\\">(</span>data<span class=\\"token punctuation\\">)</span>\\nsigma <span class=\\"token operator\\">=</span> np<span class=\\"token punctuation\\">.</span>std<span class=\\"token punctuation\\">(</span>data<span class=\\"token punctuation\\">)</span>\\ny <span class=\\"token operator\\">=</span> norm<span class=\\"token punctuation\\">.</span>pdf<span class=\\"token punctuation\\">(</span>bins<span class=\\"token punctuation\\">,</span> mu<span class=\\"token punctuation\\">,</span> sigma<span class=\\"token punctuation\\">)</span>\\naxs<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">.</span>plot<span class=\\"token punctuation\\">(</span>bins<span class=\\"token punctuation\\">,</span> y<span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'r--'</span><span class=\\"token punctuation\\">)</span>\\naxs<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">.</span>hist<span class=\\"token punctuation\\">(</span>data<span class=\\"token punctuation\\">,</span>bins<span class=\\"token operator\\">=</span><span class=\\"token number\\">10</span><span class=\\"token punctuation\\">,</span>density<span class=\\"token operator\\">=</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span>\\naxs<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">.</span><span class=\\"token builtin\\">set</span><span class=\\"token punctuation\\">(</span>title<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"probability density function\\"</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token comment\\">## 绘制累计密度函数</span>\\naxs<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">.</span>hist<span class=\\"token punctuation\\">(</span>data<span class=\\"token punctuation\\">,</span><span class=\\"token number\\">20</span><span class=\\"token punctuation\\">,</span>density<span class=\\"token operator\\">=</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span>cumulative<span class=\\"token operator\\">=</span><span class=\\"token boolean\\">True</span><span class=\\"token punctuation\\">)</span>\\naxs<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">.</span><span class=\\"token builtin\\">set</span><span class=\\"token punctuation\\">(</span>title<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"cumulative distribution function\\"</span><span class=\\"token punctuation\\">)</span>\\n\\n\\n\\n\\nfig<span class=\\"token punctuation\\">.</span>show<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"王新宇"},"autoDesc":true}`);export{n as data};
