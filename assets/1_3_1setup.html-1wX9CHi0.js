const t=JSON.parse(`{"key":"v-71eaf44e","path":"/6%E5%89%8D%E7%AB%AF/3vue/1_3_1setup.html","title":"setup","lang":"zh-CN","frontmatter":{"description":"setup setup的设计是为了使用组合式api. 在vue2中data、computed、methods、watch 组织逻辑在大多数情况下都有效。然而，当我们的组件变得更大时，逻辑关注点的列表也会增长。这可能会导致组件难以阅读和理解. 案例 &lt;template&gt; &lt;p&gt;{{ msg }}&lt;/p&gt; &lt;button @click=\\"test\\"&gt;test&lt;/button&gt; &lt;/template&gt; &lt;script&gt; \\texport default defineComponent{ \\t\\tname: 'App', \\t\\t//此处只是测试一下setup，暂时不考虑响应式的问题。 setup(){ let msg = 'hello world' function test(){ console.log(\\"helo\\") alert(\`\${msg}\`) } return { msg, test, } } \\t} &lt;/script&gt;","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/6%E5%89%8D%E7%AB%AF/3vue/1_3_1setup.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"setup"}],["meta",{"property":"og:description","content":"setup setup的设计是为了使用组合式api. 在vue2中data、computed、methods、watch 组织逻辑在大多数情况下都有效。然而，当我们的组件变得更大时，逻辑关注点的列表也会增长。这可能会导致组件难以阅读和理解. 案例 &lt;template&gt; &lt;p&gt;{{ msg }}&lt;/p&gt; &lt;button @click=\\"test\\"&gt;test&lt;/button&gt; &lt;/template&gt; &lt;script&gt; \\texport default defineComponent{ \\t\\tname: 'App', \\t\\t//此处只是测试一下setup，暂时不考虑响应式的问题。 setup(){ let msg = 'hello world' function test(){ console.log(\\"helo\\") alert(\`\${msg}\`) } return { msg, test, } } \\t} &lt;/script&gt;"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-21T12:59:55.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2025-02-21T12:59:55.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"setup\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-21T12:59:55.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[{"level":2,"title":"案例","slug":"案例","link":"#案例","children":[]},{"level":2,"title":"setup的特征","slug":"setup的特征","link":"#setup的特征","children":[]},{"level":2,"title":"setup的参数:","slug":"setup的参数","link":"#setup的参数","children":[]}],"git":{"createdTime":1740142795000,"updatedTime":1740142795000,"contributors":[{"name":"Claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":1.7,"words":509},"filePathRelative":"6前端/3vue/1_3_1setup.md","localizedDate":"2025年2月21日","excerpt":"<h1> setup</h1>\\n<p>setup的设计是为了使用组合式api. 在vue2中data、computed、methods、watch 组织逻辑在大多数情况下都有效。然而，当我们的组件变得更大时，逻辑关注点的列表也会增长。这可能会导致组件难以阅读和理解.</p>\\n<h2> 案例</h2>\\n<div class=\\"language-html line-numbers-mode\\" data-ext=\\"html\\"><pre class=\\"language-html\\"><code><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>template</span><span class=\\"token punctuation\\">&gt;</span></span>\\n    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>p</span><span class=\\"token punctuation\\">&gt;</span></span>{{ msg }}<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>p</span><span class=\\"token punctuation\\">&gt;</span></span>\\n    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>button</span> <span class=\\"token attr-name\\">@click</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>test<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">&gt;</span></span>test<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>button</span><span class=\\"token punctuation\\">&gt;</span></span>\\n<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>template</span><span class=\\"token punctuation\\">&gt;</span></span>\\n\\n<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>script</span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token script\\"><span class=\\"token language-javascript\\">\\n\\t<span class=\\"token keyword\\">export</span> <span class=\\"token keyword\\">default</span> defineComponent<span class=\\"token punctuation\\">{</span>\\n\\t\\t<span class=\\"token literal-property property\\">name</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">'App'</span><span class=\\"token punctuation\\">,</span>\\n\\t\\t<span class=\\"token comment\\">//此处只是测试一下setup，暂时不考虑响应式的问题。</span>\\n        <span class=\\"token function\\">setup</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">let</span> msg <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'hello world'</span>\\n            <span class=\\"token keyword\\">function</span> <span class=\\"token function\\">test</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n                console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"helo\\"</span><span class=\\"token punctuation\\">)</span>\\n                <span class=\\"token function\\">alert</span><span class=\\"token punctuation\\">(</span><span class=\\"token template-string\\"><span class=\\"token template-punctuation string\\">\`</span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">\${</span>msg<span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token template-punctuation string\\">\`</span></span><span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token punctuation\\">}</span>\\n            <span class=\\"token keyword\\">return</span> <span class=\\"token punctuation\\">{</span>\\n                msg<span class=\\"token punctuation\\">,</span>\\n                test<span class=\\"token punctuation\\">,</span>\\n            <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token punctuation\\">}</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n</span></span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>script</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"王新宇"},"autoDesc":true}`);export{t as data};
