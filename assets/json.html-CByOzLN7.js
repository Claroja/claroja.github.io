import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as e,c as n,e as d}from"./app-O0xqlHfm.js";const a={},r=d(`<h1 id="json" tabindex="-1"><a class="header-anchor" href="#json" aria-hidden="true">#</a> json</h1><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h2><p>Json,全名 JavaScript Object Notation,是一种轻量级的数据交换格式.Json最广泛的应用是作为AJAX中web服务器和客户端的通讯的数据格式,现在也常用于http请求中. 简单理解就是json库可以把python中的字典(dict)解析为字符串(str),又可以把字符(str)编译为(dict).其实自己也可以写个类似的程序.</p><h2 id="模块方法" tabindex="-1"><a class="header-anchor" href="#模块方法" aria-hidden="true">#</a> 模块方法</h2><h3 id="编码-encode-将python对象转换为文件或字符串" tabindex="-1"><a class="header-anchor" href="#编码-encode-将python对象转换为文件或字符串" aria-hidden="true">#</a> 编码(encode),将python对象转换为文件或字符串</h3><p><strong>将对象转换为json字符串</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>json.dumps(obj, skipkeys=False, ensure_ascii=True, check_circular=True, allow_nan=True, cls=None, indent=None, separators=None, default=None, sort_keys=False, **kw)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>将对象转换为json文件</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>json.dump(obj, fp, skipkeys=False, ensure_ascii=True, check_circular=True, allow_nan=True, cls=None, indent=None, separators=None, default=None, sort_keys=False, **kw)
json.dumps(obj, skipkeys=False, ensure_ascii=True, check_circular=True, allow_nan=True, cls=None, indent=None, separators=None, default=None, sort_keys=False, **kw)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>obj</td><td>序列化对象</td></tr><tr><td>fp</td><td>json模块总是产生str对象，而不是bytes对象。因此，fp.write()必须支持str输入。</td></tr><tr><td>ensure_ascii</td><td>为true（默认值），则输出将保证所有传入的非ASCII字符都转义。如果ensure_ascii为false，则这些字符将按原样输出。</td></tr><tr><td>check_circular</td><td>为false（默认值：True），则将跳过容器类型的循环引用检查</td></tr><tr><td>allow_nan</td><td>false（默认值：True），则将是ValueError序列化超出范围float值（nan，inf，-inf），严格遵守JSON规范。如果allow_nan为true，则将使用与其等效的JavaScript代码（NaN，Infinity，-Infinity）</td></tr><tr><td>sort_keys</td><td>为真（默认值：False），则字典的输出将按键排序。</td></tr><tr><td>编码对应:</td><td></td></tr><tr><td>JSON</td><td>Python</td></tr><tr><td>--</td><td>--</td></tr><tr><td>object</td><td>dict</td></tr><tr><td>array</td><td>list</td></tr><tr><td>string</td><td>str</td></tr><tr><td>number (int)</td><td>int</td></tr><tr><td>number (real)</td><td>float</td></tr><tr><td>TRUE</td><td>TRUE</td></tr><tr><td>FALSE</td><td>FALSE</td></tr><tr><td>null</td><td>None</td></tr></tbody></table><h3 id="解码-decode-将文件或字符串转换为python对象" tabindex="-1"><a class="header-anchor" href="#解码-decode-将文件或字符串转换为python对象" aria-hidden="true">#</a> 解码(decode),将文件或字符串转换为python对象</h3><p><strong>将json字符串转换为对象</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>json.loads(s, encoding=None, cls=None, object_hook=None, parse_float=None, parse_int=None, parse_constant=None, object_pairs_hook=None, **kw)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>将json文件转换为对象</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>json.load(fp, cls=None, object_hook=None, parse_float=None, parse_int=None, parse_constant=None, object_pairs_hook=None, **kw)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>解码对应:</p><table><thead><tr><th>Python</th><th>JSON</th></tr></thead><tbody><tr><td>dict</td><td>object</td></tr><tr><td>list, tuple</td><td>array</td></tr><tr><td>str</td><td>string</td></tr><tr><td>int, float, int- &amp; float-derived Enums</td><td>number</td></tr><tr><td>TRUE</td><td>TRUE</td></tr><tr><td>FALSE</td><td>FALSE</td></tr><tr><td>None</td><td>null</td></tr></tbody></table><h2 id="应用" tabindex="-1"><a class="header-anchor" href="#应用" aria-hidden="true">#</a> 应用</h2><p><strong>字符串之间的转换</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>import json
## 字典编译为字符串(dumps)
x=json.dumps({&quot;name&quot;:&quot;wang&quot;,&quot;age&quot;:18})
print(x,type(x))
{&quot;name&quot;: &quot;wang&quot;, &quot;age&quot;: 18} &lt;class &#39;str&#39;&gt;
## 字符串编译为字典(loads)
y=json.loads(&#39;{&quot;name&quot;:&quot;wang&quot;,&quot;age&quot;:18}&#39;)
print(y,type(y))
{&#39;name&#39;: &#39;wang&#39;, &#39;age&#39;: 18} &lt;class &#39;dict&#39;&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>文件之间的转换</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>file = open(&#39;test.json&#39;,&#39;w&#39;,encoding=&#39;utf-8&#39;)  
json.dump({&quot;name&quot;:&quot;wang&quot;,&quot;age&quot;:18},file,ensure_ascii=False)
file.close() 
file = open(&#39;test.json&#39;,&#39;r&#39;,encoding=&#39;utf-8&#39;)


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>参考文献: http://www.cnblogs.com/loleina/p/5623968.html http://python.usyiyi.cn/translate/python_352/library/json.html</p>`,23),s=[r];function o(i,l){return e(),n("div",null,s)}const h=t(a,[["render",o],["__file","json.html.vue"]]);export{h as default};
