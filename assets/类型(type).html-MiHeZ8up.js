const n=JSON.parse('{"key":"v-3e909dd9","path":"/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/typescript/%E7%B1%BB%E5%9E%8B(type).html","title":"类型","lang":"zh-CN","frontmatter":{"description":"类型 类型声明 // 设置单个类型 let 变量: 类型; let 变量: 类型 = 值; function fn(参数: 类型, 参数: 类型): 类型{ } // 也可以设置多个类型 let 变量: 类型1 | 类型2; function fn(): string | number{ } // &amp;表示同时 let j: { name: string } &amp; { age: number };","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/typescript/%E7%B1%BB%E5%9E%8B(type).html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"类型"}],["meta",{"property":"og:description","content":"类型 类型声明 // 设置单个类型 let 变量: 类型; let 变量: 类型 = 值; function fn(参数: 类型, 参数: 类型): 类型{ } // 也可以设置多个类型 let 变量: 类型1 | 类型2; function fn(): string | number{ } // &amp;表示同时 let j: { name: string } &amp; { age: number };"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-01T12:59:38.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2023-12-01T12:59:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"类型\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-12-01T12:59:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[{"level":2,"title":"类型声明","slug":"类型声明","link":"#类型声明","children":[]},{"level":2,"title":"类型种类","slug":"类型种类","link":"#类型种类","children":[]},{"level":2,"title":"number","slug":"number","link":"#number","children":[]},{"level":2,"title":"boolean","slug":"boolean","link":"#boolean","children":[]},{"level":2,"title":"string","slug":"string","link":"#string","children":[]},{"level":2,"title":"字面量","slug":"字面量","link":"#字面量","children":[]},{"level":2,"title":"any","slug":"any","link":"#any","children":[]},{"level":2,"title":"void","slug":"void","link":"#void","children":[]},{"level":2,"title":"never","slug":"never","link":"#never","children":[]},{"level":2,"title":"object（没啥用）","slug":"object-没啥用","link":"#object-没啥用","children":[]},{"level":2,"title":"array","slug":"array","link":"#array","children":[]},{"level":2,"title":"tuple","slug":"tuple","link":"#tuple","children":[]},{"level":2,"title":"enum","slug":"enum","link":"#enum","children":[]},{"level":2,"title":"自定义类型名","slug":"自定义类型名","link":"#自定义类型名","children":[]}],"git":{"createdTime":1701435578000,"updatedTime":1701435578000,"contributors":[{"name":"claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":2.54,"words":761},"filePathRelative":"编程语言/typescript/类型(type).md","localizedDate":"2023年12月1日","excerpt":"<h1> 类型</h1>\\n<h2> 类型声明</h2>\\n<div class=\\"language-typescript line-numbers-mode\\" data-ext=\\"ts\\"><pre class=\\"language-typescript\\"><code><span class=\\"token comment\\">// 设置单个类型</span>\\n<span class=\\"token keyword\\">let</span> 变量<span class=\\"token operator\\">:</span> 类型<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">let</span> 变量<span class=\\"token operator\\">:</span> 类型 <span class=\\"token operator\\">=</span> 值<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function\\">fn</span><span class=\\"token punctuation\\">(</span>参数<span class=\\"token operator\\">:</span> 类型<span class=\\"token punctuation\\">,</span> 参数<span class=\\"token operator\\">:</span> 类型<span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">:</span> 类型<span class=\\"token punctuation\\">{</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\">// 也可以设置多个类型</span>\\n<span class=\\"token keyword\\">let</span> 变量<span class=\\"token operator\\">:</span> 类型<span class=\\"token number\\">1</span> <span class=\\"token operator\\">|</span> 类型<span class=\\"token number\\">2</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function\\">fn</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">string</span> <span class=\\"token operator\\">|</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">{</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n\\n<span class=\\"token comment\\">// &amp;表示同时</span>\\n<span class=\\"token keyword\\">let</span> j<span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span> name<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">string</span> <span class=\\"token punctuation\\">}</span> <span class=\\"token operator\\">&amp;</span> <span class=\\"token punctuation\\">{</span> age<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"王新宇"},"autoDesc":true}');export{n as data};
