import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,d as t}from"./app-j3zK2x6_.js";const e={},c=t(`<h1 id="dict" tabindex="-1"><a class="header-anchor" href="#dict" aria-hidden="true">#</a> <strong>dict</strong></h1><p><code>__dict__</code>用来查看类或对象的成员</p><ol><li><code>类</code>的<code>__dict__</code>保存了普通方法,类方法,静态方法,全局变量,内置方法和属性</li><li><code>对象</code>的<code>__dict__</code>保存了<code>__init__()</code>方法里的属性,既<code>self.xx</code></li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    a <span class="token operator">=</span> <span class="token number">0</span>
    b <span class="token operator">=</span> <span class="token number">3</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token number">2</span>
        self<span class="token punctuation">.</span>c <span class="token operator">=</span> <span class="token number">1</span>

    <span class="token keyword">def</span> <span class="token function">test</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;normal func.&#39;</span><span class="token punctuation">)</span>

    <span class="token decorator annotation punctuation">@staticmethod</span>
    <span class="token keyword">def</span> <span class="token function">static_test</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;static func.&#39;</span><span class="token punctuation">)</span>

    <span class="token decorator annotation punctuation">@classmethod</span>
    <span class="token keyword">def</span> <span class="token function">class_test</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;calss func.&#39;</span><span class="token punctuation">)</span>

obj <span class="token operator">=</span> A<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">print</span> <span class="token punctuation">(</span>A<span class="token punctuation">.</span>__dict__<span class="token punctuation">)</span> <span class="token comment"># {&#39;__module__&#39;: &#39;__main__&#39;, &#39;__doc__&#39;: &#39;\\n    Class A.\\n    &#39;, &#39;a&#39;: 0, &#39;b&#39;: 3, &#39;__init__&#39;: &lt;function A.__init__ at 0x0000022BAC955730&gt;, &#39;test&#39;: &lt;function A.test at 0x0000022BAC9557B8&gt;, &#39;static_test&#39;: &lt;staticmethod object at 0x0000022BAC953C88&gt;, &#39;class_test&#39;: &lt;classmethod object at 0x0000022BAC953CF8&gt;, &#39;__dict__&#39;: &lt;attribute &#39;__dict__&#39; of &#39;A&#39; objects&gt;, &#39;__weakref__&#39;: &lt;attribute &#39;__weakref__&#39; of &#39;A&#39; objects&gt;}</span>

<span class="token keyword">print</span> <span class="token punctuation">(</span>obj<span class="token punctuation">.</span>__dict__<span class="token punctuation">)</span> <span class="token comment"># {&#39;a&#39;: 2, &#39;c&#39;: 1}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="继承中的-dict" tabindex="-1"><a class="header-anchor" href="#继承中的-dict" aria-hidden="true">#</a> 继承中的<code>__dict__</code></h2><p>1)每个类的类变量都放在自己的<code>__dict__</code>,即使被重写 2)每个类实例化的对象的<code>__dict__</code>是相同的</p><h2 id="slots" tabindex="-1"><a class="header-anchor" href="#slots" aria-hidden="true">#</a> <code>__slots__</code></h2><p>当使用了<code>__slots__</code>对属性进行限定后, 将不会有<code>__dict__</code>属性</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Foo</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    __slots__ <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">&#39;bar&#39;</span><span class="token punctuation">,</span><span class="token punctuation">)</span>
    bar <span class="token operator">=</span> <span class="token string">&#39;spam&#39;</span>

Foo<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__dict__
<span class="token comment">#Traceback (most recent call last):</span>
<span class="token comment">##  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;</span>
<span class="token comment">#AttributeError: &#39;Foo&#39; object has no attribute &#39;__dict__&#39;</span>
<span class="token builtin">dir</span><span class="token punctuation">(</span>Foo<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">#[&#39;__class__&#39;, &#39;__delattr__&#39;, &#39;__doc__&#39;, &#39;__format__&#39;, &#39;__getattribute__&#39;, &#39;__hash__&#39;, &#39;__init__&#39;, &#39;__module__&#39;, &#39;__new__&#39;, &#39;__reduce__&#39;, &#39;__reduce_ex__&#39;, &#39;__repr__&#39;, &#39;__setattr__&#39;, &#39;__sizeof__&#39;, &#39;__slots__&#39;, &#39;__str__&#39;, &#39;__subclasshook__&#39;, &#39;bar&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="dir" tabindex="-1"><a class="header-anchor" href="#dir" aria-hidden="true">#</a> <code>__dir__()</code></h2><p>python的实例和类都有<code>__dir__()</code></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Foo</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    bar <span class="token operator">=</span> <span class="token string">&#39;spam&#39;</span>

Foo<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__dict__ <span class="token comment"># {}</span>
Foo<span class="token punctuation">.</span>__dict__<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># [(&#39;__dict__&#39;, &lt;attribute &#39;__dict__&#39; of &#39;Foo&#39; objects&gt;), (&#39;__weakref__&#39;, &lt;attribute &#39;__weakref__&#39; of &#39;Foo&#39; objects&gt;), (&#39;__module__&#39;, &#39;__main__&#39;), (&#39;bar&#39;, &#39;spam&#39;), (&#39;__doc__&#39;, None)]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>__dir__</code>包含了类的<code>__dict__</code>的属性和实例的<code>__dict__</code>, 以及所有祖先类的属性 总结:</p><ul><li><code>__dir__</code>会搜集实例的<code>__dict__</code>(可能不存在), 还会搜集它的类, 它的祖先类, 然后返回所有可用的属性和方法</li><li><code>__dict__</code>只会返回实例的本地的属性和方法(当然类也本质也是一种实例)</li></ul><p>参考: https://www.cnblogs.com/alvin2010/p/9102344.html https://stackoverflow.com/questions/14361256/whats-the-biggest-difference-between-dir-and-dict-in-python</p>`,15),o=[c];function i(p,l){return s(),a("div",null,o)}const u=n(e,[["render",i],["__file","python___dict__.html.vue"]]);export{u as default};
