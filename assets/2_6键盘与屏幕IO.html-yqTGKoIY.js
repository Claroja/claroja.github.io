import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,e as t}from"./app-jdLxCr9I.js";const e={},i=t(`<h1 id="scanf" tabindex="-1"><a class="header-anchor" href="#scanf" aria-hidden="true">#</a> scanf</h1><ol><li>scanf()第一个参数是一个都带有格式的控制串</li><li>.第二个参数是地址(address).</li><li>从键盘输入一切数据(数字、字母，还是空格、回车、Tab)都会放入缓冲区(队列),按回车后读取缓冲区内容</li><li>对 %d 而言，空格、回车、Tab 键都是区分数据与数据的分隔符,如果碰到不会取用,而是跳过知道取到十进制整数”为止.</li><li>%d 遇到字母，那么它不会跳过也不会取用，而是直接从缓冲区跳出,所以下面的程序会打印变量i的未初始化的值</li><li>%c，那么任何数据都会被当作一个字符，不管是数字还是空格、回车、Tab 键它都会取回。</li><li>在读入数字时,scanf()跳过空白字符(空格,换行符和跳格符),但在读入字符时,不会跳过空白字符.</li></ol><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression"><span class="token function">warning</span><span class="token punctuation">(</span>disable<span class="token operator">:</span><span class="token number">4996</span><span class="token punctuation">)</span></span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdlib.h&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token keyword">int</span> i<span class="token punctuation">;</span>
	<span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">&quot;%d&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//&amp;i 表示变量 i 的地址，&amp;是取地址符</span>
	<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;i = %d\\n&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="printf" tabindex="-1"><a class="header-anchor" href="#printf" aria-hidden="true">#</a> printf</h1><p>参考:http://c.biancheng.net/view/159.html</p>`,5),p=[i];function c(o,l){return s(),a("div",null,p)}const d=n(e,[["render",c],["__file","2_6键盘与屏幕IO.html.vue"]]);export{d as default};
