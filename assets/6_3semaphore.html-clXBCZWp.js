import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as e,c as d,e as r}from"./app-A10JnHE0.js";const s={},_=r("<p>互斥锁只能将整个数据对象锁住,所以会导致并发性下降. 就是给生产者消费者中间件加了一个计数工具,有几把锁就对应了有几个产品,生产一个产品,就增加一把锁,消费一个产品就减少一把锁</p><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td>sem_init</td><td></td></tr><tr><td>sem_destroy</td><td></td></tr><tr><td>sem_wait</td><td>信号量大于0，则信号量--,信号量等于0，造成线程阻塞</td></tr><tr><td>sem_trywait</td><td></td></tr><tr><td>sem_timedwait</td><td></td></tr><tr><td>sem_post</td><td>将信号量++，同时唤醒阻塞在信号量上的线程</td></tr></tbody></table><p>参考: https://blog.csdn.net/qq_19923217/article/details/82902442</p>",3),o=[_];function a(c,i){return e(),d("div",null,o)}const h=t(s,[["render",a],["__file","6_3semaphore.html.vue"]]);export{h as default};
