const e=JSON.parse(`{"key":"v-681a3752","path":"/1%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/1%E7%AE%97%E6%B3%95%E5%8E%9F%E7%90%86/2%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%B5%81%E7%A8%8B/2%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B.html","title":"特征工程","lang":"zh-CN","frontmatter":{"description":"特征工程 特征是原始数据的数值表示 2.1标量、向量和空间 单独的数值型特征称为标量，标量的有序列表称为向量，向量位于向量空间中。在绝大多数机器学习应用中，模型的输人通常表示为数值向量。 在数据世界中，抽象的向量和它的特征维度具有实际意义。 如，可以用向量表示某个人对歌曲的偏好，这时每首歌都是一个特征，值为1时表示喜欢这首歌，值为－1时表示不喜欢。 假设向量vvv表示听众Bob的偏好，他喜欢BobDylan的Blowin’in theWind和LadyGaga的PokerFace。 其他听众则会有不同的偏好。 总体来说，所有数据的集合可以在特征空间中形象地表示为一个点云。 反之，一首歌曲也可以通过一组听众的个人偏好表示出来。假设只有两个听众，Alice和Bob。 Alice喜欢Poker Face, Blowin’in the Wind和Leonard Cohen 的Hallelujah，但是讨厌KatyPerry的Roar和Radiohead的Creep。 Bob喜欢Roar, Hallelujah和Blowin'in the Wind，但是讨厌PokerFace和Creep。 每首歌都是听众空间中的一个点。就像可以在特征空间中表示出数据一样，我们也可以在数据空间中表示出特征。","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/1%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/1%E7%AE%97%E6%B3%95%E5%8E%9F%E7%90%86/2%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%B5%81%E7%A8%8B/2%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"特征工程"}],["meta",{"property":"og:description","content":"特征工程 特征是原始数据的数值表示 2.1标量、向量和空间 单独的数值型特征称为标量，标量的有序列表称为向量，向量位于向量空间中。在绝大多数机器学习应用中，模型的输人通常表示为数值向量。 在数据世界中，抽象的向量和它的特征维度具有实际意义。 如，可以用向量表示某个人对歌曲的偏好，这时每首歌都是一个特征，值为1时表示喜欢这首歌，值为－1时表示不喜欢。 假设向量vvv表示听众Bob的偏好，他喜欢BobDylan的Blowin’in theWind和LadyGaga的PokerFace。 其他听众则会有不同的偏好。 总体来说，所有数据的集合可以在特征空间中形象地表示为一个点云。 反之，一首歌曲也可以通过一组听众的个人偏好表示出来。假设只有两个听众，Alice和Bob。 Alice喜欢Poker Face, Blowin’in the Wind和Leonard Cohen 的Hallelujah，但是讨厌KatyPerry的Roar和Radiohead的Creep。 Bob喜欢Roar, Hallelujah和Blowin'in the Wind，但是讨厌PokerFace和Creep。 每首歌都是听众空间中的一个点。就像可以在特征空间中表示出数据一样，我们也可以在数据空间中表示出特征。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://claroja.github.io/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-25T10:13:52.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"特征工程"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2025-02-25T10:13:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"特征工程\\",\\"image\\":[\\"https://claroja.github.io/\\"],\\"dateModified\\":\\"2025-02-25T10:13:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[{"level":2,"title":"2.1标量、向量和空间","slug":"_2-1标量、向量和空间","link":"#_2-1标量、向量和空间","children":[]},{"level":2,"title":"2.2处理计数","slug":"_2-2处理计数","link":"#_2-2处理计数","children":[{"level":3,"title":"2.2.1二值化","slug":"_2-2-1二值化","link":"#_2-2-1二值化","children":[]},{"level":3,"title":"2.2.2区间量化(分箱)","slug":"_2-2-2区间量化-分箱","link":"#_2-2-2区间量化-分箱","children":[]}]},{"level":2,"title":"2.3对数变换","slug":"_2-3对数变换","link":"#_2-3对数变换","children":[{"level":3,"title":"2.3.1对数变换实战","slug":"_2-3-1对数变换实战","link":"#_2-3-1对数变换实战","children":[]},{"level":3,"title":"2.3.2指数变换","slug":"_2-3-2指数变换","link":"#_2-3-2指数变换","children":[]}]},{"level":2,"title":"2.4特征缩放/归一化","slug":"_2-4特征缩放-归一化","link":"#_2-4特征缩放-归一化","children":[{"level":3,"title":"2.4.1min-max缩放","slug":"_2-4-1min-max缩放","link":"#_2-4-1min-max缩放","children":[]},{"level":3,"title":"2.4.2特征标准化/方差缩放","slug":"_2-4-2特征标准化-方差缩放","link":"#_2-4-2特征标准化-方差缩放","children":[]},{"level":3,"title":"2.4.3 归一化","slug":"_2-4-3-归一化","link":"#_2-4-3-归一化","children":[]}]},{"level":2,"title":"2.5交互特征","slug":"_2-5交互特征","link":"#_2-5交互特征","children":[]},{"level":2,"title":"2.6　特征选择","slug":"_2-6-特征选择","link":"#_2-6-特征选择","children":[]},{"level":2,"title":"参考:","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1740478432000,"updatedTime":1740478432000,"contributors":[{"name":"Claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":15.43,"words":4629},"filePathRelative":"1机器学习/1算法原理/2机器学习流程/2特征工程/特征工程/特征工程.md","localizedDate":"2025年2月25日","excerpt":"<h1> 特征工程</h1>\\n<p>特征是原始数据的数值表示</p>\\n<h2> 2.1标量、向量和空间</h2>\\n<p>单独的数值型特征称为标量，标量的有序列表称为向量，向量位于向量空间中。在绝大多数机器学习应用中，模型的输人通常表示为数值向量。</p>\\n<p>在数据世界中，抽象的向量和它的特征维度具有实际意义。</p>\\n<ul>\\n<li>\\n<p>如，可以用向量表示某个人对歌曲的偏好，这时每首歌都是一个特征，值为1时表示喜欢这首歌，值为－1时表示不喜欢。</p>\\n<ul>\\n<li>假设向量<span class=\\"katex\\"><span class=\\"katex-mathml\\"><math xmlns=\\"http://www.w3.org/1998/Math/MathML\\"><semantics><mrow><mi>v</mi></mrow><annotation encoding=\\"application/x-tex\\">v</annotation></semantics></math></span><span class=\\"katex-html\\" aria-hidden=\\"true\\"><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:0.4306em;\\"></span><span class=\\"mord mathnormal\\" style=\\"margin-right:0.03588em;\\">v</span></span></span></span>表示听众Bob的偏好，他喜欢BobDylan的<code>Blowin’in theWind</code>和LadyGaga的<code>PokerFace</code>。</li>\\n<li>其他听众则会有不同的偏好。</li>\\n</ul>\\n<p>总体来说，所有数据的集合可以在特征空间中形象地表示为一个点云。</p>\\n</li>\\n<li>\\n<p>反之，一首歌曲也可以通过一组听众的个人偏好表示出来。假设只有两个听众，Alice和Bob。</p>\\n<ul>\\n<li>Alice喜欢<code>Poker Face</code>, <code>Blowin’in the Wind</code>和Leonard Cohen 的<code>Hallelujah</code>，但是讨厌KatyPerry的<code>Roar</code>和Radiohead的<code>Creep</code>。</li>\\n<li>Bob喜欢<code>Roar</code>, <code>Hallelujah</code>和<code>Blowin'in the Wind</code>，但是讨厌<code>PokerFace</code>和<code>Creep</code>。</li>\\n</ul>\\n<p>每首歌都是听众空间中的一个点。就像可以在特征空间中表示出数据一样，我们也可以在数据空间中表示出特征。</p>\\n</li>\\n</ul>","copyright":{"author":"王新宇"},"autoDesc":true}`);export{e as data};
