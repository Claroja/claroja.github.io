const n=JSON.parse(`{"key":"v-f190da8a","path":"/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/7%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/init.html","title":"init","lang":"zh-CN","frontmatter":{"description":"init __init__(self,*args)方法用来初始化实例属性. self表示实例本身 *args是具体要初始化的参数. 在__init__()方法中的属性, 都是实例属性, 而在外面的属性是类属性. 类属性可以通过__class__来访问 class Person: name = \\"li\\" def __init__(self, name): self.name = name wang = Person(name=\\"wang\\") print(wang.name) # wang, 实例属性覆盖了类属性 print(wang.__class__) # &lt;class '__main__.Person'&gt;, 获得类 print(wang.__class__.name) # li, 获得类属性 print(Person.name) # li, 获得类属性","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/7%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/init.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"init"}],["meta",{"property":"og:description","content":"init __init__(self,*args)方法用来初始化实例属性. self表示实例本身 *args是具体要初始化的参数. 在__init__()方法中的属性, 都是实例属性, 而在外面的属性是类属性. 类属性可以通过__class__来访问 class Person: name = \\"li\\" def __init__(self, name): self.name = name wang = Person(name=\\"wang\\") print(wang.name) # wang, 实例属性覆盖了类属性 print(wang.__class__) # &lt;class '__main__.Person'&gt;, 获得类 print(wang.__class__.name) # li, 获得类属性 print(Person.name) # li, 获得类属性"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-01T12:59:38.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2023-12-01T12:59:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"init\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-12-01T12:59:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[],"git":{"createdTime":1701435578000,"updatedTime":1701435578000,"contributors":[{"name":"claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":0.41,"words":123},"filePathRelative":"编程语言/python/7面向对象/生命周期/init.md","localizedDate":"2023年12月1日","excerpt":"<h1> init</h1>\\n<p><code>__init__(self,*args)</code>方法用来初始化实例属性.\\n<code>self</code>表示实例本身\\n<code>*args</code>是具体要初始化的参数.</p>\\n<p>在<code>__init__()</code>方法中的属性, 都是实例属性, 而在外面的属性是类属性. 类属性可以通过<code>__class__</code>来访问</p>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Person</span><span class=\\"token punctuation\\">:</span>\\n    name <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"li\\"</span>\\n\\n    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">__init__</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">,</span> name<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n        self<span class=\\"token punctuation\\">.</span>name <span class=\\"token operator\\">=</span> name\\n\\n\\nwang <span class=\\"token operator\\">=</span> Person<span class=\\"token punctuation\\">(</span>name<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"wang\\"</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span>wang<span class=\\"token punctuation\\">.</span>name<span class=\\"token punctuation\\">)</span>  <span class=\\"token comment\\"># wang, 实例属性覆盖了类属性</span>\\n<span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span>wang<span class=\\"token punctuation\\">.</span>__class__<span class=\\"token punctuation\\">)</span>  <span class=\\"token comment\\"># &lt;class '__main__.Person'&gt;, 获得类</span>\\n<span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span>wang<span class=\\"token punctuation\\">.</span>__class__<span class=\\"token punctuation\\">.</span>name<span class=\\"token punctuation\\">)</span>  <span class=\\"token comment\\"># li, 获得类属性</span>\\n<span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span>Person<span class=\\"token punctuation\\">.</span>name<span class=\\"token punctuation\\">)</span>  <span class=\\"token comment\\"># li, 获得类属性</span>\\n\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"王新宇"},"autoDesc":true}`);export{n as data};
