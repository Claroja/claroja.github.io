const n=JSON.parse('{"key":"v-550c8b6a","path":"/2%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/2c/7IO/3_3UDP.html","title":"server","lang":"zh-CN","frontmatter":{"description":"server string.h&gt; #include &lt;arpa/inet.h&gt; int main(void) { // 创建套接字 int fd = socket(AF_INET, SOCK_DGRAM, 0); // 绑定IP和端口 struct sockaddr_in serv; memset(&amp;serv, 0, sizeof(serv)); serv.sin_family = AF_INET; serv.sin_port = htons(9999); serv.sin_addr.s_addr = htonl(INADDR_ANY); int ret = bind(fd, (struct sockaddr*)&amp;serv, sizeof(serv)); struct sockaddr_in client; socklen_t cli_len = sizeof(client); // 通信 char buf[1024] = {0}; while(1) { int recvlen = recvfrom(fd, buf, sizeof(buf), 0, (struct sockaddr*)&amp;client, &amp;cli_len); //接收客户端数据 printf(\\"buf: %s\\\\n\\", buf); sendto(fd, buf, strlen(buf)+1, 0, (struct sockaddr*)&amp;client, sizeof(client));//发送数据 } close(fd); return 0; }","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/2%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/2c/7IO/3_3UDP.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"server"}],["meta",{"property":"og:description","content":"server string.h&gt; #include &lt;arpa/inet.h&gt; int main(void) { // 创建套接字 int fd = socket(AF_INET, SOCK_DGRAM, 0); // 绑定IP和端口 struct sockaddr_in serv; memset(&amp;serv, 0, sizeof(serv)); serv.sin_family = AF_INET; serv.sin_port = htons(9999); serv.sin_addr.s_addr = htonl(INADDR_ANY); int ret = bind(fd, (struct sockaddr*)&amp;serv, sizeof(serv)); struct sockaddr_in client; socklen_t cli_len = sizeof(client); // 通信 char buf[1024] = {0}; while(1) { int recvlen = recvfrom(fd, buf, sizeof(buf), 0, (struct sockaddr*)&amp;client, &amp;cli_len); //接收客户端数据 printf(\\"buf: %s\\\\n\\", buf); sendto(fd, buf, strlen(buf)+1, 0, (struct sockaddr*)&amp;client, sizeof(client));//发送数据 } close(fd); return 0; }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-21T14:08:45.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2025-02-21T14:08:45.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"server\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-21T14:08:45.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[],"git":{"createdTime":1740146925000,"updatedTime":1740146925000,"contributors":[{"name":"Claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":0.7,"words":210},"filePathRelative":"2编程语言/2c/7IO/3_3UDP.md","localizedDate":"2025年2月21日","excerpt":"<h1> server</h1>\\n<div class=\\"language-c line-numbers-mode\\" data-ext=\\"c\\"><pre class=\\"language-c\\"><code>string<span class=\\"token punctuation\\">.</span>h<span class=\\"token operator\\">&gt;</span>\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;arpa/inet.h&gt;</span></span>\\n<span class=\\"token keyword\\">int</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">void</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// 创建套接字</span>\\n    <span class=\\"token keyword\\">int</span> fd <span class=\\"token operator\\">=</span> <span class=\\"token function\\">socket</span><span class=\\"token punctuation\\">(</span>AF_INET<span class=\\"token punctuation\\">,</span> SOCK_DGRAM<span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token comment\\">// 绑定IP和端口</span>\\n    <span class=\\"token keyword\\">struct</span> <span class=\\"token class-name\\">sockaddr_in</span> serv<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token function\\">memset</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">&amp;</span>serv<span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">sizeof</span><span class=\\"token punctuation\\">(</span>serv<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    serv<span class=\\"token punctuation\\">.</span>sin_family <span class=\\"token operator\\">=</span> AF_INET<span class=\\"token punctuation\\">;</span>\\n    serv<span class=\\"token punctuation\\">.</span>sin_port <span class=\\"token operator\\">=</span> <span class=\\"token function\\">htons</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">9999</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    serv<span class=\\"token punctuation\\">.</span>sin_addr<span class=\\"token punctuation\\">.</span>s_addr <span class=\\"token operator\\">=</span> <span class=\\"token function\\">htonl</span><span class=\\"token punctuation\\">(</span>INADDR_ANY<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">int</span> ret <span class=\\"token operator\\">=</span> <span class=\\"token function\\">bind</span><span class=\\"token punctuation\\">(</span>fd<span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">struct</span> <span class=\\"token class-name\\">sockaddr</span><span class=\\"token operator\\">*</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">&amp;</span>serv<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">sizeof</span><span class=\\"token punctuation\\">(</span>serv<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token keyword\\">struct</span> <span class=\\"token class-name\\">sockaddr_in</span> client<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token class-name\\">socklen_t</span> cli_len <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">sizeof</span><span class=\\"token punctuation\\">(</span>client<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token comment\\">// 通信</span>\\n    <span class=\\"token keyword\\">char</span> buf<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1024</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">while</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">int</span> recvlen <span class=\\"token operator\\">=</span> <span class=\\"token function\\">recvfrom</span><span class=\\"token punctuation\\">(</span>fd<span class=\\"token punctuation\\">,</span> buf<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">sizeof</span><span class=\\"token punctuation\\">(</span>buf<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">struct</span> <span class=\\"token class-name\\">sockaddr</span><span class=\\"token operator\\">*</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">&amp;</span>client<span class=\\"token punctuation\\">,</span> <span class=\\"token operator\\">&amp;</span>cli_len<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">//接收客户端数据</span>\\n        <span class=\\"token function\\">printf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"buf: %s\\\\n\\"</span><span class=\\"token punctuation\\">,</span> buf<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token function\\">sendto</span><span class=\\"token punctuation\\">(</span>fd<span class=\\"token punctuation\\">,</span> buf<span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">strlen</span><span class=\\"token punctuation\\">(</span>buf<span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">+</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">struct</span> <span class=\\"token class-name\\">sockaddr</span><span class=\\"token operator\\">*</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">&amp;</span>client<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">sizeof</span><span class=\\"token punctuation\\">(</span>client<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//发送数据</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token function\\">close</span><span class=\\"token punctuation\\">(</span>fd<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"王新宇"},"autoDesc":true}');export{n as data};
