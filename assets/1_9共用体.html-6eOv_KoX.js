const n=JSON.parse('{"key":"v-99e941e4","path":"/4%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/2c%E8%AF%AD%E8%A8%80/1%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/1_9%E5%85%B1%E7%94%A8%E4%BD%93.html","title":"","lang":"zh-CN","frontmatter":{"description":"几个不同各类型的变量共占一段内存，他们是重叠的关系 共用体和结构体一样都是值传递,在作为函数参数的时候最好用指针,不然形参申请内存很浪费空间 # include &lt;stdio.h&gt;//引用函数库 # include &lt;stdlib.h&gt; union info{ \\tchar name[9]; \\tdouble age; }; void main(){ \\t//共用体大小必须大于最大成员类型，且一定是最小类型的整数倍 \\tprintf(\\"%d\\\\n\\",sizeof(union info)); \\tunion info student;//大括号只能初始化第一个变量 \\tstudent.age=1.1; \\tsprintf(student.name,\\"li\\");//共用体只保存最后一个赋值的成员 \\tprintf(\\"%s\\\\n%d\\",student.name,student.age); }","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/4%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/2c%E8%AF%AD%E8%A8%80/1%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/1_9%E5%85%B1%E7%94%A8%E4%BD%93.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:description","content":"几个不同各类型的变量共占一段内存，他们是重叠的关系 共用体和结构体一样都是值传递,在作为函数参数的时候最好用指针,不然形参申请内存很浪费空间 # include &lt;stdio.h&gt;//引用函数库 # include &lt;stdlib.h&gt; union info{ \\tchar name[9]; \\tdouble age; }; void main(){ \\t//共用体大小必须大于最大成员类型，且一定是最小类型的整数倍 \\tprintf(\\"%d\\\\n\\",sizeof(union info)); \\tunion info student;//大括号只能初始化第一个变量 \\tstudent.age=1.1; \\tsprintf(student.name,\\"li\\");//共用体只保存最后一个赋值的成员 \\tprintf(\\"%s\\\\n%d\\",student.name,student.age); }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-24T12:46:58.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2025-02-24T12:46:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-24T12:46:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[],"git":{"createdTime":1740401218000,"updatedTime":1740401218000,"contributors":[{"name":"Claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":0.55,"words":166},"filePathRelative":"4编程语言/2c语言/1基础数据类型/1_9共用体.md","localizedDate":"2025年2月24日","excerpt":"<ol>\\n<li>几个不同各类型的变量共占一段内存，他们是重叠的关系</li>\\n<li>共用体和结构体一样都是值传递,在作为函数参数的时候最好用指针,不然形参申请内存很浪费空间</li>\\n</ol>\\n<div class=\\"language-c line-numbers-mode\\" data-ext=\\"c\\"><pre class=\\"language-c\\"><code><span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span> <span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;stdio.h&gt;</span><span class=\\"token comment\\">//引用函数库</span></span>\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span> <span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;stdlib.h&gt;</span></span>\\n<span class=\\"token keyword\\">union</span> info<span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token keyword\\">char</span> name<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">9</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token keyword\\">double</span> age<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">void</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token comment\\">//共用体大小必须大于最大成员类型，且一定是最小类型的整数倍</span>\\n\\t<span class=\\"token function\\">printf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"%d\\\\n\\"</span><span class=\\"token punctuation\\">,</span><span class=\\"token keyword\\">sizeof</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">union</span> info<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token keyword\\">union</span> info student<span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//大括号只能初始化第一个变量</span>\\n\\tstudent<span class=\\"token punctuation\\">.</span>age<span class=\\"token operator\\">=</span><span class=\\"token number\\">1.1</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token function\\">sprintf</span><span class=\\"token punctuation\\">(</span>student<span class=\\"token punctuation\\">.</span>name<span class=\\"token punctuation\\">,</span><span class=\\"token string\\">\\"li\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//共用体只保存最后一个赋值的成员</span>\\n\\t<span class=\\"token function\\">printf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"%s\\\\n%d\\"</span><span class=\\"token punctuation\\">,</span>student<span class=\\"token punctuation\\">.</span>name<span class=\\"token punctuation\\">,</span>student<span class=\\"token punctuation\\">.</span>age<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"王新宇"},"autoDesc":true}');export{n as data};
