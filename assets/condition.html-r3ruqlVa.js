const t=JSON.parse('{"key":"v-0b500891","path":"/4%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/3python/12%E9%94%81/condition.html","title":"condition","lang":"zh-CN","frontmatter":{"description":"condition Condition Objects condition variable也是一种Lock. wait()方法释放锁, 然后block自己, 直到另外一个thread使用notify()来唤醒. 唤醒后和普通线程一样, 继续竞争锁. 构造方法 class threading.Condition(lock=None)是一个factory function, lock参数可以传入Lock对象或者RLock对象, 作为底层的锁对象.","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/4%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/3python/12%E9%94%81/condition.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"condition"}],["meta",{"property":"og:description","content":"condition Condition Objects condition variable也是一种Lock. wait()方法释放锁, 然后block自己, 直到另外一个thread使用notify()来唤醒. 唤醒后和普通线程一样, 继续竞争锁. 构造方法 class threading.Condition(lock=None)是一个factory function, lock参数可以传入Lock对象或者RLock对象, 作为底层的锁对象."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-24T12:46:58.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2025-02-24T12:46:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"condition\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-24T12:46:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[{"level":2,"title":"Condition Objects","slug":"condition-objects","link":"#condition-objects","children":[{"level":3,"title":"构造方法","slug":"构造方法","link":"#构造方法","children":[]},{"level":3,"title":"对象方法","slug":"对象方法","link":"#对象方法","children":[]}]}],"git":{"createdTime":1740401218000,"updatedTime":1740401218000,"contributors":[{"name":"Claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":0.68,"words":205},"filePathRelative":"4编程语言/3python/12锁/condition.md","localizedDate":"2025年2月24日","excerpt":"<h1> condition</h1>\\n<h2> Condition Objects</h2>\\n<p>condition variable也是一种Lock.\\n<code>wait()</code>方法释放锁, 然后block自己, 直到另外一个thread使用<code>notify()</code>来唤醒. 唤醒后和普通线程一样, 继续竞争锁.</p>\\n<h3> 构造方法</h3>\\n<p><code>class threading.Condition(lock=None)</code>是一个factory function, lock参数可以传入Lock对象或者RLock对象, 作为底层的锁对象.</p>","copyright":{"author":"王新宇"},"autoDesc":true}');export{t as data};
