const n=JSON.parse(`{"key":"v-5db415ba","path":"/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/%E5%A4%9A%E8%BF%9B%E7%A8%8B/python_process_event.html","title":"process_event","lang":"zh-CN","frontmatter":{"description":"process_event from multiprocessing import Process, Event import time def worker(name, event): while not event.is_set(): print('Process_%s is ready' % name) event.wait(1) print('Process_%s is running' % name) if __name__ == '__main__': event = Event() for i in range(0, 2): Process(target=worker, args=(i, event)).start() time.sleep(3) event.set()","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/%E5%A4%9A%E8%BF%9B%E7%A8%8B/python_process_event.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"process_event"}],["meta",{"property":"og:description","content":"process_event from multiprocessing import Process, Event import time def worker(name, event): while not event.is_set(): print('Process_%s is ready' % name) event.wait(1) print('Process_%s is running' % name) if __name__ == '__main__': event = Event() for i in range(0, 2): Process(target=worker, args=(i, event)).start() time.sleep(3) event.set()"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-25T13:46:58.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2023-11-25T13:46:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"process_event\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-25T13:46:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[],"git":{"createdTime":1700920018000,"updatedTime":1700920018000,"contributors":[{"name":"claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":0.17,"words":51},"filePathRelative":"编程语言/python/多进程/python_process_event.md","localizedDate":"2023年11月25日","excerpt":"<h1> process_event</h1>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">from</span> multiprocessing <span class=\\"token keyword\\">import</span> Process<span class=\\"token punctuation\\">,</span> Event\\n<span class=\\"token keyword\\">import</span> time\\n\\n<span class=\\"token keyword\\">def</span> <span class=\\"token function\\">worker</span><span class=\\"token punctuation\\">(</span>name<span class=\\"token punctuation\\">,</span> event<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token keyword\\">while</span> <span class=\\"token keyword\\">not</span> event<span class=\\"token punctuation\\">.</span>is_set<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'Process_%s is ready'</span> <span class=\\"token operator\\">%</span> name<span class=\\"token punctuation\\">)</span>\\n        event<span class=\\"token punctuation\\">.</span>wait<span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'Process_%s is running'</span> <span class=\\"token operator\\">%</span> name<span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token keyword\\">if</span> __name__ <span class=\\"token operator\\">==</span> <span class=\\"token string\\">'__main__'</span><span class=\\"token punctuation\\">:</span>\\n    event <span class=\\"token operator\\">=</span> Event<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">for</span> i <span class=\\"token keyword\\">in</span> <span class=\\"token builtin\\">range</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n        Process<span class=\\"token punctuation\\">(</span>target<span class=\\"token operator\\">=</span>worker<span class=\\"token punctuation\\">,</span> args<span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">(</span>i<span class=\\"token punctuation\\">,</span> event<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span>start<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n    time<span class=\\"token punctuation\\">.</span>sleep<span class=\\"token punctuation\\">(</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">)</span>\\n    event<span class=\\"token punctuation\\">.</span><span class=\\"token builtin\\">set</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"王新宇"},"autoDesc":true}`);export{n as data};
