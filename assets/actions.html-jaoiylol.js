const n=JSON.parse('{"key":"v-4b846ba4","path":"/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/git/github/actions.html","title":"actions","lang":"zh-CN","frontmatter":{"description":"actions github_actions 在上传github时, 自动触发工作流(workflow). 比如vuepress提交源码时, 在github服务器上自动触发编译, 生成githubpages. 配置文件下载git项目的.github/workflows/deploy-docs.yml中. 关键字段解释 name: workflow 的名称。如果省略该字段，默认为当前 workflow 的文件名, 如name: GitHub Actions Test on: 定触发 workflow 的条件, 可以是单个事件, 如on: push, 也可以是多个on: [push, pull_request]. 另外还可以指定事件具体内容, 如指定push的branch on: push: branches: - master jobs: 文件的主体, 任务的具体内容 job_id, 每个job_id对应一个工作流. name是别名 jobs: my_first_job: name: My first job my_second_job: name: My second job needs, 定当前任务的依赖关系，即运行顺序。 jobs: job1: job2: needs: job1 job3: needs: [job1, job2] runs-on, 指定运行所需要的虚拟机环境, 在github服务器上, 非本地, 如runs-on: ubuntu-18.04 steps, 指定每个 Job 的运行步骤, 每个步骤都可以指定: name：步骤名称。 run：该步骤运行的action, 就是命令 env：该步骤所需的环境变量 uses: 使用现有的actions with: uses所需的参数","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/git/github/actions.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"actions"}],["meta",{"property":"og:description","content":"actions github_actions 在上传github时, 自动触发工作流(workflow). 比如vuepress提交源码时, 在github服务器上自动触发编译, 生成githubpages. 配置文件下载git项目的.github/workflows/deploy-docs.yml中. 关键字段解释 name: workflow 的名称。如果省略该字段，默认为当前 workflow 的文件名, 如name: GitHub Actions Test on: 定触发 workflow 的条件, 可以是单个事件, 如on: push, 也可以是多个on: [push, pull_request]. 另外还可以指定事件具体内容, 如指定push的branch on: push: branches: - master jobs: 文件的主体, 任务的具体内容 job_id, 每个job_id对应一个工作流. name是别名 jobs: my_first_job: name: My first job my_second_job: name: My second job needs, 定当前任务的依赖关系，即运行顺序。 jobs: job1: job2: needs: job1 job3: needs: [job1, job2] runs-on, 指定运行所需要的虚拟机环境, 在github服务器上, 非本地, 如runs-on: ubuntu-18.04 steps, 指定每个 Job 的运行步骤, 每个步骤都可以指定: name：步骤名称。 run：该步骤运行的action, 就是命令 env：该步骤所需的环境变量 uses: 使用现有的actions with: uses所需的参数"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-27T13:17:01.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2023-11-27T13:17:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"actions\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-27T13:17:01.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[{"level":2,"title":"关键字段解释","slug":"关键字段解释","link":"#关键字段解释","children":[]},{"level":2,"title":"实践","slug":"实践","link":"#实践","children":[]}],"git":{"createdTime":1701091021000,"updatedTime":1701091021000,"contributors":[{"name":"claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":1.66,"words":498},"filePathRelative":"编程基础/git/github/actions.md","localizedDate":"2023年11月27日","excerpt":"<h1> actions</h1>\\n<h1> github_actions</h1>\\n<p>在上传github时, 自动触发工作流(workflow). 比如vuepress提交源码时, 在github服务器上自动触发编译, 生成githubpages. 配置文件下载git项目的<code>.github/workflows/deploy-docs.yml</code>中.</p>\\n<h2> 关键字段解释</h2>\\n<ul>\\n<li>\\n<p><code>name</code>: workflow 的名称。如果省略该字段，默认为当前 workflow 的文件名, 如<code>name: GitHub Actions Test</code></p>\\n</li>\\n<li>\\n<p><code>on</code>: 定触发 workflow 的条件, 可以是单个事件, 如<code>on: push</code>, 也可以是多个<code>on: [push, pull_request]</code>. 另外还可以指定事件具体内容, 如指定<code>push</code>的<code>branch</code></p>\\n<div class=\\"language-yaml line-numbers-mode\\" data-ext=\\"yml\\"><pre class=\\"language-yaml\\"><code><span class=\\"token key atrule\\">on</span><span class=\\"token punctuation\\">:</span>\\n<span class=\\"token key atrule\\">push</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token key atrule\\">branches</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token punctuation\\">-</span> master\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p><code>jobs</code>: 文件的主体, 任务的具体内容</p>\\n<ul>\\n<li>\\n<p><code>job_id</code>, 每个<code>job_id</code>对应一个工作流. <code>name</code>是别名</p>\\n<div class=\\"language-yaml line-numbers-mode\\" data-ext=\\"yml\\"><pre class=\\"language-yaml\\"><code><span class=\\"token key atrule\\">jobs</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token key atrule\\">my_first_job</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token key atrule\\">name</span><span class=\\"token punctuation\\">:</span> My first job\\n    <span class=\\"token key atrule\\">my_second_job</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token key atrule\\">name</span><span class=\\"token punctuation\\">:</span> My second job\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p><code>needs</code>, 定当前任务的依赖关系，即运行顺序。</p>\\n<div class=\\"language-yaml line-numbers-mode\\" data-ext=\\"yml\\"><pre class=\\"language-yaml\\"><code>\\n<span class=\\"token key atrule\\">jobs</span><span class=\\"token punctuation\\">:</span>\\n<span class=\\"token key atrule\\">job1</span><span class=\\"token punctuation\\">:</span>\\n<span class=\\"token key atrule\\">job2</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token key atrule\\">needs</span><span class=\\"token punctuation\\">:</span> job1\\n<span class=\\"token key atrule\\">job3</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token key atrule\\">needs</span><span class=\\"token punctuation\\">:</span> <span class=\\"token punctuation\\">[</span>job1<span class=\\"token punctuation\\">,</span> job2<span class=\\"token punctuation\\">]</span>\\n\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p><code>runs-on</code>, 指定运行所需要的虚拟机环境, 在github服务器上, 非本地, 如<code>runs-on: ubuntu-18.04</code></p>\\n</li>\\n<li>\\n<p><code>steps</code>, 指定每个 Job 的运行步骤, 每个步骤都可以指定:</p>\\n<ul>\\n<li><code>name</code>：步骤名称。</li>\\n<li><code>run</code>：该步骤运行的<code>action</code>, 就是命令</li>\\n<li><code>env</code>：该步骤所需的环境变量</li>\\n<li><code>uses</code>: 使用现有的<code>actions</code></li>\\n<li><code>with</code>: <code>uses</code>所需的参数</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n</ul>","copyright":{"author":"王新宇"},"autoDesc":true}');export{n as data};
