import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as a,c as s,a as e}from"./app-9tftCahk.js";const o={},t=e(`<h1 id="属性-attribute" tabindex="-1"><a class="header-anchor" href="#属性-attribute" aria-hidden="true">#</a> 属性(attribute)</h1><h2 id="attr" tabindex="-1"><a class="header-anchor" href="#attr" aria-hidden="true">#</a> attr()</h2><h3 id="设置属性" tabindex="-1"><a class="header-anchor" href="#设置属性" aria-hidden="true">#</a> 设置属性</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>rect<span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">fill</span><span class="token template-punctuation string">\`</span></span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token comment">// 删除属性</span>
  <span class="token string-property property">&#39;fill-opacity&#39;</span><span class="token operator">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span> 
  <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">stroke</span><span class="token template-punctuation string">\`</span></span><span class="token operator">:</span> <span class="token string">&#39;#000&#39;</span><span class="token punctuation">,</span> 
  <span class="token string-property property">&#39;stroke-width&#39;</span><span class="token operator">:</span> <span class="token number">10</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查询属性" tabindex="-1"><a class="header-anchor" href="#查询属性" aria-hidden="true">#</a> 查询属性</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>var x <span class="token operator">=</span> rect<span class="token punctuation">.</span>attr<span class="token punctuation">(</span><span class="token string">&#39;x&#39;</span><span class="token punctuation">)</span>
var attributes <span class="token operator">=</span> rect<span class="token punctuation">.</span>attr<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;x&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;y&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="位置-position" tabindex="-1"><a class="header-anchor" href="#位置-position" aria-hidden="true">#</a> 位置(position)</h2><ol><li><p><code>move()</code>: 绝对位置移动, <code>rect.move(200, 350)</code></p><p><code>x(), y()</code></p><ol><li>设置x坐标, <code>rect.x(200)</code></li><li>获得x坐标, <code>var x = rect.x()</code></li></ol></li><li><p><code>dmove()</code>: 相对位置移动, <code>rect.dmove(10, 30)</code></p><p><code>dx(), dy()</code></p><ol><li>设置dx坐标, <code>rect.dx(200)</code></li></ol></li><li><p><code>center()</code>: 通过中心移动</p><p><code>cx(), cy()</code></p><ol><li>设置cx坐标, <code>rect.cx(200)</code></li><li>获得cx坐标, <code>var cx = rect.cx()</code></li></ol></li></ol><h2 id="缩放-resizing" tabindex="-1"><a class="header-anchor" href="#缩放-resizing" aria-hidden="true">#</a> 缩放(Resizing)</h2><ol><li><p><code>rect.size(200, 300)</code></p><p><code>width(), height()</code></p><ol><li>设置宽度: <code>rect.width(200)</code></li><li>获得宽度: <code>var width = rect.width()</code></li></ol></li><li><p><code>radius()</code>, 设置圆角</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>circle<span class="token punctuation">.</span><span class="token function">radius</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
ellipse<span class="token punctuation">.</span><span class="token function">radius</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span>
rect<span class="token punctuation">.</span><span class="token function">radius</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="fill-stroke-opacity" tabindex="-1"><a class="header-anchor" href="#fill-stroke-opacity" aria-hidden="true">#</a> fill, stroke, opacity</h2><ol><li><code>rect.fill({ color: &#39;#f06&#39;, opacity: 0.6 })</code></li><li><code>rect.stroke({ color: &#39;#f06&#39;, opacity: 0.6, width: 5 })</code></li><li><code>rect.opacity(0.5)</code></li></ol><h2 id="transforming" tabindex="-1"><a class="header-anchor" href="#transforming" aria-hidden="true">#</a> Transforming</h2><ol><li><p>设置transform</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>element<span class="token punctuation">.</span><span class="token function">transform</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
<span class="token literal-property property">rotate</span><span class="token operator">:</span> <span class="token number">125</span><span class="token punctuation">,</span>
<span class="token literal-property property">translateX</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span>
<span class="token literal-property property">translateY</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
<span class="token literal-property property">scale</span><span class="token operator">:</span> <span class="token number">3</span> 
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li><p>translation:</p><ol><li><code>translate: {x: 50, y: 50}</code>,</li><li><code>translate: [50, 50]</code>,</li><li><code>translateX: 50</code>,</li><li><code>translateY: 50</code>,</li><li><code>tx: 50</code>,</li><li><code>ty: 50</code></li></ol></li><li><p>rotate: <code>rotate: 50</code></p></li><li><p>scale:</p><ol><li><code>scale: 2</code>,</li><li><code>scale: [2,2]</code>,</li><li><code>scaleX: 2</code>,</li><li><code>scaleY: 2</code></li></ol></li><li><p>shear/skew:</p><ol><li><code>skew: [10, 10]</code>,</li><li><code>skewX: 10</code>,</li><li><code>skewY: 10</code>,</li><li><code>shear: 3</code></li></ol></li><li><p>flip:</p><ol><li><code>both</code>,</li><li><code>true</code>,</li><li><code>x</code>,</li><li><code>y</code></li></ol></li><li><p>origin:</p><ol><li><code>origin: {x: 50, y: 50}</code>,</li><li><code>origin: [50, 50]</code>,</li><li><code>origin: 50</code>,</li><li><code>originX: 50</code>,</li><li><code>originY: 50</code>,</li><li><code>ox: 50</code>,</li><li><code>oy: 50</code></li><li>origin can also be a up to 2 words speciying the corners of the element: center, top, bottom, left, right</li></ol></li><li><p>position:</p><ol><li><code>position: {x: 50, y: 50}</code>,</li><li><code>position: [50, 50]</code>,</li><li><code>positionX: 50</code>,</li><li><code>positionY: 50</code>,</li><li><code>px: 50</code>,</li><li><code>py: 50</code></li></ol><p>✨absolute position of the origin after all transformations are applied</p></li><li><p>relative:</p><ol><li><code>relative: {x: 50, y: 50}</code>,</li><li><code>relative: [50, 50]</code>,</li><li><code>relativeX: 50</code>,</li><li><code>relativeY: 50</code>,</li><li><code>rx: 50</code>,</li><li><code>ry: 50</code></li></ol><p>✨relative position of the origin after all transformations are applied</p></li></ol></li><li><p>获得transform</p><p>返回对象包含属性:</p><ol><li>translateX (translation on the x-axis)</li><li>translateY (translation on the y-axis)</li><li>skewX (calculated skew on x-axis)</li><li>skewY (calculated skew on y-axis)</li><li>shear (calculated sher on x-axix)</li><li>scaleX (calculated scale on x-axis)</li><li>scaleY (calculated scale on y-axis)</li><li>rotate (calculated rotation)</li><li>originX (0 for this usecase)</li><li>originY (0 for this usecase)</li><li>-a-f (matrix data)</li></ol></li></ol><h2 id="styles" tabindex="-1"><a class="header-anchor" href="#styles" aria-hidden="true">#</a> Styles</h2><ol><li><p>设置css: <code>element.css({ cursor: &#39;pointer&#39;, fill: &#39;#f03&#39; })</code></p></li><li><p>获得css: <code>element.css()</code></p></li><li><p>隐藏元素: <code>element.hide()</code></p></li><li><p>显示元素: <code>element.show()</code></p></li></ol><h2 id="class-names" tabindex="-1"><a class="header-anchor" href="#class-names" aria-hidden="true">#</a> Class Names</h2><ol><li>添加class: <code>element.addClass(&#39;pink-flower&#39;)</code></li><li>获得class列表: <code>element.classes()</code></li><li>判断是否包含class: <code>element.hasClass(&#39;purple-rain&#39;)</code></li><li>删除class: <code>element.removeClass(&#39;pink-flower&#39;)</code></li><li>??: <code>element.toggleClass(&#39;pink-flower&#39;)</code></li></ol><h2 id="document-tree" tabindex="-1"><a class="header-anchor" href="#document-tree" aria-hidden="true">#</a> Document Tree</h2><ol><li><p>add()</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> rect <span class="token operator">=</span> draw<span class="token punctuation">.</span><span class="token function">rect</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> group <span class="token operator">=</span> draw<span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
group<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>rect<span class="token punctuation">)</span> <span class="token comment">//-&gt; returns group</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>addTo(), <code>rect.addTo(group) //-&gt; returns rect</code></p></li><li><p>clone(), <code>var clone = rect.clone()</code></p></li><li><p>put(), <code>group.put(rect) //-&gt; returns rect</code></p></li><li><p>putIn(), <code>rect.putIn(group) //-&gt; returns group</code></p></li><li><p>remove(), <code>rect.remove()</code></p></li><li><p>replace(), <code>rect.replace(draw.circle(100))</code></p></li><li><p>toParent(), toRoot(), <code>rect.toParent(group) // looks the same as before</code></p></li><li><p>ungroup()</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>group<span class="token punctuation">.</span><span class="token function">rect</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span>
group<span class="token punctuation">.</span><span class="token function">circle</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>
group<span class="token punctuation">.</span><span class="token function">transform</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">rotate</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ungroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// group is deleted, rect and circle both have rotate: 20</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>flatten(), 删除内部的嵌套分组, <code>group.flatten(container)</code></p></li></ol><h2 id="arranging" tabindex="-1"><a class="header-anchor" href="#arranging" aria-hidden="true">#</a> Arranging</h2><ol><li>after(), 在后方加入元素, <code>rect.after(circle)</code></li><li>before(), 在前方加入元素, <code>rect.before(circle)</code></li><li>insertAfter(), , <code>rect.insertAfter(circle)</code></li><li>insertBefore(), , <code>rect.insertBefore(circle)</code></li><li>back(), 将元素移到最后, <code>rect.back()</code></li><li>backward(), 将元素向后移动1位, <code>rect.backward()</code></li><li>front(), 将元素移到最前, <code>rect.front()</code></li><li>forward(), 将元素向前移动1位, <code>rect.forward()</code></li><li>next(), 获得下一个兄弟元素, <code>rect.next()</code></li><li>position(), 获得自己在兄弟元素的位置, <code>rect.position()</code></li><li>previous(), 获得之前的兄弟元素, <code>rect.previous()</code></li><li>siblings(), 获得所有的兄弟元素包括自己, <code>rect.siblings()</code></li></ol><h2 id="geometry" tabindex="-1"><a class="header-anchor" href="#geometry" aria-hidden="true">#</a> Geometry</h2><ol><li><p>point(), 将屏幕坐标转换为元素坐标, <code>var point = path.point(e.pageX, e.pageY) // {x, y}</code></p></li><li><p>inside(), 判断点是否在元素内,</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> rect <span class="token operator">=</span> draw<span class="token punctuation">.</span><span class="token function">rect</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span>

rect<span class="token punctuation">.</span><span class="token function">inside</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span> <span class="token comment">//-&gt; returns false</span>
rect<span class="token punctuation">.</span><span class="token function">inside</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">70</span><span class="token punctuation">)</span> <span class="token comment">//-&gt; returns true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>bbox(), 获得元素绝对位置边框, <code>element.bbox()</code></p></li><li><p>rbox(), 获得元素相对位置边框, <code>element.rbox(drawing)</code></p></li><li><p>viewbox()</p><ol><li>设置viewbox, <code>drawing.viewbox(10, 10, 500, 600)</code></li><li>获得viewbox, <code>drawing.viewbox()</code></li></ol></li></ol>`,24),i=[t];function c(l,p){return a(),s("div",null,i)}const u=n(o,[["render",c],["__file","3属性(attribute).html.vue"]]);export{u as default};
