const n=JSON.parse(`{"key":"v-0ef1d41e","path":"/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/cls.html","title":"cls","lang":"zh-CN","frontmatter":{"description":"cls cls是类本身 cls(entries)既User(entries)，让后会继续调用__new__和__init__创建和初始化对象 通过这个方式，既使用@classmethod来创建了新的对象 class User(object): def __init__(self, entries): self.__dict__.update(**entries) @classmethod def from_json(cls,path=\\"./user.json\\"): entries = json.load(open(path,'r')) return cls(entries)","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/cls.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"cls"}],["meta",{"property":"og:description","content":"cls cls是类本身 cls(entries)既User(entries)，让后会继续调用__new__和__init__创建和初始化对象 通过这个方式，既使用@classmethod来创建了新的对象 class User(object): def __init__(self, entries): self.__dict__.update(**entries) @classmethod def from_json(cls,path=\\"./user.json\\"): entries = json.load(open(path,'r')) return cls(entries)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-27T13:17:01.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2023-11-27T13:17:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"cls\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-27T13:17:01.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[],"git":{"createdTime":1701091021000,"updatedTime":1701091021000,"contributors":[{"name":"claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":0.24,"words":71},"filePathRelative":"编程语言/python/面向对象/cls.md","localizedDate":"2023年11月27日","excerpt":"<h1> cls</h1>\\n<p><code>cls</code>是类本身 <code>cls(entries)</code>既<code>User(entries)</code>，让后会继续调用<code>__new__</code>和<code>__init__</code>创建和初始化对象</p>\\n<p>通过这个方式，既使用<code>@classmethod</code>来创建了新的对象</p>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">User</span><span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">object</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">__init__</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">,</span> entries<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n        self<span class=\\"token punctuation\\">.</span>__dict__<span class=\\"token punctuation\\">.</span>update<span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">**</span>entries<span class=\\"token punctuation\\">)</span>\\n\\n    <span class=\\"token decorator annotation punctuation\\">@classmethod</span>\\n    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">from_json</span><span class=\\"token punctuation\\">(</span>cls<span class=\\"token punctuation\\">,</span>path<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"./user.json\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n        entries <span class=\\"token operator\\">=</span> json<span class=\\"token punctuation\\">.</span>load<span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">open</span><span class=\\"token punctuation\\">(</span>path<span class=\\"token punctuation\\">,</span><span class=\\"token string\\">'r'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">return</span> cls<span class=\\"token punctuation\\">(</span>entries<span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"王新宇"},"autoDesc":true}`);export{n as data};
