import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as a,c as s,e as t}from"./app-jdLxCr9I.js";const o={},e=t(`<h1 id="functions" tabindex="-1"><a class="header-anchor" href="#functions" aria-hidden="true">#</a> functions</h1><h2 id="transformation-function" tabindex="-1"><a class="header-anchor" href="#transformation-function" aria-hidden="true">#</a> transformation function</h2><p>返回值仍旧是RDD的，称为转换算子。这类算子是懒加载的<code>lazy</code>，如果没有<code>action</code>算子，<code>transformation</code>是不工作的</p><h2 id="action-function" tabindex="-1"><a class="header-anchor" href="#action-function" aria-hidden="true">#</a> action function</h2><p>返回值不是<code>RDD</code>的，就是<code>action</code>算子</p><p><code>transformation</code>相当于构建执行计划，<code>action</code>是一个指令让这个执行计划工作。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>file_rdd <span class="token operator">=</span> sc<span class="token punctuation">.</span>textFile<span class="token punctuation">(</span><span class="token string">&quot;./words.txt&quot;</span><span class="token punctuation">)</span> <span class="token comment"># 此时数据为 (hello word)， 也可以读取 &quot;hdfs://node1:8020/input/words.txt&quot;</span>
words_rdd <span class="token operator">=</span> file_rdd<span class="token punctuation">.</span>flatMap<span class="token punctuation">(</span><span class="token keyword">lambda</span> line<span class="token punctuation">:</span> line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 将单词进行切割, (hello) (word)</span>
words_with_one_rdd <span class="token operator">=</span> words_rdd<span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 将单词转换为元组对象, (hello,1) (word,1)</span>
result_rdd <span class="token operator">=</span> words_with_one_rdd<span class="token punctuation">.</span>reduceByKey<span class="token punctuation">(</span><span class="token keyword">lambda</span> a<span class="token punctuation">,</span> b<span class="token punctuation">:</span> a <span class="token operator">+</span> b<span class="token punctuation">)</span> <span class="token comment"># 按照元组第一个元素分组，并相加(hello,4)</span>
result_rdd<span class="token punctuation">.</span>collect<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>file_rdd - word_rdd - words_with_one_rdd - result_rdd 都是 <code>transformation</code> collect() 才是<code>action</code></p>`,8),c=[e];function p(i,d){return a(),s("div",null,c)}const u=n(o,[["render",p],["__file","functions.html.vue"]]);export{u as default};
