import{_ as s}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as n,c as a,e as t}from"./app-O0xqlHfm.js";const e={},p=t(`<h1 id="vueconfigjs" tabindex="-1"><a class="header-anchor" href="#vueconfigjs" aria-hidden="true">#</a> vueconfigjs</h1><p>vue.config.js是一个可选的配置文件，如果项目的(和package.json同级的)根目录中存在这个文件，那么它会被@vue/cli-service自动加载。你也可以使用package.json中的vue字段，但是注意这种写法需要你严格遵照JSON的格式来写。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">productionSourceMap</span><span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token comment">// 关闭ESLINT校验工具</span>
  <span class="token literal-property property">lintOnSave</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token comment">//配置代理跨域</span>
  <span class="token literal-property property">devServer</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">proxy</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token string-property property">&quot;/api&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">//将/api路径的访问代理到target, 这里不能写域名, 域名是默认的</span>
        <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token string">&quot;http://localhost:5000/&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上述的代理配置, 对应axios的配置为</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//对于axios进行二次封装</span>
<span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&quot;axios&quot;</span><span class="token punctuation">;</span>
<span class="token comment">//创建axios实例</span>
<span class="token keyword">let</span> requests <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">baseURL</span><span class="token operator">:</span> <span class="token string">&quot;http://localhost:8080/api&quot;</span><span class="token punctuation">,</span><span class="token comment">//这里可以简写成&quot;/&quot;</span>
  <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">5000</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>既当前端请求<code>http://localhost:8080/api</code>时, webpack帮我们转发给了<code>http://localhost:5000/api</code></p><table><thead><tr><th>配置选项</th><th>描述</th></tr></thead><tbody><tr><td>publicPath</td><td>string, default:&#39;/&#39;, 相对路径, 如果值为(&#39;./&#39;)，这样所有的资源都会被链接为相对路径，这样打出来的包可以被部署在任意路径</td></tr><tr><td>outputDir</td><td>输出文件目录，当运行 vue-cli-service build 时生成的生产环境构建文件的目录</td></tr><tr><td>assetsDir</td><td>Type: string, Default: &#39;&#39;, 放置生成的静态资源 (js、css、img、fonts) 的目录。</td></tr><tr><td>indexPath</td><td>Type: string, Default: &#39;index.html&#39;, <code>index.html</code> 的输出路径 (相对于 outputDir)。也可以是一个绝对路径。</td></tr><tr><td>lintOnSave</td><td>Type: boolean, Default: true, 是否在保存的时候使用 <code>eslint-loader</code> 进行检查</td></tr><tr><td>devServer</td><td>Type: Object</td></tr></tbody></table><p>参考: https://www.jianshu.com/p/b358a91bdf2d</p>`,8),o=[p];function c(i,l){return n(),a("div",null,o)}const d=s(e,[["render",c],["__file","vueconfigjs.html.vue"]]);export{d as default};
