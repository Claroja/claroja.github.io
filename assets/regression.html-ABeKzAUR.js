const n=JSON.parse(`{"key":"v-a2232a9c","path":"/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/3_2pytorch/%E5%BA%94%E7%94%A8%E6%A1%88%E4%BE%8B/regression.html","title":"regression","lang":"zh-CN","frontmatter":{"description":"regression 导入相关模块, 日志, 设备配置 import pandas as pd import numpy as np from sklearn import preprocessing import torch from torch.utils.data import TensorDataset, DataLoader import time from torch import nn, optim import math import logging.config import yaml logging.config.dictConfig(yaml.safe_load(open('logging.yml', 'r'))) logger = logging.getLogger('mylog') device = torch.device(\\"cuda:0\\" if torch.cuda.is_available() else \\"cpu\\")","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/3_2pytorch/%E5%BA%94%E7%94%A8%E6%A1%88%E4%BE%8B/regression.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"regression"}],["meta",{"property":"og:description","content":"regression 导入相关模块, 日志, 设备配置 import pandas as pd import numpy as np from sklearn import preprocessing import torch from torch.utils.data import TensorDataset, DataLoader import time from torch import nn, optim import math import logging.config import yaml logging.config.dictConfig(yaml.safe_load(open('logging.yml', 'r'))) logger = logging.getLogger('mylog') device = torch.device(\\"cuda:0\\" if torch.cuda.is_available() else \\"cpu\\")"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-18T14:02:01.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2025-02-18T14:02:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"regression\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-18T14:02:01.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[],"git":{"createdTime":1739887321000,"updatedTime":1739887321000,"contributors":[{"name":"Claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":1.87,"words":560},"filePathRelative":"机器学习/3_2pytorch/应用案例/regression.md","localizedDate":"2025年2月18日","excerpt":"<h1> regression</h1>\\n<ol>\\n<li>导入相关模块, 日志, 设备配置</li>\\n</ol>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">import</span> pandas <span class=\\"token keyword\\">as</span> pd\\n<span class=\\"token keyword\\">import</span> numpy <span class=\\"token keyword\\">as</span> np\\n<span class=\\"token keyword\\">from</span> sklearn <span class=\\"token keyword\\">import</span> preprocessing\\n<span class=\\"token keyword\\">import</span> torch\\n<span class=\\"token keyword\\">from</span> torch<span class=\\"token punctuation\\">.</span>utils<span class=\\"token punctuation\\">.</span>data <span class=\\"token keyword\\">import</span> TensorDataset<span class=\\"token punctuation\\">,</span> DataLoader\\n<span class=\\"token keyword\\">import</span> time\\n<span class=\\"token keyword\\">from</span> torch <span class=\\"token keyword\\">import</span> nn<span class=\\"token punctuation\\">,</span> optim\\n<span class=\\"token keyword\\">import</span> math\\n<span class=\\"token keyword\\">import</span> logging<span class=\\"token punctuation\\">.</span>config\\n<span class=\\"token keyword\\">import</span> yaml\\n\\nlogging<span class=\\"token punctuation\\">.</span>config<span class=\\"token punctuation\\">.</span>dictConfig<span class=\\"token punctuation\\">(</span>yaml<span class=\\"token punctuation\\">.</span>safe_load<span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">open</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'logging.yml'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'r'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\nlogger <span class=\\"token operator\\">=</span> logging<span class=\\"token punctuation\\">.</span>getLogger<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'mylog'</span><span class=\\"token punctuation\\">)</span>\\ndevice <span class=\\"token operator\\">=</span> torch<span class=\\"token punctuation\\">.</span>device<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"cuda:0\\"</span> <span class=\\"token keyword\\">if</span> torch<span class=\\"token punctuation\\">.</span>cuda<span class=\\"token punctuation\\">.</span>is_available<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">else</span> <span class=\\"token string\\">\\"cpu\\"</span><span class=\\"token punctuation\\">)</span>\\n\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"王新宇"},"autoDesc":true}`);export{n as data};
