import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as e,c as h,e as r}from"./app-YE2Hltoy.js";const d={},i=r('<h1 id="标题" tabindex="-1"><a class="header-anchor" href="#标题" aria-hidden="true">#</a> 标题</h1><h2 id="一级标题" tabindex="-1"><a class="header-anchor" href="#一级标题" aria-hidden="true">#</a> 一级标题</h2><p>一级标题是文章的大标题，正文不应该出现一级标题</p><h2 id="多级列表转化为平级列表" tabindex="-1"><a class="header-anchor" href="#多级列表转化为平级列表" aria-hidden="true">#</a> 多级列表转化为平级列表</h2><p>比如有如下列表:</p><ol><li>a <ol><li>m</li><li>n</li></ol></li><li>b <ol><li>x</li><li>y</li></ol></li></ol><p>一般文章结构都会如下设置</p><h2 id="a" tabindex="-1"><a class="header-anchor" href="#a" aria-hidden="true">#</a> a</h2><h3 id="m" tabindex="-1"><a class="header-anchor" href="#m" aria-hidden="true">#</a> m</h3><h3 id="n" tabindex="-1"><a class="header-anchor" href="#n" aria-hidden="true">#</a> n</h3><h2 id="b" tabindex="-1"><a class="header-anchor" href="#b" aria-hidden="true">#</a> b</h2><h3 id="x" tabindex="-1"><a class="header-anchor" href="#x" aria-hidden="true">#</a> x</h3><h3 id="y" tabindex="-1"><a class="header-anchor" href="#y" aria-hidden="true">#</a> y</h3><p>这样虽然条理清晰, 但也容易失去聚焦点, 因为更容易关注到mn和xy的并列关系, 而忽略了ab的并列关系, 所以可以调整成如下的结构:</p><h2 id="ab" tabindex="-1"><a class="header-anchor" href="#ab" aria-hidden="true">#</a> ab</h2><h3 id="a-1" tabindex="-1"><a class="header-anchor" href="#a-1" aria-hidden="true">#</a> a</h3><h3 id="b-1" tabindex="-1"><a class="header-anchor" href="#b-1" aria-hidden="true">#</a> b</h3><h2 id="a-2" tabindex="-1"><a class="header-anchor" href="#a-2" aria-hidden="true">#</a> a</h2><h3 id="m-1" tabindex="-1"><a class="header-anchor" href="#m-1" aria-hidden="true">#</a> m</h3><h3 id="n-1" tabindex="-1"><a class="header-anchor" href="#n-1" aria-hidden="true">#</a> n</h3><h2 id="b-2" tabindex="-1"><a class="header-anchor" href="#b-2" aria-hidden="true">#</a> b</h2><h3 id="x-1" tabindex="-1"><a class="header-anchor" href="#x-1" aria-hidden="true">#</a> x</h3><h3 id="y-1" tabindex="-1"><a class="header-anchor" href="#y-1" aria-hidden="true">#</a> y</h3><h2 id="目录序号" tabindex="-1"><a class="header-anchor" href="#目录序号" aria-hidden="true">#</a> 目录序号</h2><ul><li><p>人文类</p><p>第一层为汉字数字加顿号，例如：“一、”“二、”“三、”； 第二层为括号中包含汉字数字，例如：“（一）”“（二）”“（三）”； 第三层为阿拉伯数字加下脚点，例如：“1. ”“2.”“3.”； 第四层为括号中包含阿拉伯数字，例如：“（1）”“（2）”“（3）”； 第五层为带圈的阿拉伯数字，例如：“①”“②”“③”或者“1）”“2）”“3）”； 第六层为大写英文字母，例如：“A.”“B.”“C.”或者“（A）”“（B）”“（C）”； 第七层为小写英文字母，例如： “a.”“b.”“c.”或者“（a)”“（b）”“（c)”；</p></li><li><p>理科类</p><p>理科类论文的各层次标题还可用阿拉伯数字连续编码，不同层次的2个数字之间用下圆点(.)分隔开，末位数字后面不加点号。如“1”，“1.2”，“1.2.1”等；各层次的标题序号均左顶格排写，最后一个序号之后空一个字距接排标题。如“5.3.2 测量的方法”，表示第五章第三节第二条的标题是“测量的方法”。</p></li></ul>',25),n=[i];function t(c,l){return e(),h("div",null,n)}const b=a(d,[["render",t],["__file","标题.html.vue"]]);export{b as default};
