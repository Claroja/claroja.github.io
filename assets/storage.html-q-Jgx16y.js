const n=JSON.parse('{"key":"v-a0150548","path":"/2%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/3%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/5pytorch/%E5%BC%A0%E9%87%8F/storage.html","title":"storage","lang":"zh-CN","frontmatter":{"description":"storage tensor由头信息区(Tensor)和存储区(Storage). 头信息区主要保存着Tensor的形状(size),步长(stride),数据类型(type)等信息 存储区则保存真正的数据, 是连续的数组 import torch a = torch.arange(0, 6) # tensor([0, 1, 2, 3, 4, 5]) a.storage() ## 0 ## 1 ## 2 ## 3 ## 4 ## 5 ## [torch.LongStorage of size 6] b = a.view(2,3) ## tensor([[0, 1, 2], ## [3, 4, 5]]) b.storage() ## 0 ## 1 ## 2 ## 3 ## 4 ## 5 ## [torch.LongStorage of size 6] id(a) == id(b) # False id(a.storage) == id(b.storage) # True c = a[2:] # tensor([2, 3, 4, 5]) ## c.storage() ## 0 ## 1 ## 2 ## 3 ## 4 ## 5 ## [torch.LongStorage of size 6] id(a.storage) == id(c.storage) # True","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/2%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/3%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/5pytorch/%E5%BC%A0%E9%87%8F/storage.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"storage"}],["meta",{"property":"og:description","content":"storage tensor由头信息区(Tensor)和存储区(Storage). 头信息区主要保存着Tensor的形状(size),步长(stride),数据类型(type)等信息 存储区则保存真正的数据, 是连续的数组 import torch a = torch.arange(0, 6) # tensor([0, 1, 2, 3, 4, 5]) a.storage() ## 0 ## 1 ## 2 ## 3 ## 4 ## 5 ## [torch.LongStorage of size 6] b = a.view(2,3) ## tensor([[0, 1, 2], ## [3, 4, 5]]) b.storage() ## 0 ## 1 ## 2 ## 3 ## 4 ## 5 ## [torch.LongStorage of size 6] id(a) == id(b) # False id(a.storage) == id(b.storage) # True c = a[2:] # tensor([2, 3, 4, 5]) ## c.storage() ## 0 ## 1 ## 2 ## 3 ## 4 ## 5 ## [torch.LongStorage of size 6] id(a.storage) == id(c.storage) # True"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-24T12:46:58.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2025-02-24T12:46:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"storage\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-24T12:46:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[],"git":{"createdTime":1740401218000,"updatedTime":1740401218000,"contributors":[{"name":"Claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":0.76,"words":227},"filePathRelative":"2机器学习/3分析工具/5pytorch/张量/storage.md","localizedDate":"2025年2月24日","excerpt":"<h1> storage</h1>\\n<p><code>tensor</code>由头信息区(<code>Tensor</code>)和存储区(<code>Storage</code>).</p>\\n<ul>\\n<li>头信息区主要保存着<code>Tensor</code>的形状(size),步长(stride),数据类型(type)等信息</li>\\n<li>存储区则保存真正的数据, 是连续的数组</li>\\n</ul>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">import</span> torch\\na <span class=\\"token operator\\">=</span> torch<span class=\\"token punctuation\\">.</span>arange<span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">6</span><span class=\\"token punctuation\\">)</span>  <span class=\\"token comment\\"># tensor([0, 1, 2, 3, 4, 5])</span>\\na<span class=\\"token punctuation\\">.</span>storage<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token comment\\">##  0</span>\\n<span class=\\"token comment\\">##  1</span>\\n<span class=\\"token comment\\">##  2</span>\\n<span class=\\"token comment\\">##  3</span>\\n<span class=\\"token comment\\">##  4</span>\\n<span class=\\"token comment\\">##  5</span>\\n<span class=\\"token comment\\">## [torch.LongStorage of size 6]</span>\\nb <span class=\\"token operator\\">=</span> a<span class=\\"token punctuation\\">.</span>view<span class=\\"token punctuation\\">(</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token comment\\">## tensor([[0, 1, 2],</span>\\n<span class=\\"token comment\\">##         [3, 4, 5]])</span>\\nb<span class=\\"token punctuation\\">.</span>storage<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token comment\\">##  0</span>\\n<span class=\\"token comment\\">##  1</span>\\n<span class=\\"token comment\\">##  2</span>\\n<span class=\\"token comment\\">##  3</span>\\n<span class=\\"token comment\\">##  4</span>\\n<span class=\\"token comment\\">##  5</span>\\n<span class=\\"token comment\\">## [torch.LongStorage of size 6]</span>\\n<span class=\\"token builtin\\">id</span><span class=\\"token punctuation\\">(</span>a<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">==</span> <span class=\\"token builtin\\">id</span><span class=\\"token punctuation\\">(</span>b<span class=\\"token punctuation\\">)</span>  <span class=\\"token comment\\"># False</span>\\n<span class=\\"token builtin\\">id</span><span class=\\"token punctuation\\">(</span>a<span class=\\"token punctuation\\">.</span>storage<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">==</span> <span class=\\"token builtin\\">id</span><span class=\\"token punctuation\\">(</span>b<span class=\\"token punctuation\\">.</span>storage<span class=\\"token punctuation\\">)</span>  <span class=\\"token comment\\"># True</span>\\n\\nc <span class=\\"token operator\\">=</span> a<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">:</span><span class=\\"token punctuation\\">]</span>  <span class=\\"token comment\\"># tensor([2, 3, 4, 5])</span>\\n<span class=\\"token comment\\">## c.storage()</span>\\n<span class=\\"token comment\\">##  0</span>\\n<span class=\\"token comment\\">##  1</span>\\n<span class=\\"token comment\\">##  2</span>\\n<span class=\\"token comment\\">##  3</span>\\n<span class=\\"token comment\\">##  4</span>\\n<span class=\\"token comment\\">##  5</span>\\n<span class=\\"token comment\\">## [torch.LongStorage of size 6]</span>\\n<span class=\\"token builtin\\">id</span><span class=\\"token punctuation\\">(</span>a<span class=\\"token punctuation\\">.</span>storage<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">==</span> <span class=\\"token builtin\\">id</span><span class=\\"token punctuation\\">(</span>c<span class=\\"token punctuation\\">.</span>storage<span class=\\"token punctuation\\">)</span>  <span class=\\"token comment\\"># True</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"王新宇"},"autoDesc":true}');export{n as data};
