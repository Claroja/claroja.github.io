import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as a,c as s,e}from"./app-O0xqlHfm.js";const t={},c=e(`<h1 id="部署" tabindex="-1"><a class="header-anchor" href="#部署" aria-hidden="true">#</a> 部署</h1><p><code>hexo deploy</code>用来对静态文件进行部署. 会在工作目录下生成<code>.deploy_git</code>文件夹, 里面是一个<code>git</code>仓库, 包含了所有生成的静态文件.</p><ul><li><p>命令: <code>hexo d</code></p></li><li><p>参数: 在hexo中的<code>_config.yml</code>文件中配置部署的目标网站</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment"># You can use this:</span>
<span class="token key atrule">deploy</span><span class="token punctuation">:</span>
  <span class="token key atrule">type</span><span class="token punctuation">:</span> git
  <span class="token key atrule">repo</span><span class="token punctuation">:</span> &lt;repository url<span class="token punctuation">&gt;</span>
  <span class="token key atrule">branch</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>branch<span class="token punctuation">]</span>
  <span class="token key atrule">message</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>message<span class="token punctuation">]</span>
  <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>git user<span class="token punctuation">]</span>
  <span class="token key atrule">email</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>git email<span class="token punctuation">]</span>
  <span class="token key atrule">extend_dirs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>extend directory<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如:</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">deploy</span><span class="token punctuation">:</span>
  <span class="token key atrule">type</span><span class="token punctuation">:</span> git
  <span class="token key atrule">repo</span><span class="token punctuation">:</span> git@github.com<span class="token punctuation">:</span>Claroja/claroja.github.io.git
  <span class="token key atrule">branch</span><span class="token punctuation">:</span> main
  <span class="token key atrule">name</span><span class="token punctuation">:</span> claroja
  <span class="token key atrule">email</span><span class="token punctuation">:</span> 63183535@qq.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果不生效,可以修改<code>/hexo/.deploy_git/.git/config</code>文件中的email；</p><p>因为<code>hexo d</code>是将生成的<code>html</code>文件上传, 而<code>.md</code>源码文件并没有上传, 所以可以将hexo工程文件新创建一个<code>source</code>分支进行保存.</p></li></ul><p>参考:</p><ul><li>https://github.com/hexojs/hexo/issues/2125</li></ul>`,5),o=[c];function p(l,i){return a(),s("div",null,o)}const r=n(t,[["render",p],["__file","部署.html.vue"]]);export{r as default};
