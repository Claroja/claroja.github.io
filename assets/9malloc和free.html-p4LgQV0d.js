const e=JSON.parse('{"key":"v-4f16af00","path":"/4%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/2c%E8%AF%AD%E8%A8%80/3%E6%8C%87%E9%92%88/9malloc%E5%92%8Cfree.html","title":"","lang":"zh-CN","frontmatter":{"description":"基础 头文件#include &lt;stdlib.h&gt;,原型void* malloc (size_t size); size 为需要分配的内存空间的大小，以字节（Byte）计 分配指定大小的空间,未初始化,值是未知的,如果希望初始化使用calloc 返回类型void *,并非是没有返回值或返回空指针,而是返回指针类型未知.所以需要将void指针转换成我们希望的类型.char *p = (char *)malloc(10);//申请10个字节字符空间 成功返回地址,失败返回NULL 申请可能成功,也可能不成功,所以要自行判断是否成功 free释放指针说的是本程序失去所有权,而不是将内存重置为初始值(内存仍保留本程序更改过的值,只不过现在别的程序可以访问)","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/4%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/2c%E8%AF%AD%E8%A8%80/3%E6%8C%87%E9%92%88/9malloc%E5%92%8Cfree.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:description","content":"基础 头文件#include &lt;stdlib.h&gt;,原型void* malloc (size_t size); size 为需要分配的内存空间的大小，以字节（Byte）计 分配指定大小的空间,未初始化,值是未知的,如果希望初始化使用calloc 返回类型void *,并非是没有返回值或返回空指针,而是返回指针类型未知.所以需要将void指针转换成我们希望的类型.char *p = (char *)malloc(10);//申请10个字节字符空间 成功返回地址,失败返回NULL 申请可能成功,也可能不成功,所以要自行判断是否成功 free释放指针说的是本程序失去所有权,而不是将内存重置为初始值(内存仍保留本程序更改过的值,只不过现在别的程序可以访问)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-24T12:46:58.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2025-02-24T12:46:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-24T12:46:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[{"level":2,"title":"基础","slug":"基础","link":"#基础","children":[]},{"level":2,"title":"函数说明","slug":"函数说明","link":"#函数说明","children":[]}],"git":{"createdTime":1740401218000,"updatedTime":1740401218000,"contributors":[{"name":"Claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":2.02,"words":605},"filePathRelative":"4编程语言/2c语言/3指针/9malloc和free.md","localizedDate":"2025年2月24日","excerpt":"<h2> 基础</h2>\\n<ol>\\n<li>头文件<code>#include &lt;stdlib.h&gt;</code>,原型<code>void* malloc (size_t size);</code></li>\\n<li>size 为需要分配的内存空间的大小，以字节（Byte）计</li>\\n<li>分配指定大小的空间,未初始化,值是未知的,如果希望初始化使用<code>calloc</code></li>\\n<li>返回类型<code>void *</code>,并非是没有返回值或返回空指针,而是返回指针类型未知.所以需要将void指针转换成我们希望的类型.<code>char *p = (char *)malloc(10);//申请10个字节字符空间</code></li>\\n<li>成功返回地址,失败返回NULL</li>\\n<li>申请可能成功,也可能不成功,所以要自行判断是否成功</li>\\n<li>free释放指针说的是本程序失去所有权,而不是将内存重置为初始值(内存仍保留本程序更改过的值,只不过现在别的程序可以访问)</li>\\n</ol>","copyright":{"author":"王新宇"},"autoDesc":true}');export{e as data};
