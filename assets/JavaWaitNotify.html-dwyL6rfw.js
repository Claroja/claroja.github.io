const t=JSON.parse('{"key":"v-3ec82a73","path":"/2%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/4java/Synchronized/JavaWaitNotify.html","title":"detach","lang":"zh-CN","frontmatter":{"description":"detach wait/notify obj.wait() 让进入 object 监视器的线程到 waitSet 等待, 可以加入param 超时参数(超过时间则不等待唤醒, 自己叫醒自己) obj.notify() 在 object 上正在 waitSet 等待的线程中挑一个唤醒 obj.notifyAll() 让 object 上正在 waitSet 等待的线程全部唤醒 必须获得此对象的锁(既在synchronized(lock)锁住的代码片段)，才能调用以上几个方法:","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/2%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/4java/Synchronized/JavaWaitNotify.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"detach"}],["meta",{"property":"og:description","content":"detach wait/notify obj.wait() 让进入 object 监视器的线程到 waitSet 等待, 可以加入param 超时参数(超过时间则不等待唤醒, 自己叫醒自己) obj.notify() 在 object 上正在 waitSet 等待的线程中挑一个唤醒 obj.notifyAll() 让 object 上正在 waitSet 等待的线程全部唤醒 必须获得此对象的锁(既在synchronized(lock)锁住的代码片段)，才能调用以上几个方法:"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-21T12:59:55.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2025-02-21T12:59:55.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"detach\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-21T12:59:55.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[{"level":2,"title":"wait/notify","slug":"wait-notify","link":"#wait-notify","children":[{"level":3,"title":"wait","slug":"wait","link":"#wait","children":[]},{"level":3,"title":"notify","slug":"notify","link":"#notify","children":[]},{"level":3,"title":"notifyAll","slug":"notifyall","link":"#notifyall","children":[]}]},{"level":2,"title":"原理","slug":"原理","link":"#原理","children":[]},{"level":2,"title":"sleep和wait区别","slug":"sleep和wait区别","link":"#sleep和wait区别","children":[]},{"level":2,"title":"Guarded Suspension 模式(保护性暂停)","slug":"guarded-suspension-模式-保护性暂停","link":"#guarded-suspension-模式-保护性暂停","children":[]},{"level":2,"title":"produce/consume模式","slug":"produce-consume模式","link":"#produce-consume模式","children":[]},{"level":2,"title":"顺序执行设计模式","slug":"顺序执行设计模式","link":"#顺序执行设计模式","children":[]},{"level":2,"title":"交替执行设计模式","slug":"交替执行设计模式","link":"#交替执行设计模式","children":[]}],"git":{"createdTime":1740142795000,"updatedTime":1740142795000,"contributors":[{"name":"Claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":3.47,"words":1041},"filePathRelative":"2编程语言/4java/Synchronized/JavaWaitNotify.md","localizedDate":"2025年2月21日","excerpt":"<h1> detach</h1>\\n<h2> wait/notify</h2>\\n<ul>\\n<li>obj.wait() 让进入 object 监视器的线程到 waitSet 等待, 可以加入param 超时参数(超过时间则不等待唤醒, 自己叫醒自己)</li>\\n<li>obj.notify() 在 object 上正在 waitSet 等待的线程中挑一个唤醒</li>\\n<li>obj.notifyAll() 让 object 上正在 waitSet 等待的线程全部唤醒</li>\\n</ul>\\n<p>必须获得此对象的锁(既在synchronized(lock)锁住的代码片段)，才能调用以上几个方法:</p>","copyright":{"author":"王新宇"},"autoDesc":true}');export{t as data};
