const n=JSON.parse('{"key":"v-7c1a6186","path":"/%E5%89%8D%E7%AB%AF/javaScript/%E5%AF%B9%E8%B1%A1/bind.html","title":"bind","lang":"zh-CN","frontmatter":{"description":"bind 参考官网 bind的第一个参数是对象，就是要绑定的对象，绑定后this就指向了绑定的新对象 const person = { firstName:\\"John\\", lastName: \\"Doe\\", fullName: function() { console.log(this.firstName + \\" \\" + this.lastName) } } const member = { firstName:\\"Hege\\", lastName: \\"Nilsen\\", } let fullName = person.fullName.bind(member) // 绑定member，这时方法内部的this指向了member，而不是person fullName() //调用方法，结果是Hege Nilsen","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/%E5%89%8D%E7%AB%AF/javaScript/%E5%AF%B9%E8%B1%A1/bind.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"bind"}],["meta",{"property":"og:description","content":"bind 参考官网 bind的第一个参数是对象，就是要绑定的对象，绑定后this就指向了绑定的新对象 const person = { firstName:\\"John\\", lastName: \\"Doe\\", fullName: function() { console.log(this.firstName + \\" \\" + this.lastName) } } const member = { firstName:\\"Hege\\", lastName: \\"Nilsen\\", } let fullName = person.fullName.bind(member) // 绑定member，这时方法内部的this指向了member，而不是person fullName() //调用方法，结果是Hege Nilsen"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-27T13:17:01.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2023-11-27T13:17:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"bind\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-27T13:17:01.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[],"git":{"createdTime":1701091021000,"updatedTime":1701091021000,"contributors":[{"name":"claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":0.65,"words":194},"filePathRelative":"前端/javaScript/对象/bind.md","localizedDate":"2023年11月27日","excerpt":"<h1> bind</h1>\\n<p><a href=\\"https://www.w3schools.com/js/js_function_bind.asp\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">参考官网</a></p>\\n<ol>\\n<li>bind的第一个参数是对象，就是要绑定的对象，绑定后this就指向了绑定的新对象</li>\\n</ol>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">const</span> person <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token literal-property property\\">firstName</span><span class=\\"token operator\\">:</span><span class=\\"token string\\">\\"John\\"</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token literal-property property\\">lastName</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Doe\\"</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token function-variable function\\">fullName</span><span class=\\"token operator\\">:</span> <span class=\\"token keyword\\">function</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>firstName <span class=\\"token operator\\">+</span> <span class=\\"token string\\">\\" \\"</span> <span class=\\"token operator\\">+</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>lastName<span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">const</span> member <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token literal-property property\\">firstName</span><span class=\\"token operator\\">:</span><span class=\\"token string\\">\\"Hege\\"</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token literal-property property\\">lastName</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Nilsen\\"</span><span class=\\"token punctuation\\">,</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">let</span> fullName <span class=\\"token operator\\">=</span> person<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">fullName</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">bind</span><span class=\\"token punctuation\\">(</span>member<span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\">// 绑定member，这时方法内部的this指向了member，而不是person</span>\\n<span class=\\"token function\\">fullName</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>  <span class=\\"token comment\\">//调用方法，结果是Hege Nilsen</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"王新宇"},"autoDesc":true}');export{n as data};
