const n=JSON.parse(`{"key":"v-ea7bc8f0","path":"/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/2_1%E6%A0%91%E6%A8%A1%E5%9E%8B/2_5_3%E5%86%B3%E7%AD%96%E6%A0%91%E5%AE%9E%E8%B7%B5_scikitlearn_%E8%B6%85%E5%8F%82%E6%90%9C%E7%B4%A2.html","title":"","lang":"zh-CN","frontmatter":{"description":"import pandas as pd from sklearn.model_selection import train_test_split from sklearn.tree import DecisionTreeClassifier, plot_tree from sklearn.metrics import accuracy_score from sklearn.model_selection import GridSearchCV data_all = pd.read_csv( './data/test/titanic.csv', usecols=['Survived', 'Pclass', 'Age', 'SibSp', 'Parch', 'Fare', 'Sex', 'Embarked']) data_all = data_all.dropna() data_all = pd.merge(data_all, pd.get_dummies(data_all[['Sex', 'Embarked']]), how=\\"inner\\", left_index=True, right_index=True) data_all = data_all.drop(['Sex', 'Embarked'], axis=1) data_y = data_all['Survived'] data_x = data_all.drop('Survived', axis=1) X_train, X_test, y_train, y_test = train_test_split(data_x, data_y, random_state = 100) params = { 'criterion': ['gini', 'entropy'], 'splitter': ['best', 'random'], 'max_depth': [None, 2, 4, 6, 8, 10], 'max_features': [None, 'sqrt', 'log2', 0.2, 0.4, 0.6, 0.8], 'random_state': [10] } clf_grid = GridSearchCV( estimator=DecisionTreeClassifier(), param_grid=params, cv=5, n_jobs=5, verbose=0, ) clf_grid.fit(X_train, y_train) print(accuracy_score(y_test, clf_grid.predict(X_test))) # 0.79","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/2_1%E6%A0%91%E6%A8%A1%E5%9E%8B/2_5_3%E5%86%B3%E7%AD%96%E6%A0%91%E5%AE%9E%E8%B7%B5_scikitlearn_%E8%B6%85%E5%8F%82%E6%90%9C%E7%B4%A2.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:description","content":"import pandas as pd from sklearn.model_selection import train_test_split from sklearn.tree import DecisionTreeClassifier, plot_tree from sklearn.metrics import accuracy_score from sklearn.model_selection import GridSearchCV data_all = pd.read_csv( './data/test/titanic.csv', usecols=['Survived', 'Pclass', 'Age', 'SibSp', 'Parch', 'Fare', 'Sex', 'Embarked']) data_all = data_all.dropna() data_all = pd.merge(data_all, pd.get_dummies(data_all[['Sex', 'Embarked']]), how=\\"inner\\", left_index=True, right_index=True) data_all = data_all.drop(['Sex', 'Embarked'], axis=1) data_y = data_all['Survived'] data_x = data_all.drop('Survived', axis=1) X_train, X_test, y_train, y_test = train_test_split(data_x, data_y, random_state = 100) params = { 'criterion': ['gini', 'entropy'], 'splitter': ['best', 'random'], 'max_depth': [None, 2, 4, 6, 8, 10], 'max_features': [None, 'sqrt', 'log2', 0.2, 0.4, 0.6, 0.8], 'random_state': [10] } clf_grid = GridSearchCV( estimator=DecisionTreeClassifier(), param_grid=params, cv=5, n_jobs=5, verbose=0, ) clf_grid.fit(X_train, y_train) print(accuracy_score(y_test, clf_grid.predict(X_test))) # 0.79"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-18T14:02:01.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2025-02-18T14:02:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-18T14:02:01.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[],"git":{"createdTime":1739887321000,"updatedTime":1739887321000,"contributors":[{"name":"Claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":0.39,"words":117},"filePathRelative":"机器学习/2_1树模型/2_5_3决策树实践_scikitlearn_超参搜索.md","localizedDate":"2025年2月18日","excerpt":"<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">import</span> pandas <span class=\\"token keyword\\">as</span> pd\\n<span class=\\"token keyword\\">from</span> sklearn<span class=\\"token punctuation\\">.</span>model_selection <span class=\\"token keyword\\">import</span> train_test_split\\n<span class=\\"token keyword\\">from</span> sklearn<span class=\\"token punctuation\\">.</span>tree <span class=\\"token keyword\\">import</span> DecisionTreeClassifier<span class=\\"token punctuation\\">,</span> plot_tree\\n<span class=\\"token keyword\\">from</span> sklearn<span class=\\"token punctuation\\">.</span>metrics <span class=\\"token keyword\\">import</span> accuracy_score\\n<span class=\\"token keyword\\">from</span> sklearn<span class=\\"token punctuation\\">.</span>model_selection <span class=\\"token keyword\\">import</span> GridSearchCV\\n\\ndata_all <span class=\\"token operator\\">=</span> pd<span class=\\"token punctuation\\">.</span>read_csv<span class=\\"token punctuation\\">(</span>\\n    <span class=\\"token string\\">'./data/test/titanic.csv'</span><span class=\\"token punctuation\\">,</span> \\n    usecols<span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'Survived'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'Pclass'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'Age'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'SibSp'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'Parch'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'Fare'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'Sex'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'Embarked'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n\\ndata_all <span class=\\"token operator\\">=</span> data_all<span class=\\"token punctuation\\">.</span>dropna<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\ndata_all <span class=\\"token operator\\">=</span> pd<span class=\\"token punctuation\\">.</span>merge<span class=\\"token punctuation\\">(</span>data_all<span class=\\"token punctuation\\">,</span> pd<span class=\\"token punctuation\\">.</span>get_dummies<span class=\\"token punctuation\\">(</span>data_all<span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'Sex'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'Embarked'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> how<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"inner\\"</span><span class=\\"token punctuation\\">,</span> left_index<span class=\\"token operator\\">=</span><span class=\\"token boolean\\">True</span><span class=\\"token punctuation\\">,</span> right_index<span class=\\"token operator\\">=</span><span class=\\"token boolean\\">True</span><span class=\\"token punctuation\\">)</span>\\ndata_all <span class=\\"token operator\\">=</span> data_all<span class=\\"token punctuation\\">.</span>drop<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'Sex'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'Embarked'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> axis<span class=\\"token operator\\">=</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span>\\n\\ndata_y <span class=\\"token operator\\">=</span> data_all<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'Survived'</span><span class=\\"token punctuation\\">]</span>\\ndata_x <span class=\\"token operator\\">=</span> data_all<span class=\\"token punctuation\\">.</span>drop<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'Survived'</span><span class=\\"token punctuation\\">,</span> axis<span class=\\"token operator\\">=</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span>\\n\\n\\nX_train<span class=\\"token punctuation\\">,</span> X_test<span class=\\"token punctuation\\">,</span> y_train<span class=\\"token punctuation\\">,</span> y_test <span class=\\"token operator\\">=</span> train_test_split<span class=\\"token punctuation\\">(</span>data_x<span class=\\"token punctuation\\">,</span> data_y<span class=\\"token punctuation\\">,</span> random_state <span class=\\"token operator\\">=</span> <span class=\\"token number\\">100</span><span class=\\"token punctuation\\">)</span>\\n\\nparams <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token string\\">'criterion'</span><span class=\\"token punctuation\\">:</span>  <span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'gini'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'entropy'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token string\\">'splitter'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'best'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'random'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token string\\">'max_depth'</span><span class=\\"token punctuation\\">:</span>  <span class=\\"token punctuation\\">[</span><span class=\\"token boolean\\">None</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">4</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">6</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">8</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">10</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token string\\">'max_features'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token punctuation\\">[</span><span class=\\"token boolean\\">None</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'sqrt'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'log2'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">0.2</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">0.4</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">0.6</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">0.8</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token string\\">'random_state'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token punctuation\\">[</span><span class=\\"token number\\">10</span><span class=\\"token punctuation\\">]</span>\\n    \\n<span class=\\"token punctuation\\">}</span>\\n\\nclf_grid <span class=\\"token operator\\">=</span> GridSearchCV<span class=\\"token punctuation\\">(</span>\\n    estimator<span class=\\"token operator\\">=</span>DecisionTreeClassifier<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n    param_grid<span class=\\"token operator\\">=</span>params<span class=\\"token punctuation\\">,</span>\\n    cv<span class=\\"token operator\\">=</span><span class=\\"token number\\">5</span><span class=\\"token punctuation\\">,</span>\\n    n_jobs<span class=\\"token operator\\">=</span><span class=\\"token number\\">5</span><span class=\\"token punctuation\\">,</span>\\n    verbose<span class=\\"token operator\\">=</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span>\\n<span class=\\"token punctuation\\">)</span>\\n\\nclf_grid<span class=\\"token punctuation\\">.</span>fit<span class=\\"token punctuation\\">(</span>X_train<span class=\\"token punctuation\\">,</span> y_train<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span>accuracy_score<span class=\\"token punctuation\\">(</span>y_test<span class=\\"token punctuation\\">,</span> clf_grid<span class=\\"token punctuation\\">.</span>predict<span class=\\"token punctuation\\">(</span>X_test<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>  <span class=\\"token comment\\"># 0.79</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"王新宇"},"autoDesc":true}`);export{n as data};
