const r=JSON.parse('{"key":"v-0ba27cff","path":"/%E6%9C%AA%E5%88%86%E7%B1%BB/%E5%89%8D%E7%AB%AF/javaScript/%E5%AE%B9%E5%99%A8%E7%B1%BB%E5%9E%8B/js_typedArray.html","title":"typedArray","lang":"zh-CN","frontmatter":{"description":"typedArray ArrayBuffer不能直接读取, 需要用TypedArray. 为什么这么设置? ArrayBuffer主要是用来做缓存的, 所以这一层不关心具体数据是如何, 只管存和取. TypedArray则是进行具体的操作. 应用 int8Array是将ArrayBuffer中的一个字节当成一个元素,Int16Array则是将ArrayBuffer中的两个字节当成一个元素. 依次类推: 例如: 1)ArrayBuffer中有8个字节,分别为1 2 3 4 5 6 7 8 2)分别根据这个ArrayBuffer创建Uint8,Uint16,和Unit32","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/%E6%9C%AA%E5%88%86%E7%B1%BB/%E5%89%8D%E7%AB%AF/javaScript/%E5%AE%B9%E5%99%A8%E7%B1%BB%E5%9E%8B/js_typedArray.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"typedArray"}],["meta",{"property":"og:description","content":"typedArray ArrayBuffer不能直接读取, 需要用TypedArray. 为什么这么设置? ArrayBuffer主要是用来做缓存的, 所以这一层不关心具体数据是如何, 只管存和取. TypedArray则是进行具体的操作. 应用 int8Array是将ArrayBuffer中的一个字节当成一个元素,Int16Array则是将ArrayBuffer中的两个字节当成一个元素. 依次类推: 例如: 1)ArrayBuffer中有8个字节,分别为1 2 3 4 5 6 7 8 2)分别根据这个ArrayBuffer创建Uint8,Uint16,和Unit32"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-25T13:46:58.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2023-11-25T13:46:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"typedArray\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-25T13:46:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[{"level":2,"title":"应用","slug":"应用","link":"#应用","children":[]},{"level":2,"title":"类型","slug":"类型","link":"#类型","children":[]}],"git":{"createdTime":1700920018000,"updatedTime":1700920018000,"contributors":[{"name":"claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":1.24,"words":373},"filePathRelative":"未分类/前端/javaScript/容器类型/js_typedArray.md","localizedDate":"2023年11月25日","excerpt":"<h1> typedArray</h1>\\n<p><code>ArrayBuffer</code>不能直接读取, 需要用<code>TypedArray</code>.\\n为什么这么设置? <code>ArrayBuffer</code>主要是用来做缓存的, 所以这一层不关心具体数据是如何, 只管存和取. <code>TypedArray</code>则是进行具体的操作.</p>\\n<h2> 应用</h2>\\n<p><code>int8Array</code>是将<code>ArrayBuffer</code>中的一个字节当成一个元素,<code>Int16Array</code>则是将<code>ArrayBuffer</code>中的两个字节当成一个元素. 依次类推:\\n例如:\\n1)<code>ArrayBuffer</code>中有8个字节,分别为<code>1 2 3 4 5 6 7 8</code>\\n2)分别根据这个<code>ArrayBuffer</code>创建Uint8,Uint16,和Unit32</p>","copyright":{"author":"王新宇"},"autoDesc":true}');export{r as data};
