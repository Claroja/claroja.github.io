const n=JSON.parse(`{"key":"v-019964d0","path":"/4%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/6%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/seaborn/2_2displot.html","title":"displot","lang":"zh-CN","frontmatter":{"description":"displot 最佳实践 displot基础 Figure-level方法 分布图像 通过kind控制底层方法 histplot() (with kind=\\"hist\\") kdeplot() (with kind=\\"kde\\") ecdfplot() (with kind=\\"ecdf\\") 布局使用FacetGrid seaborn.displot( data=None, # pandas.DataFrame, numpy.ndarray, mapping, or sequence. *, x=None, # vectors or keys in data. 在x轴绘制 y=None, # vectors or keys in data. 在y轴绘制 hue=None, # vector or key in data, 不同分类用不同颜色表示 row=None, # vectors or keys in data, 不同分类多列展示 col=None, # vectors or keys in data, 不同分类多行展示 weights=None, # vector or key in data, 就散分布时用的权重 kind='hist', # {“hist”, “kde”, “ecdf”}, 分布, 密度, 累积 rug=False, # bool. True: 使用rugplot()绘制 rug_kws=None, # dict. rugplot()的方法 log_scale=None, # bool or number, or pair of bools or numbers. 对数缩放. legend=True, # bool. False: 不显示 palette=None, # string, list, dict, or matplotlib.colors.Colormap. hue所使用的调色盘. string: 传入color_palette(); list和dict对应不同的分类. hue_order=None, # vector of strings. hue的顺序 hue_norm=None, # tuple or matplotlib.colors.Normalize. color=None, # matplotlib color. 当没有hue映射时, 使用. col_wrap=None, # int. 每一行包含的列数, 超过自动换行. row_order=None, # vector of strings. 图行指定顺序. col_order=None, # vector of strings. 图列指定顺序. height=5, # scalar. 每个facet的高度 aspect=1, # scalar. width = aspect * height facet_kws=None, # dict. FacetGrid()的参数 **kwargs )","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/4%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/6%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/seaborn/2_2displot.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"displot"}],["meta",{"property":"og:description","content":"displot 最佳实践 displot基础 Figure-level方法 分布图像 通过kind控制底层方法 histplot() (with kind=\\"hist\\") kdeplot() (with kind=\\"kde\\") ecdfplot() (with kind=\\"ecdf\\") 布局使用FacetGrid seaborn.displot( data=None, # pandas.DataFrame, numpy.ndarray, mapping, or sequence. *, x=None, # vectors or keys in data. 在x轴绘制 y=None, # vectors or keys in data. 在y轴绘制 hue=None, # vector or key in data, 不同分类用不同颜色表示 row=None, # vectors or keys in data, 不同分类多列展示 col=None, # vectors or keys in data, 不同分类多行展示 weights=None, # vector or key in data, 就散分布时用的权重 kind='hist', # {“hist”, “kde”, “ecdf”}, 分布, 密度, 累积 rug=False, # bool. True: 使用rugplot()绘制 rug_kws=None, # dict. rugplot()的方法 log_scale=None, # bool or number, or pair of bools or numbers. 对数缩放. legend=True, # bool. False: 不显示 palette=None, # string, list, dict, or matplotlib.colors.Colormap. hue所使用的调色盘. string: 传入color_palette(); list和dict对应不同的分类. hue_order=None, # vector of strings. hue的顺序 hue_norm=None, # tuple or matplotlib.colors.Normalize. color=None, # matplotlib color. 当没有hue映射时, 使用. col_wrap=None, # int. 每一行包含的列数, 超过自动换行. row_order=None, # vector of strings. 图行指定顺序. col_order=None, # vector of strings. 图列指定顺序. height=5, # scalar. 每个facet的高度 aspect=1, # scalar. width = aspect * height facet_kws=None, # dict. FacetGrid()的参数 **kwargs )"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-21T12:59:55.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2025-02-21T12:59:55.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"displot\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-21T12:59:55.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[{"level":2,"title":"最佳实践","slug":"最佳实践","link":"#最佳实践","children":[]},{"level":2,"title":"displot基础","slug":"displot基础","link":"#displot基础","children":[]}],"git":{"createdTime":1740142795000,"updatedTime":1740142795000,"contributors":[{"name":"Claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":1.08,"words":323},"filePathRelative":"4机器学习/6分析工具/seaborn/2_2displot.md","localizedDate":"2025年2月21日","excerpt":"<h1> displot</h1>\\n<h2> 最佳实践</h2>\\n<h2> displot基础</h2>\\n<ol>\\n<li>Figure-level方法</li>\\n<li>分布图像</li>\\n<li>通过kind控制底层方法\\n<ol>\\n<li>histplot() (with kind=\\"hist\\")</li>\\n<li>kdeplot() (with kind=\\"kde\\")</li>\\n<li>ecdfplot() (with kind=\\"ecdf\\")</li>\\n</ol>\\n</li>\\n<li>布局使用FacetGrid</li>\\n</ol>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code>seaborn<span class=\\"token punctuation\\">.</span>displot<span class=\\"token punctuation\\">(</span>\\n    data<span class=\\"token operator\\">=</span><span class=\\"token boolean\\">None</span><span class=\\"token punctuation\\">,</span>          <span class=\\"token comment\\"># pandas.DataFrame, numpy.ndarray, mapping, or sequence. </span>\\n    <span class=\\"token operator\\">*</span><span class=\\"token punctuation\\">,</span> \\n    x<span class=\\"token operator\\">=</span><span class=\\"token boolean\\">None</span><span class=\\"token punctuation\\">,</span>             <span class=\\"token comment\\"># vectors or keys in data. 在x轴绘制</span>\\n    y<span class=\\"token operator\\">=</span><span class=\\"token boolean\\">None</span><span class=\\"token punctuation\\">,</span>             <span class=\\"token comment\\"># vectors or keys in data. 在y轴绘制 </span>\\n    hue<span class=\\"token operator\\">=</span><span class=\\"token boolean\\">None</span><span class=\\"token punctuation\\">,</span>           <span class=\\"token comment\\"># vector or key in data, 不同分类用不同颜色表示</span>\\n    row<span class=\\"token operator\\">=</span><span class=\\"token boolean\\">None</span><span class=\\"token punctuation\\">,</span>           <span class=\\"token comment\\"># vectors or keys in data, 不同分类多列展示</span>\\n    col<span class=\\"token operator\\">=</span><span class=\\"token boolean\\">None</span><span class=\\"token punctuation\\">,</span>           <span class=\\"token comment\\"># vectors or keys in data, 不同分类多行展示</span>\\n    weights<span class=\\"token operator\\">=</span><span class=\\"token boolean\\">None</span><span class=\\"token punctuation\\">,</span>       <span class=\\"token comment\\"># vector or key in data, 就散分布时用的权重</span>\\n    kind<span class=\\"token operator\\">=</span><span class=\\"token string\\">'hist'</span><span class=\\"token punctuation\\">,</span>        <span class=\\"token comment\\"># {“hist”, “kde”, “ecdf”}, 分布, 密度, 累积</span>\\n    rug<span class=\\"token operator\\">=</span><span class=\\"token boolean\\">False</span><span class=\\"token punctuation\\">,</span>          <span class=\\"token comment\\"># bool. True: 使用rugplot()绘制</span>\\n    rug_kws<span class=\\"token operator\\">=</span><span class=\\"token boolean\\">None</span><span class=\\"token punctuation\\">,</span>       <span class=\\"token comment\\"># dict. rugplot()的方法</span>\\n    log_scale<span class=\\"token operator\\">=</span><span class=\\"token boolean\\">None</span><span class=\\"token punctuation\\">,</span>     <span class=\\"token comment\\"># bool or number, or pair of bools or numbers. 对数缩放.</span>\\n    legend<span class=\\"token operator\\">=</span><span class=\\"token boolean\\">True</span><span class=\\"token punctuation\\">,</span>        <span class=\\"token comment\\"># bool. False: 不显示</span>\\n    palette<span class=\\"token operator\\">=</span><span class=\\"token boolean\\">None</span><span class=\\"token punctuation\\">,</span>       <span class=\\"token comment\\"># string, list, dict, or matplotlib.colors.Colormap. hue所使用的调色盘. string: 传入color_palette(); list和dict对应不同的分类.</span>\\n    hue_order<span class=\\"token operator\\">=</span><span class=\\"token boolean\\">None</span><span class=\\"token punctuation\\">,</span>     <span class=\\"token comment\\"># vector of strings. hue的顺序</span>\\n    hue_norm<span class=\\"token operator\\">=</span><span class=\\"token boolean\\">None</span><span class=\\"token punctuation\\">,</span>      <span class=\\"token comment\\"># tuple or matplotlib.colors.Normalize. </span>\\n    color<span class=\\"token operator\\">=</span><span class=\\"token boolean\\">None</span><span class=\\"token punctuation\\">,</span>         <span class=\\"token comment\\"># matplotlib color. 当没有hue映射时, 使用.</span>\\n    col_wrap<span class=\\"token operator\\">=</span><span class=\\"token boolean\\">None</span><span class=\\"token punctuation\\">,</span>      <span class=\\"token comment\\"># int. 每一行包含的列数, 超过自动换行.</span>\\n    row_order<span class=\\"token operator\\">=</span><span class=\\"token boolean\\">None</span><span class=\\"token punctuation\\">,</span>     <span class=\\"token comment\\"># vector of strings. 图行指定顺序.</span>\\n    col_order<span class=\\"token operator\\">=</span><span class=\\"token boolean\\">None</span><span class=\\"token punctuation\\">,</span>     <span class=\\"token comment\\"># vector of strings. 图列指定顺序.</span>\\n    height<span class=\\"token operator\\">=</span><span class=\\"token number\\">5</span><span class=\\"token punctuation\\">,</span>           <span class=\\"token comment\\"># scalar. 每个facet的高度</span>\\n    aspect<span class=\\"token operator\\">=</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span>           <span class=\\"token comment\\"># scalar. width = aspect * height</span>\\n    facet_kws<span class=\\"token operator\\">=</span><span class=\\"token boolean\\">None</span><span class=\\"token punctuation\\">,</span>     <span class=\\"token comment\\"># dict. FacetGrid()的参数</span>\\n    <span class=\\"token operator\\">**</span>kwargs\\n<span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"王新宇"},"autoDesc":true}`);export{n as data};
