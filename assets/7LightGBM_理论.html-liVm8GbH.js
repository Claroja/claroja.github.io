const e=JSON.parse('{"key":"v-eff6875c","path":"/2%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/1%E7%AE%97%E6%B3%95%E5%8E%9F%E7%90%86/3%E6%A0%91%E6%A8%A1%E5%9E%8B/7LightGBM/7LightGBM_%E7%90%86%E8%AE%BA.html","title":"","lang":"zh-CN","frontmatter":{"description":"LightGBM（Light Gradient Boosting Machine）是一个实现GBDT算法的框架，支持高效率的并行训练，并且具有更快的训练速度、更低的内存消耗、更好的准确率、支持分布式可以快速处理海量数据等优点。 GBDT在每一次迭代的时候，都需要遍历整个训练数据多次。如果把整个训练数据装进内存则会限制训练数据的大小；如果不装进内存，反复地读写训练数据又会消耗非常大的时间。尤其面对工业级海量的数据，普通的GBDT算法是不能满足其需求的。LightGBM提出的主要原因就是为了解决GBDT在海量数据遇到的问题，让GBDT可以更好更快地用于工业实践。 XGBoost的思想:","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/2%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/1%E7%AE%97%E6%B3%95%E5%8E%9F%E7%90%86/3%E6%A0%91%E6%A8%A1%E5%9E%8B/7LightGBM/7LightGBM_%E7%90%86%E8%AE%BA.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:description","content":"LightGBM（Light Gradient Boosting Machine）是一个实现GBDT算法的框架，支持高效率的并行训练，并且具有更快的训练速度、更低的内存消耗、更好的准确率、支持分布式可以快速处理海量数据等优点。 GBDT在每一次迭代的时候，都需要遍历整个训练数据多次。如果把整个训练数据装进内存则会限制训练数据的大小；如果不装进内存，反复地读写训练数据又会消耗非常大的时间。尤其面对工业级海量的数据，普通的GBDT算法是不能满足其需求的。LightGBM提出的主要原因就是为了解决GBDT在海量数据遇到的问题，让GBDT可以更好更快地用于工业实践。 XGBoost的思想:"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-24T12:46:58.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2025-02-24T12:46:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-24T12:46:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[{"level":2,"title":"算法优化","slug":"算法优化","link":"#算法优化","children":[{"level":3,"title":"基于Histogram的决策树算法","slug":"基于histogram的决策树算法","link":"#基于histogram的决策树算法","children":[]},{"level":3,"title":"直方图做差加速","slug":"直方图做差加速","link":"#直方图做差加速","children":[]},{"level":3,"title":"带深度限制的 Leaf-wise 算法","slug":"带深度限制的-leaf-wise-算法","link":"#带深度限制的-leaf-wise-算法","children":[]},{"level":3,"title":"单边梯度采样算法(Gradient-based One-Side Sampling, GOSS)","slug":"单边梯度采样算法-gradient-based-one-side-sampling-goss","link":"#单边梯度采样算法-gradient-based-one-side-sampling-goss","children":[]},{"level":3,"title":"互斥特征捆绑算法","slug":"互斥特征捆绑算法","link":"#互斥特征捆绑算法","children":[]}]},{"level":2,"title":"工程优化","slug":"工程优化","link":"#工程优化","children":[{"level":3,"title":"直接支持类别特征","slug":"直接支持类别特征","link":"#直接支持类别特征","children":[]}]},{"level":2,"title":"支持高效并行","slug":"支持高效并行","link":"#支持高效并行","children":[{"level":3,"title":"特征并行","slug":"特征并行","link":"#特征并行","children":[]},{"level":3,"title":"数据并行","slug":"数据并行","link":"#数据并行","children":[]},{"level":3,"title":"投票并行","slug":"投票并行","link":"#投票并行","children":[]},{"level":3,"title":"Cache命中率优化","slug":"cache命中率优化","link":"#cache命中率优化","children":[]}]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1740401218000,"updatedTime":1740401218000,"contributors":[{"name":"Claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":11.95,"words":3586},"filePathRelative":"2机器学习/1算法原理/3树模型/7LightGBM/7LightGBM_理论.md","localizedDate":"2025年2月24日","excerpt":"<p>LightGBM（Light Gradient Boosting Machine）是一个实现GBDT算法的框架，支持高效率的并行训练，并且具有更快的训练速度、更低的内存消耗、更好的准确率、支持分布式可以快速处理海量数据等优点。</p>\\n<p>GBDT在每一次迭代的时候，都需要遍历整个训练数据多次。如果把整个训练数据装进内存则会限制训练数据的大小；如果不装进内存，反复地读写训练数据又会消耗非常大的时间。尤其面对工业级海量的数据，普通的GBDT算法是不能满足其需求的。LightGBM提出的主要原因就是为了解决GBDT在海量数据遇到的问题，让GBDT可以更好更快地用于工业实践。</p>\\n<p>XGBoost的思想:</p>","copyright":{"author":"王新宇"},"autoDesc":true}');export{e as data};
