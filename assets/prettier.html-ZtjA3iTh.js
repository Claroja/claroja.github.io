import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{r,o,c as i,a as e,b as t,d as s,e as l}from"./app-SnI5rGHA.js";const d={},c=e("h1",{id:"prettier",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#prettier","aria-hidden":"true"},"#"),t(" prettier")],-1),p={id:"安装-官网",tabindex:"-1"},u=e("a",{class:"header-anchor",href:"#安装-官网","aria-hidden":"true"},"#",-1),h={href:"https://prettier.io/docs/en/install.html",target:"_blank",rel:"noopener noreferrer"},_={href:"https://prettier.io/docs/en/index.html",target:"_blank",rel:"noopener noreferrer"},m={id:"配置文件",tabindex:"-1"},v=e("a",{class:"header-anchor",href:"#配置文件","aria-hidden":"true"},"#",-1),b={href:"https://prettier.io/docs/en/configuration.html",target:"_blank",rel:"noopener noreferrer"},g=l(`<ol><li><code>.prettierrc.cjs</code>自定义配置文件, 自己经常使用的配置</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">printWidth</span><span class="token operator">:</span> <span class="token number">180</span><span class="token punctuation">,</span> <span class="token comment">//单行长度</span>
    <span class="token literal-property property">tabWidth</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token comment">//缩进长度</span>
    <span class="token literal-property property">semi</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">//句末使用分号</span>
    <span class="token literal-property property">singleQuote</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">//使用单引号</span>
    <span class="token literal-property property">bracketSpacing</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">//在对象前后添加空格-eg: { foo: bar }</span>
    <span class="token literal-property property">quoteProps</span><span class="token operator">:</span> <span class="token string">&quot;preserve&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">proseWrap</span><span class="token operator">:</span> <span class="token string">&#39;preserve&#39;</span><span class="token punctuation">,</span> <span class="token comment">//不知道怎么翻译</span>
    <span class="token literal-property property">endOfLine</span><span class="token operator">:</span> <span class="token string">&#39;auto&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><code>.prettierignore</code> 不需要prettier处理的文件(类似<code>.gitignore</code>)</li></ol>`,3),k={id:"配置选项",tabindex:"-1"},f=e("a",{class:"header-anchor",href:"#配置选项","aria-hidden":"true"},"#",-1),x={href:"https://prettier.io/docs/en/options.html",target:"_blank",rel:"noopener noreferrer"},y=e("thead",null,[e("tr",null,[e("th",null,"选项"),e("th",null,"默认值"),e("th",null,"解释")])],-1),w=e("tr",null,[e("td",null,"printWidth"),e("td",null,"80"),e("td",null,"默认的行长度")],-1),L=e("tr",null,[e("td",null,"tabWidth"),e("td",null,"2"),e("td",null,"tab转换为space的个数")],-1),j=e("tr",null,[e("td",null,"rangeStart"),e("td",null,"0"),e("td")],-1),q=e("tr",null,[e("td",null,"rangeEnd"),e("td",null,"Infinity"),e("td")],-1),S=e("tr",null,[e("td",null,"useTabs"),e("td",null,"false"),e("td",null,"将tab转换为space")],-1),W=e("tr",null,[e("td",null,"semi"),e("td",null,"true"),e("td",null,"行尾加上分号")],-1),E=e("tr",null,[e("td",null,"singleQuote"),e("td",null,"false"),e("td",null,"使用单引号代替双引号")],-1),N=e("tr",null,[e("td",null,"quoteProps"),e("td",null,'"as-needed"'),e("td",null,'可选值"<as-needed')],-1),C=e("tr",null,[e("td",null,"jsxSingleQuote"),e("td",null,"false"),e("td",null,"jsx中使用单引号代替双引号")],-1),P=e("tr",null,[e("td",null,"trailingComma"),e("td",null,'"es5"'),e("td",null,'可选值"<es5')],-1),B=e("tr",{"foo:":"",bar:""},[e("td",null,"bracketSpacing"),e("td",null,"true"),e("td",null,"对象字面量增加空格, true示例结果{ foo: bar }, false示例结果")],-1),I=e("tr",null,[e("td",null,"jsxBracketSameLine"),e("td",null,"false"),e("td",null,[t("JSX里多行元素的最后一行使用"),e("code",null,">"),t("闭合元素")])],-1),V=e("tr",null,[e("td",null,"arrowParens"),e("td",null,'"always"'),e("td",null,'箭头函数, 单参数时是否使用括号包裹."always":(x) => x, "avoid":x => x')],-1),Q=e("tr",null,[e("td",null,"parser"),e("td",null,"None"),e("td",null,"指定解析器, prettier自动根据文件名识别, 不需要设置")],-1),A=e("tr",null,[e("td",null,"filepath"),e("td",null,"None"),e("td",null,"同上, 指定解析器文件")],-1),O=e("tr",null,[e("td",null,"requirePragma"),e("td",null,"false"),e("td",null,[t("只格式化头部包含特殊注释的文件, 比如"),e("code",null,"/** \\n* @prettier \\n*/")])],-1),T=e("tr",null,[e("td",null,"insertPragma"),e("td",null,"false"),e("td",null,[t("格式化文件后, 在头部添上"),e("code",null,"@format")])],-1),D=e("tr",null,[e("td",null,"proseWrap"),e("td",null,'"preserve"'),e("td",null,'"always"当大于printwith时折叠,"never"不进行折叠,"preserve"不进行任何处理')],-1),F=e("td",null,"htmlWhitespaceSensitivity",-1),J=e("td",null,'"css"',-1),X={href:"https://prettier.io/blog/2018/11/07/1.15.0.html#whitespace-sensitive-formatting",target:"_blank",rel:"noopener noreferrer"},z=e("td",null,"vueIndentScriptAndStyle",-1),G=e("td",null,"false",-1),H=e("code",null,"<script>",-1),K=e("code",null,"<style>",-1),M={href:"https://github.com/prettier/prettier/issues/3888#issuecomment-459521863",target:"_blank",rel:"noopener noreferrer"},R=e("tr",null,[e("td",null,"endOfLine"),e("td",null,'"lf"'),e("td",null,'可选择值"<lf')],-1),U=e("tr",null,[e("td",null,"embeddedLanguageFormatting"),e("td",null,'"auto"'),e("td")],-1),Y={id:"对于printwidth和prosewrap的理解",tabindex:"-1"},Z=e("a",{class:"header-anchor",href:"#对于printwidth和prosewrap的理解","aria-hidden":"true"},"#",-1),$={href:"https://github.com/prettier/prettier/issues/6488",target:"_blank",rel:"noopener noreferrer"},ee=e("code",null,"printWidth",-1),te=e("code",null,"proseWrap",-1),ne=l(`<p>假设有一下文本: 第一行56个字符, 第二行69个字符</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Lorem ipsum dolor sit amet, consectetur adipiscing elit.
Curabitur consectetur maximus risus, sed maximus tellus tincidunt et.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>使用<code>--prose-wrap always</code>配置, 第一行被补充到80个字符(printWidth)输出:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur consectetur
maximus risus, sed maximus tellus tincidunt et.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>使用<code>--prose-wrap never</code>配置, 合并成一行</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur consectetur maximus risus, sed maximus tellus tincidunt et.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用<code>--prose-wrap preserve</code>, 则不进行任何修改</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Lorem ipsum dolor sit amet, consectetur adipiscing elit.
Curabitur consectetur maximus risus, sed maximus tellus tincidunt et.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,8),se={id:"和linters一起使用",tabindex:"-1"},le=e("a",{class:"header-anchor",href:"#和linters一起使用","aria-hidden":"true"},"#",-1),ae={href:"https://prettier.io/docs/en/integrating-with-linters.html",target:"_blank",rel:"noopener noreferrer"},re=e("p",null,"单独安装Linters和Prettier会产生冲突, 因为Linters也会有代码规范, 所以可以将二者结合起来, 就有了:",-1),oe={href:"https://github.com/prettier/eslint-config-prettier",target:"_blank",rel:"noopener noreferrer"},ie=e("code",null,"eslinte",-1),de=e("code",null,"prettier",-1),ce=e("code",null,"eslint-config-prettier",-1),pe=e("li",null,[e("code",null,'@vue/eslint-config-prettier": "^7.0.0"')],-1),ue=e("li",null,[e("code",null,'eslint": "^8.5.0"')],-1),he=e("li",null,[e("code",null,'prettier": "^2.5.1"')],-1),_e=l(`<p>在<code>.eslintrc.cjs</code>中继承<code>@vue/eslint-config-prettier</code>即可, 既将<code>prettier</code>的规则加入到了<code>eslint</code>中, 并且解决了冲突</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string-property property">&quot;extends&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
<span class="token comment">// &quot;plugin:vue/vue3-essential&quot;, //vue3的语法规则</span>
<span class="token comment">// &quot;eslint:recommended&quot;, // eslint的语法规则</span>
<span class="token string">&quot;@vue/eslint-config-prettier&quot;</span> <span class="token comment">//处理和prettier的冲突</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),me={id:"vscode集成",tabindex:"-1"},ve=e("a",{class:"header-anchor",href:"#vscode集成","aria-hidden":"true"},"#",-1),be={href:"https://github.com/prettier/prettier-vscode",target:"_blank",rel:"noopener noreferrer"},ge=e("p",null,[t("vscode已经默认安装了"),e("code",null,"prettier"),t(", 可以在Extensions选项的ENABLED栏中查看")],-1);function ke(fe,xe){const n=r("ExternalLinkIcon");return o(),i("div",null,[c,e("h2",p,[u,t(),e("a",h,[t("安装"),s(n)]),t("&"),e("a",_,[t("官网"),s(n)])]),e("h2",m,[v,t(),e("a",b,[t("配置文件"),s(n)])]),g,e("h3",k,[f,t(),e("a",x,[t("配置选项"),s(n)])]),e("table",null,[y,e("tbody",null,[w,L,j,q,S,W,E,N,C,P,B,I,V,Q,A,O,T,D,e("tr",null,[F,J,e("td",null,[e("a",X,[t("理解"),s(n)])])]),e("tr",null,[z,G,e("td",null,[t("是否对vue的"),H,t("和"),K,t("执行缩进,"),e("a",M,[t("参考"),s(n)])])]),R,U])]),e("h3",Y,[Z,t(),e("a",$,[t("对于"),ee,t("和"),te,t("的理解"),s(n)]),t(":")]),ne,e("h2",se,[le,t(),e("a",ae,[t("和Linters一起使用"),s(n)])]),re,e("ul",null,[e("li",null,[e("a",oe,[t("eslint-config-prettier"),s(n)]),t(", js规范 如果我们仅需要开发js代码, 则需要安装"),ie,t(", "),de,t(", 和"),ce,t(".")]),pe,ue,he]),_e,e("h2",me,[ve,t(),e("a",be,[t("vscode集成"),s(n)])]),ge])}const Le=a(d,[["render",ke],["__file","prettier.html.vue"]]);export{Le as default};
