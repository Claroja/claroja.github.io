const n=JSON.parse('{"key":"v-db12f09a","path":"/4%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/2c%E8%AF%AD%E8%A8%80/1%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/1_6%E5%8F%98%E9%87%8F%E5%92%8C%E5%B8%B8%E9%87%8F.html","title":"","lang":"zh-CN","frontmatter":{"description":"变量 变量在编译时为其分配相应的内存空间 可以通过其名字和地址访问相应内存 声明和定义区别 声明变量不需要建立存储空间，如：extern int a; 定义变量需要建立存储空间，如：int b; 常量 define 1.通过#define定义的常量是自动匹配数据类型的,在编译预处理阶段是宏展开,直接将该值赋给c,也就是说在预处理时变成了float c = 3.1415926 #include &lt;stdio.h&gt; #define PI 3.1415926 int main(void) { \\tint a = 10; \\tconst int b = 10; \\tfloat c = PI; \\tprintf(\\"%d\\\\n\\", a); \\tprintf(\\"%d\\\\n\\", b); \\tprintf(\\"%f\\\\n\\", c); \\tgetchar(); \\treturn 0; }","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/4%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/2c%E8%AF%AD%E8%A8%80/1%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/1_6%E5%8F%98%E9%87%8F%E5%92%8C%E5%B8%B8%E9%87%8F.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:description","content":"变量 变量在编译时为其分配相应的内存空间 可以通过其名字和地址访问相应内存 声明和定义区别 声明变量不需要建立存储空间，如：extern int a; 定义变量需要建立存储空间，如：int b; 常量 define 1.通过#define定义的常量是自动匹配数据类型的,在编译预处理阶段是宏展开,直接将该值赋给c,也就是说在预处理时变成了float c = 3.1415926 #include &lt;stdio.h&gt; #define PI 3.1415926 int main(void) { \\tint a = 10; \\tconst int b = 10; \\tfloat c = PI; \\tprintf(\\"%d\\\\n\\", a); \\tprintf(\\"%d\\\\n\\", b); \\tprintf(\\"%f\\\\n\\", c); \\tgetchar(); \\treturn 0; }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-24T12:46:58.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2025-02-24T12:46:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-24T12:46:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[{"level":2,"title":"变量","slug":"变量","link":"#变量","children":[]},{"level":2,"title":"常量 define","slug":"常量-define","link":"#常量-define","children":[]},{"level":2,"title":"常量const","slug":"常量const","link":"#常量const","children":[]}],"git":{"createdTime":1740401218000,"updatedTime":1740401218000,"contributors":[{"name":"Claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":0.67,"words":201},"filePathRelative":"4编程语言/2c语言/1基础数据类型/1_6变量和常量.md","localizedDate":"2025年2月24日","excerpt":"<h2> 变量</h2>\\n<ol>\\n<li>变量在编译时为其分配相应的内存空间</li>\\n<li>可以通过其名字和地址访问相应内存</li>\\n<li>声明和定义区别\\n声明变量不需要建立存储空间，如：extern int a;\\n定义变量需要建立存储空间，如：int b;</li>\\n</ol>\\n<h2> 常量 define</h2>\\n<p>1.通过<code>#define</code>定义的常量是自动匹配数据类型的,在编译预处理阶段是宏展开,直接将该值赋给c,也就是说在预处理时变成了<code>float c = 3.1415926</code></p>\\n<div class=\\"language-c line-numbers-mode\\" data-ext=\\"c\\"><pre class=\\"language-c\\"><code><span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;stdio.h&gt;</span></span>\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">define</span> <span class=\\"token macro-name\\">PI</span> <span class=\\"token expression\\"><span class=\\"token number\\">3.1415926</span></span></span>\\n<span class=\\"token keyword\\">int</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">void</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token keyword\\">int</span> a <span class=\\"token operator\\">=</span> <span class=\\"token number\\">10</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token keyword\\">const</span> <span class=\\"token keyword\\">int</span> b <span class=\\"token operator\\">=</span> <span class=\\"token number\\">10</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token keyword\\">float</span> c <span class=\\"token operator\\">=</span> PI<span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token function\\">printf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"%d\\\\n\\"</span><span class=\\"token punctuation\\">,</span> a<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token function\\">printf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"%d\\\\n\\"</span><span class=\\"token punctuation\\">,</span> b<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token function\\">printf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"%f\\\\n\\"</span><span class=\\"token punctuation\\">,</span> c<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token function\\">getchar</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token keyword\\">return</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"王新宇"},"autoDesc":true}');export{n as data};
