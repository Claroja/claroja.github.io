const n=JSON.parse(`{"key":"v-117621c0","path":"/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/%E6%88%90%E5%91%98%E6%93%8D%E4%BD%9C/python___getattr__.html","title":"getattr","lang":"zh-CN","frontmatter":{"description":"getattr 当访问不存在的成员时, 触发.比__getattribute__的优先级低, 既如果定义了__getattribute__, 则不会触发__getattr__ 下例中, 当访问不存在的age的时候, 会触发__getattr__方法 class Person(object): def __init__(self, name): self.name = name def __getattr__(self, key): print(\\"getting:{}\\".format(key)) return False person = Person(\\"wang\\") person.name # 'wang' person.age # getting:age getattr(person,\\"name\\") # 'wang' getattr(person,\\"age\\") # getting:age","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/%E6%88%90%E5%91%98%E6%93%8D%E4%BD%9C/python___getattr__.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"getattr"}],["meta",{"property":"og:description","content":"getattr 当访问不存在的成员时, 触发.比__getattribute__的优先级低, 既如果定义了__getattribute__, 则不会触发__getattr__ 下例中, 当访问不存在的age的时候, 会触发__getattr__方法 class Person(object): def __init__(self, name): self.name = name def __getattr__(self, key): print(\\"getting:{}\\".format(key)) return False person = Person(\\"wang\\") person.name # 'wang' person.age # getting:age getattr(person,\\"name\\") # 'wang' getattr(person,\\"age\\") # getting:age"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-25T13:46:58.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2023-11-25T13:46:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"getattr\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-25T13:46:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[],"git":{"createdTime":1700920018000,"updatedTime":1700920018000,"contributors":[{"name":"claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":0.3,"words":91},"filePathRelative":"编程语言/python/成员操作/python___getattr__.md","localizedDate":"2023年11月25日","excerpt":"<h1> <strong>getattr</strong></h1>\\n<p>当访问不存在的成员时, 触发.比<code>__getattribute__</code>的优先级低, 既如果定义了<code>__getattribute__</code>, 则不会触发<code>__getattr__</code></p>\\n<p>下例中, 当访问不存在的<code>age</code>的时候, 会触发<code>__getattr__</code>方法</p>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Person</span><span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">object</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">__init__</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">,</span> name<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n        self<span class=\\"token punctuation\\">.</span>name <span class=\\"token operator\\">=</span> name\\n\\n    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">__getattr__</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">,</span> key<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"getting:{}\\"</span><span class=\\"token punctuation\\">.</span><span class=\\"token builtin\\">format</span><span class=\\"token punctuation\\">(</span>key<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token boolean\\">False</span>\\n\\nperson <span class=\\"token operator\\">=</span> Person<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"wang\\"</span><span class=\\"token punctuation\\">)</span>\\nperson<span class=\\"token punctuation\\">.</span>name  <span class=\\"token comment\\"># 'wang'</span>\\nperson<span class=\\"token punctuation\\">.</span>age  <span class=\\"token comment\\"># getting:age</span>\\n<span class=\\"token builtin\\">getattr</span><span class=\\"token punctuation\\">(</span>person<span class=\\"token punctuation\\">,</span><span class=\\"token string\\">\\"name\\"</span><span class=\\"token punctuation\\">)</span>  <span class=\\"token comment\\"># 'wang'</span>\\n<span class=\\"token builtin\\">getattr</span><span class=\\"token punctuation\\">(</span>person<span class=\\"token punctuation\\">,</span><span class=\\"token string\\">\\"age\\"</span><span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\"># getting:age</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"王新宇"},"autoDesc":true}`);export{n as data};
