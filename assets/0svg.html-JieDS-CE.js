import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as n,o as s,c as l,b as e,d as r,e as o,a as d}from"./app-nD1Z-e8V.js";const i={},h=d(`<h1 id="svg" tabindex="-1"><a class="header-anchor" href="#svg" aria-hidden="true">#</a> svg</h1><p>加载慢是 SVG 的一个缺点。但是 SVG 也有自身的优点，比如它实现了 DOM 接口（比 Canvas 方便），不需要安装第三方扩展。</p><p>一个简单的 SVG 文档由 <code>&lt;svg&gt;</code> 根元素和基本的形状元素构成。另外还有一个g元素，它用来把若干个基本形状编成一个组。</p><p>SVG 是一种<code>XML</code>语言, 不同于<code>html</code>, 注意:</p><ol><li>SVG 的元素和属性必须按标准格式书写，因为 XML 是区分大小写的（这一点和 HTML 不同）</li><li>SVG 里的属性值必须用引号引起来，就算是数值也必须这样做。</li></ol><h2 id="坐标和单位" tabindex="-1"><a class="header-anchor" href="#坐标和单位" aria-hidden="true">#</a> 坐标和单位</h2><p>SVG 使用的坐标系统或者说网格系统，和 Canvas 用的差不多（所有计算机绘图都差不多）以页面的左上角为 (0,0) 坐标点，坐标以像素为单位，x 轴正方向是向右，y 轴正方向是向下。</p><p>SVG 也可以定义绝对大小（比如使用“pt”或“cm”标识维度）同时 SVG 也能使用相对大小，只需给出数字，不标明单位，输出时就会采用用户的单位。</p><div class="language-htm line-numbers-mode" data-ext="htm"><pre class="language-htm"><code>&lt;svg width=&quot;100&quot; height=&quot;100&quot;&gt;…&lt;/svg&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>上面的元素定义了一个 100*100px 的 SVG 画布，这里 1 用户单位等同于 1 屏幕单位。</p><div class="language-htm line-numbers-mode" data-ext="htm"><pre class="language-htm"><code>&lt;svg width=&quot;200&quot; height=&quot;200&quot; viewBox=&quot;0 0 100 100&quot;&gt;…&lt;/svg&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>上面定义的画布尺寸是 200<em>200px。但是，viewBox 属性定义了画布上可以显示的区域：从 (0,0) 点开始，100 宽</em>100 高的区域。这个 100<em>100 的区域，会放到 200</em>200 的画布上显示。于是就形成了放大两倍的效果。</p><h2 id="基本形状" tabindex="-1"><a class="header-anchor" href="#基本形状" aria-hidden="true">#</a> 基本形状</h2>`,13),c={href:"https://developer.mozilla.org/zh-CN/docs/Web/SVG/Tutorial/Basic_Shapes",target:"_blank",rel:"noopener noreferrer"},p=e("h2",{id:"路径",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#路径","aria-hidden":"true"},"#"),r(" 路径")],-1),_={href:"https://developer.mozilla.org/zh-CN/docs/Web/SVG/Tutorial/Paths",target:"_blank",rel:"noopener noreferrer"},u=e("h2",{id:"填充和边框",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#填充和边框","aria-hidden":"true"},"#"),r(" 填充和边框")],-1),m={href:"https://developer.mozilla.org/zh-CN/docs/Web/SVG/Tutorial/Fills_and_Strokes",target:"_blank",rel:"noopener noreferrer"},g=e("p",null,"不是所有的属性都能用 CSS 来设置。上色和填充的部分一般是可以用 CSS 来设置的，比如fill，stroke，stroke-dasharray等，但是不包括下面会提到的渐变和图案等功能。另外，width、height，以及路径的命令等等，都不能用 CSS 设置。",-1),v=e("p",null,"SVG 规范将属性区分成 properties 和其他 attributes，前者是可以用 CSS 设置的，后者不能。",-1),b=e("h2",{id:"渐变",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#渐变","aria-hidden":"true"},"#"),r(" 渐变")],-1),f={href:"https://developer.mozilla.org/zh-CN/docs/Web/SVG/Tutorial/Gradients",target:"_blank",rel:"noopener noreferrer"},S=e("h2",{id:"patterns",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#patterns","aria-hidden":"true"},"#"),r(" Patterns")],-1),V={href:"https://developer.mozilla.org/zh-CN/docs/Web/SVG/Tutorial/Patterns",target:"_blank",rel:"noopener noreferrer"},x=e("h2",{id:"文本",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#文本","aria-hidden":"true"},"#"),r(" 文本")],-1),G={href:"https://developer.mozilla.org/zh-CN/docs/Web/SVG/Tutorial/Texts",target:"_blank",rel:"noopener noreferrer"},z=e("h2",{id:"基础变形-transform",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#基础变形-transform","aria-hidden":"true"},"#"),r(" 基础变形(transform)")],-1),C={href:"https://developer.mozilla.org/zh-CN/docs/Web/SVG/Tutorial/Basic_Transformations",target:"_blank",rel:"noopener noreferrer"},k=e("h2",{id:"剪切和遮罩",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#剪切和遮罩","aria-hidden":"true"},"#"),r(" 剪切和遮罩")],-1),N={href:"https://developer.mozilla.org/zh-CN/docs/Web/SVG/Tutorial/Clipping_and_masking",target:"_blank",rel:"noopener noreferrer"},T=e("h2",{id:"参考",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#参考","aria-hidden":"true"},"#"),r(" 参考")],-1),W=e("ul",null,[e("li",null,"https://developer.mozilla.org/zh-CN/docs/Web/SVG/Tutorial/Introduction"),e("li",null,"https://developer.mozilla.org/zh-CN/docs/Web/SVG/Element"),e("li",null,"https://developer.mozilla.org/zh-CN/docs/Web/API/Document_Object_Model#svg_%E6%8E%A5%E5%8F%A3"),e("li",null,"https://developer.mozilla.org/en-US/docs/Web/API/SVGGeometryElement")],-1);function q(E,B){const t=n("ExternalLinkIcon");return s(),l("div",null,[h,e("p",null,[e("a",c,[r("参考"),o(t)])]),p,e("p",null,[e("a",_,[r("参考"),o(t)])]),u,e("p",null,[e("a",m,[r("参考"),o(t)])]),g,v,b,e("p",null,[e("a",f,[r("参考"),o(t)])]),S,e("p",null,[r("也是一种渐变 "),e("a",V,[r("参考"),o(t)])]),x,e("p",null,[e("a",G,[r("参考"),o(t)])]),z,e("p",null,[e("a",C,[r("参考"),o(t)])]),k,e("p",null,[e("a",N,[r("参考"),o(t)])]),T,W])}const L=a(i,[["render",q],["__file","0svg.html.vue"]]);export{L as default};
