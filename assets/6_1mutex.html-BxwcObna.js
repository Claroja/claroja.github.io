const t=JSON.parse('{"key":"v-5fdb72b8","path":"/2%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/2c/9%E7%BA%BF%E7%A8%8B/6_1mutex.html","title":"","lang":"zh-CN","frontmatter":{"description":"线程同步:按预定的先后次序运行 int pthread_mutex_init(pthread_mutex_t *restrict mutex, const pthread_mutexattr_t *restrict attr); 参1：传出参数，调用时应传 &amp;mutex restrict关键字：所有修改该指针指向内存中内容的操作，只能通过本指针完成。 参2：互斥量属性。是一个传入参数，通常传NULL，选用默认属性(线程间共享)。 可以静态初始化: pthead_mutex_t muetx = PTHREAD_MUTEX_INITIALIZER; 也可以动态初始化: pthread_mutex_init(&amp;mutex, NULL)","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/2%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/2c/9%E7%BA%BF%E7%A8%8B/6_1mutex.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:description","content":"线程同步:按预定的先后次序运行 int pthread_mutex_init(pthread_mutex_t *restrict mutex, const pthread_mutexattr_t *restrict attr); 参1：传出参数，调用时应传 &amp;mutex restrict关键字：所有修改该指针指向内存中内容的操作，只能通过本指针完成。 参2：互斥量属性。是一个传入参数，通常传NULL，选用默认属性(线程间共享)。 可以静态初始化: pthead_mutex_t muetx = PTHREAD_MUTEX_INITIALIZER; 也可以动态初始化: pthread_mutex_init(&amp;mutex, NULL)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-21T14:08:45.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2025-02-21T14:08:45.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-21T14:08:45.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[],"git":{"createdTime":1740146925000,"updatedTime":1740146925000,"contributors":[{"name":"Claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":0.83,"words":248},"filePathRelative":"2编程语言/2c/9线程/6_1mutex.md","localizedDate":"2025年2月21日","excerpt":"<p>线程同步:按预定的先后次序运行</p>\\n<p><code>int pthread_mutex_init(pthread_mutex_t *restrict mutex, const pthread_mutexattr_t *restrict attr);</code>\\n参1：传出参数，调用时应传 &amp;mutex\\nrestrict关键字：所有修改该指针指向内存中内容的操作，只能通过本指针完成。\\n参2：互斥量属性。是一个传入参数，通常传NULL，选用默认属性(线程间共享)。</p>\\n<p>可以静态初始化:\\n<code>pthead_mutex_t muetx = PTHREAD_MUTEX_INITIALIZER;</code>\\n也可以动态初始化:\\n<code>pthread_mutex_init(&amp;mutex, NULL)</code></p>","copyright":{"author":"王新宇"},"autoDesc":true}');export{t as data};
