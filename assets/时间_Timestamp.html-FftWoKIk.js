const t=JSON.parse('{"key":"v-1cc3914c","path":"/2%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/3%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/2pandas/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%97%B6%E9%97%B4_Timestamp.html","title":"Timestamp","lang":"zh-CN","frontmatter":{"description":"Timestamp 通常时间戳是指用数字表示的时间, 在pandas里, 时间戳就是日常的时间表示. 而pandas将日常时间戳命名为纪元(epoch)时间戳. 创建pandas时间戳 当传入标量时, pd.to_datetime和pd.Timestamp作用相同, pd.to_datetime的优势是有format参数. pd.to_datetime(\\"2010/11/12\\") pd.Timestamp(\\"2010/11/12\\") 字符串转换pandas时间戳 pd.to_datetime(pd.Series([\\"Jul 31, 2009\\", \\"Jan 10, 2010\\", None])) pd.to_datetime([\\"2005/11/23\\", \\"2010/12/31\\"]) pd.to_datetime(\\"2010/11/12\\", format=\\"%Y/%m/%d\\") format参数具体可参考strftime-and-strptime 纪元(epoch)时间戳转换pandas时间戳 pandas时间戳转纪元时间戳 pd.to_datetime([1349720105, 1349806505, 1349892905, 1349979305, 1350065705], unit=\\"s\\") pd.to_datetime([1349720105100, 1349720105200, 1349720105300, 1349720105400, 1349720105500], unit=\\"ms\\",) 纪元时间戳转pandas时间戳 stamps = pd.date_range(\\"2012-10-08 18:15:05\\", periods=4, freq=\\"D\\") (stamps - pd.Timestamp(\\"1970-01-01\\")) // pd.Timedelta(\\"1s\\")","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/2%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/3%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/2pandas/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%97%B6%E9%97%B4_Timestamp.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"Timestamp"}],["meta",{"property":"og:description","content":"Timestamp 通常时间戳是指用数字表示的时间, 在pandas里, 时间戳就是日常的时间表示. 而pandas将日常时间戳命名为纪元(epoch)时间戳. 创建pandas时间戳 当传入标量时, pd.to_datetime和pd.Timestamp作用相同, pd.to_datetime的优势是有format参数. pd.to_datetime(\\"2010/11/12\\") pd.Timestamp(\\"2010/11/12\\") 字符串转换pandas时间戳 pd.to_datetime(pd.Series([\\"Jul 31, 2009\\", \\"Jan 10, 2010\\", None])) pd.to_datetime([\\"2005/11/23\\", \\"2010/12/31\\"]) pd.to_datetime(\\"2010/11/12\\", format=\\"%Y/%m/%d\\") format参数具体可参考strftime-and-strptime 纪元(epoch)时间戳转换pandas时间戳 pandas时间戳转纪元时间戳 pd.to_datetime([1349720105, 1349806505, 1349892905, 1349979305, 1350065705], unit=\\"s\\") pd.to_datetime([1349720105100, 1349720105200, 1349720105300, 1349720105400, 1349720105500], unit=\\"ms\\",) 纪元时间戳转pandas时间戳 stamps = pd.date_range(\\"2012-10-08 18:15:05\\", periods=4, freq=\\"D\\") (stamps - pd.Timestamp(\\"1970-01-01\\")) // pd.Timedelta(\\"1s\\")"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-24T12:46:58.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2025-02-24T12:46:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Timestamp\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-24T12:46:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[{"level":2,"title":"创建pandas时间戳","slug":"创建pandas时间戳","link":"#创建pandas时间戳","children":[]},{"level":2,"title":"时间戳使用","slug":"时间戳使用","link":"#时间戳使用","children":[]}],"git":{"createdTime":1740401218000,"updatedTime":1740401218000,"contributors":[{"name":"Claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":0.77,"words":232},"filePathRelative":"2机器学习/3分析工具/2pandas/数据类型/时间_Timestamp.md","localizedDate":"2025年2月24日","excerpt":"<h1> Timestamp</h1>\\n<p>通常时间戳是指用数字表示的时间, 在pandas里, 时间戳就是日常的时间表示. 而pandas将日常时间戳命名为纪元(epoch)时间戳.</p>\\n<h2> 创建pandas时间戳</h2>\\n<ol>\\n<li>\\n<p>当传入标量时, <code>pd.to_datetime</code>和<code>pd.Timestamp</code>作用相同, <code>pd.to_datetime</code>的优势是有<code>format</code>参数.</p>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code>pd<span class=\\"token punctuation\\">.</span>to_datetime<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"2010/11/12\\"</span><span class=\\"token punctuation\\">)</span>\\npd<span class=\\"token punctuation\\">.</span>Timestamp<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"2010/11/12\\"</span><span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p>字符串转换pandas时间戳</p>\\n<ol>\\n<li><code>pd.to_datetime(pd.Series([\\"Jul 31, 2009\\", \\"Jan 10, 2010\\", None]))</code></li>\\n<li><code>pd.to_datetime([\\"2005/11/23\\", \\"2010/12/31\\"])</code></li>\\n<li><code>pd.to_datetime(\\"2010/11/12\\", format=\\"%Y/%m/%d\\")</code></li>\\n</ol>\\n<p><code>format</code>参数具体可参考<a href=\\"https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">strftime-and-strptime</a></p>\\n</li>\\n<li>\\n<p>纪元(epoch)时间戳转换pandas时间戳</p>\\n<ol>\\n<li>pandas时间戳转纪元时间戳\\n<ol>\\n<li><code>pd.to_datetime([1349720105, 1349806505, 1349892905, 1349979305, 1350065705], unit=\\"s\\")</code></li>\\n<li><code>pd.to_datetime([1349720105100, 1349720105200, 1349720105300, 1349720105400, 1349720105500], unit=\\"ms\\",)</code></li>\\n</ol>\\n</li>\\n<li>纪元时间戳转pandas时间戳\\n<ol>\\n<li><code>stamps = pd.date_range(\\"2012-10-08 18:15:05\\", periods=4, freq=\\"D\\")</code></li>\\n<li><code>(stamps - pd.Timestamp(\\"1970-01-01\\")) // pd.Timedelta(\\"1s\\")</code></li>\\n</ol>\\n</li>\\n</ol>\\n</li>\\n</ol>","copyright":{"author":"王新宇"},"autoDesc":true}');export{t as data};
