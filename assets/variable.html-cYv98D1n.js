import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,e}from"./app-yeyEmHfz.js";const t={},o=e(`<h1 id="variable" tabindex="-1"><a class="header-anchor" href="#variable" aria-hidden="true">#</a> variable</h1><h2 id="变量" tabindex="-1"><a class="header-anchor" href="#变量" aria-hidden="true">#</a> 变量</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 1. 定义变量</span>
<span class="token keyword">let</span> myname <span class="token operator">=</span> <span class="token string">&#39;wang&#39;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>myname<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 2. 声明变量的特殊情况</span>
<span class="token comment">// 3.1 只声明不赋值 结果是？  程序也不知道里面存的是啥 所以结果是 undefined  未定义的</span>
<span class="token keyword">let</span> sex<span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sex<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// undefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="变量类型" tabindex="-1"><a class="header-anchor" href="#变量类型" aria-hidden="true">#</a> 变量类型</h2><p>7中基础数据类型</p><table><thead><tr><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>Number</td><td>An integer or floating point number. For example: 42 or 3.14159.</td></tr><tr><td>BigInt</td><td>An integer with arbitrary precision. For example: 9007199254740992n.</td></tr><tr><td>String</td><td>A sequence of characters that represent a text value. For example: &quot;Howdy&quot;</td></tr><tr><td>Boolean.</td><td>true and false.</td></tr><tr><td>null</td><td>A special keyword denoting a null value. (Because JavaScript is case-sensitive, null is not the same as Null, NULL, or any other variant.)</td></tr><tr><td>undefined</td><td>A top-level property whose value is not defined.</td></tr><tr><td>Symbol (new in ECMAScript 2015)</td><td>A data type whose instances are unique and immutable.</td></tr></tbody></table><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">typeof</span> <span class="token string">&quot;&quot;</span>                  <span class="token comment">// 返回 &quot;string&quot;</span>
<span class="token keyword">typeof</span> <span class="token string">&quot;Bill&quot;</span>              <span class="token comment">// 返回 &quot;string&quot;**</span>
<span class="token keyword">typeof</span> <span class="token number">0</span>                   <span class="token comment">// 返回 &quot;number&quot;</span>
<span class="token keyword">typeof</span> <span class="token number">314</span>                 <span class="token comment">// 返回 &quot;number&quot;</span>
<span class="token keyword">typeof</span> <span class="token boolean">true</span>				   <span class="token comment">// 返回 &quot;boolean&quot;</span>
<span class="token keyword">var</span> person<span class="token punctuation">;</span> <span class="token keyword">typeof</span> person<span class="token punctuation">;</span>   <span class="token comment">// 值是 undefined，类型是 undefined</span>
<span class="token keyword">typeof</span> <span class="token keyword">undefined</span>              <span class="token comment">// undefined</span>
<span class="token keyword">typeof</span> <span class="token keyword">null</span>                   <span class="token comment">// object</span>
<span class="token keyword">null</span> <span class="token operator">===</span> <span class="token keyword">undefined</span>            <span class="token comment">// false</span>
<span class="token keyword">null</span> <span class="token operator">==</span> <span class="token keyword">undefined</span>             <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="typeof" tabindex="-1"><a class="header-anchor" href="#typeof" aria-hidden="true">#</a> typeof</h2><p>typeof是关键字, 不是方法</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> num <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> num<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// number</span>
<span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;pink&#39;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// string</span>
<span class="token keyword">var</span> flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> flag<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// boolean</span>
<span class="token keyword">var</span> vari <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> vari<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// undefined</span>
<span class="token keyword">var</span> timer <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> timer<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// object</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>参考: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Grammar_and_types</p>`,11),p=[o];function c(l,i){return s(),a("div",null,p)}const u=n(t,[["render",c],["__file","variable.html.vue"]]);export{u as default};
