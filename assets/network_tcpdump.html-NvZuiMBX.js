const t=JSON.parse('{"key":"v-2f039025","path":"/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/%E9%80%9A%E7%94%A8%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/network_tcpdump.html","title":"tcpdump","lang":"zh-CN","frontmatter":{"description":"tcpdump 类似于windows下面的wireshark软件. syntax tcpdump [option] [proto] [direction] [type] option: 可选参数 proto: 根据协议类型过滤, 如tcp, udp, icmp, ip, ip6, arp, rarp,ether,wlan, fddi, tr, decnet direction: 根据流向过滤, 如src, dst, 还可以加入逻辑判断src or dst type: 根据类型过滤, 如host, net, port, portrange","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/%E9%80%9A%E7%94%A8%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/network_tcpdump.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"tcpdump"}],["meta",{"property":"og:description","content":"tcpdump 类似于windows下面的wireshark软件. syntax tcpdump [option] [proto] [direction] [type] option: 可选参数 proto: 根据协议类型过滤, 如tcp, udp, icmp, ip, ip6, arp, rarp,ether,wlan, fddi, tr, decnet direction: 根据流向过滤, 如src, dst, 还可以加入逻辑判断src or dst type: 根据类型过滤, 如host, net, port, portrange"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://claroja.github.io/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-25T13:46:58.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"tcpdump"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2023-11-25T13:46:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"tcpdump\\",\\"image\\":[\\"https://claroja.github.io/\\"],\\"dateModified\\":\\"2023-11-25T13:46:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[{"level":2,"title":"syntax","slug":"syntax","link":"#syntax","children":[]},{"level":2,"title":"输出结果格式","slug":"输出结果格式","link":"#输出结果格式","children":[{"level":3,"title":"Flags标识符","slug":"flags标识符","link":"#flags标识符","children":[]}]},{"level":2,"title":"常用过滤规则","slug":"常用过滤规则","link":"#常用过滤规则","children":[{"level":3,"title":"type与direction参数","slug":"type与direction参数","link":"#type与direction参数","children":[]},{"level":3,"title":"proto协议过滤","slug":"proto协议过滤","link":"#proto协议过滤","children":[]},{"level":3,"title":"option参数","slug":"option参数","link":"#option参数","children":[]},{"level":3,"title":"数据包头部控制","slug":"数据包头部控制","link":"#数据包头部控制","children":[]},{"level":3,"title":"过滤指定网卡数据包","slug":"过滤指定网卡数据包","link":"#过滤指定网卡数据包","children":[]},{"level":3,"title":"过滤特定流向的数据包","slug":"过滤特定流向的数据包","link":"#过滤特定流向的数据包","children":[]},{"level":3,"title":"其他常用的一些参数#","slug":"其他常用的一些参数","link":"#其他常用的一些参数","children":[]}]},{"level":2,"title":"过滤规则组合","slug":"过滤规则组合","link":"#过滤规则组合","children":[{"level":3,"title":"逻辑组合","slug":"逻辑组合","link":"#逻辑组合","children":[]},{"level":3,"title":"条件判断","slug":"条件判断","link":"#条件判断","children":[]}]},{"level":2,"title":"特殊过滤规则","slug":"特殊过滤规则","link":"#特殊过滤规则","children":[{"level":3,"title":"通过tcpflags标志位过滤","slug":"通过tcpflags标志位过滤","link":"#通过tcpflags标志位过滤","children":[]},{"level":3,"title":"通过包大小进行过滤","slug":"通过包大小进行过滤","link":"#通过包大小进行过滤","children":[]},{"level":3,"title":"过滤指定网关的数据","slug":"过滤指定网关的数据","link":"#过滤指定网关的数据","children":[]},{"level":3,"title":"过滤广播和多播","slug":"过滤广播和多播","link":"#过滤广播和多播","children":[]}]},{"level":2,"title":"实战","slug":"实战","link":"#实战","children":[{"level":3,"title":"抓取HTTP的POST请求","slug":"抓取http的post请求","link":"#抓取http的post请求","children":[]},{"level":3,"title":"其他常用","slug":"其他常用","link":"#其他常用","children":[]}]}],"git":{"createdTime":1700920018000,"updatedTime":1700920018000,"contributors":[{"name":"claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":10.11,"words":3033},"filePathRelative":"编程基础/通用知识/网络/network_tcpdump.md","localizedDate":"2023年11月25日","excerpt":"<h1> tcpdump</h1>\\n<p>类似于windows下面的wireshark软件.</p>\\n<h2> syntax</h2>\\n<p>tcpdump [option] [proto] [direction] [type]</p>\\n<ul>\\n<li>option: 可选参数</li>\\n<li>proto: 根据协议类型过滤, 如<code>tcp, udp, icmp, ip, ip6, arp, rarp,ether,wlan, fddi, tr, decnet</code></li>\\n<li>direction: 根据流向过滤, 如<code>src, dst</code>, 还可以加入逻辑判断<code>src or dst</code></li>\\n<li>type: 根据类型过滤, 如<code>host, net, port, portrange</code></li>\\n</ul>","copyright":{"author":"王新宇"},"autoDesc":true}');export{t as data};
