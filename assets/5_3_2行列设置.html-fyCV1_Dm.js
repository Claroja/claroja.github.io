import{_ as s}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as a,c as n,e}from"./app-jdLxCr9I.js";const t="/assets/1-Oj4gTzNj.png",i="/assets/2-Ii4kgW3H.png",p={},l=e(`<h1 id="grid行列设置" tabindex="-1"><a class="header-anchor" href="#grid行列设置" aria-hidden="true">#</a> grid行列设置</h1><h2 id="grid-template-columns" tabindex="-1"><a class="header-anchor" href="#grid-template-columns" aria-hidden="true">#</a> grid-template-columns</h2><p>指定列数以及每列的宽度.</p><p>该属性接受一个或多个非负CSS长度值，这些值的个数就是网格容器的列数，每个值表示每列（即每个网格轨道）的宽度。</p><p>下例中, 容器是三列，每列宽 400px。由于网格容器有四个子元素，而我们只给网格指定了三列，所以当网格容器中的网格项数量超过三个时，CSS 会将其他网格项放到新行中以保持容器的布局。如：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.container</span> <span class="token punctuation">{</span>
    <span class="token property">display</span><span class="token punctuation">:</span> grid<span class="token punctuation">;</span>
    <span class="token property">grid-template-columns</span><span class="token punctuation">:</span> 400px 400px 400px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+t+`" alt="alt text" tabindex="0" loading="lazy"><figcaption>alt text</figcaption></figure><h2 id="grid-template-rows" tabindex="-1"><a class="header-anchor" href="#grid-template-rows" aria-hidden="true">#</a> grid-template-rows</h2><p>与 grid-template-columns 属性不同，grid-template-rows并没有指定网格容器的行数，而只用来设置每行的高度。这是因为每当网格项换行时，网格容器都会隐式创建一个新行。因此，我们无法使用 grid-template-rows 属性来控制网格的行数。</p><p>该属性接受一个或多个非负CSS 长度值，其中每个值表示网格容器中每一行的高度，从第一行到最后一行。</p><p>如下列, 网格容器的第一行高度为 100px，第二行高度为 200px。我们仅设置了网格容器中前两行的高度。如果向网格容器中添加更多的网格项，那么那些隐式创建的行的高度将不是由 grid-template-rows 属性决定，而由其内容的大小决定。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.container</span> <span class="token punctuation">{</span>
    <span class="token property">display</span><span class="token punctuation">:</span> grid<span class="token punctuation">;</span>
    <span class="token property">grid-template-columns</span><span class="token punctuation">:</span> 400px 400px 400px<span class="token punctuation">;</span>
    <span class="token property">grid-template-rows</span><span class="token punctuation">:</span> 100px 200px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+i+`" alt="alt text" tabindex="0" loading="lazy"><figcaption>alt text</figcaption></figure><h2 id="网格线名称" tabindex="-1"><a class="header-anchor" href="#网格线名称" aria-hidden="true">#</a> 网格线名称</h2><p>grid-template-columns 和 grid-template-rows 属性还可以使用方括号来指定每一条网格线的名字，方便引用.</p><p>下例中, 定义了一个 3 行 4 列的网格，其中 one、two、three、four是列网格线的名称，five、six、seven、eight 是行网格线的名称。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.container</span><span class="token punctuation">{</span>
    <span class="token property">grid-template-columns</span><span class="token punctuation">:</span> [one] 40px [two] 50px [three] auto [four]<span class="token punctuation">;</span>
    <span class="token property">grid-template-rows</span><span class="token punctuation">:</span> [five] 25% [six] 100px [seven] auto [eight]<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2><ol><li>https://zhangqiang.work/lab/css_layout_grid/</li><li>https://www.toutiao.com/article/7173980850827117096/</li><li>https://www.zhangxinxu.com/wordpress/2018/11/display-grid-css-css3/</li></ol>`,19),c=[l];function o(r,d){return a(),n("div",null,c)}const g=s(p,[["render",o],["__file","5_3_2行列设置.html.vue"]]);export{g as default};
