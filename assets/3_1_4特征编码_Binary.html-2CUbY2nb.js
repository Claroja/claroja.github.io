import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as t,o,c,a as n,b as s,d as i,e as p}from"./app-jdLxCr9I.js";const l={},r=n("h1",{id:"二进制编码-binaryencoder",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#二进制编码-binaryencoder","aria-hidden":"true"},"#"),s(" 二进制编码(BinaryEncoder)")],-1),d=n("p",null,"本质上是利用二进制对ID进行哈希映射，最终得到0/1特征向量，且维数少于独热编码，节省存储空间。",-1),u=n("h2",{id:"pandas",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#pandas","aria-hidden":"true"},"#"),s(" pandas")],-1),k={id:"category-encoders",tabindex:"-1"},m=n("a",{class:"header-anchor",href:"#category-encoders","aria-hidden":"true"},"#",-1),_={href:"https://contrib.scikit-learn.org/category_encoders/index.html",target:"_blank",rel:"noopener noreferrer"},h=p(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>
<span class="token keyword">import</span> category_encoders <span class="token keyword">as</span> ce
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
data <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token string">&#39;BloodType&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;AB&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;O&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

ce<span class="token punctuation">.</span>BinaryEncoder<span class="token punctuation">(</span>cols<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;BloodType&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>data<span class="token punctuation">)</span>

<span class="token comment">#    BloodType_0  BloodType_1  BloodType_2</span>
<span class="token comment"># 0            0            0            1</span>
<span class="token comment"># 1            0            1            0</span>
<span class="token comment"># 2            0            1            1</span>
<span class="token comment"># 3            1            0            0</span>
<span class="token comment"># 4            1            0            1</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2><ol><li>https://datascience.stackexchange.com/questions/39317/difference-between-ordinalencoder-and-labelencoder</li><li>https://www.cnblogs.com/dangui/p/15836197.html</li></ol>`,3);function v(b,y){const a=t("ExternalLinkIcon");return o(),c("div",null,[r,d,u,n("h2",k,[m,s(),n("a",_,[s("category_encoders"),i(a)])]),h])}const B=e(l,[["render",v],["__file","3_1_4特征编码_Binary.html.vue"]]);export{B as default};
