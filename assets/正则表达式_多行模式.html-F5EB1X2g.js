const e=JSON.parse('{"key":"v-79d7295e","path":"/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/%E9%80%9A%E7%94%A8%E7%9F%A5%E8%AF%86/%E5%AD%97%E7%AC%A6%E4%B8%B2/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F_%E5%A4%9A%E8%A1%8C%E6%A8%A1%E5%BC%8F.html","title":"多行模式","lang":"zh-CN","frontmatter":{"description":"多行模式 Python 的 re 模块内置函数几乎都有一个 flags 参数, 其中有两个模式：单行（re.DOTALL, 或者re.S）和多行（re.MULTILINE, 或者re.M）模式。 单行模式突破换行符 \\\\n 的阻碍，将匹配视野扩大到整个字符串 多行模式实现换行符 \\\\n 的分隔，将匹配视野缩小到一行之内，并且按行分别匹配。 多行单行的概念 新建一个文件，名字叫 a.txt ，内容是： cat dog","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/%E9%80%9A%E7%94%A8%E7%9F%A5%E8%AF%86/%E5%AD%97%E7%AC%A6%E4%B8%B2/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F_%E5%A4%9A%E8%A1%8C%E6%A8%A1%E5%BC%8F.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"多行模式"}],["meta",{"property":"og:description","content":"多行模式 Python 的 re 模块内置函数几乎都有一个 flags 参数, 其中有两个模式：单行（re.DOTALL, 或者re.S）和多行（re.MULTILINE, 或者re.M）模式。 单行模式突破换行符 \\\\n 的阻碍，将匹配视野扩大到整个字符串 多行模式实现换行符 \\\\n 的分隔，将匹配视野缩小到一行之内，并且按行分别匹配。 多行单行的概念 新建一个文件，名字叫 a.txt ，内容是： cat dog"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-25T13:46:58.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2023-11-25T13:46:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"多行模式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-25T13:46:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[{"level":2,"title":"多行单行的概念","slug":"多行单行的概念","link":"#多行单行的概念","children":[]},{"level":2,"title":"普通模式","slug":"普通模式","link":"#普通模式","children":[]},{"level":2,"title":"单行模式","slug":"单行模式","link":"#单行模式","children":[]},{"level":2,"title":"多行模式","slug":"多行模式-1","link":"#多行模式-1","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1700920018000,"updatedTime":1700920018000,"contributors":[{"name":"claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":3.39,"words":1017},"filePathRelative":"编程基础/通用知识/字符串/正则表达式_多行模式.md","localizedDate":"2023年11月25日","excerpt":"<h1> 多行模式</h1>\\n<p>Python 的 re 模块内置函数几乎都有一个 flags 参数, 其中有两个模式：单行（re.DOTALL, 或者re.S）和多行（re.MULTILINE, 或者re.M）模式。</p>\\n<p>单行模式突破换行符 \\\\n 的阻碍，将匹配视野扩大到整个字符串\\n多行模式实现换行符 \\\\n 的分隔，将匹配视野缩小到一行之内，并且按行分别匹配。</p>\\n<h2> 多行单行的概念</h2>\\n<p>新建一个文件，名字叫 a.txt ，内容是：</p>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>cat\\ndog\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"王新宇"},"autoDesc":true}');export{e as data};
