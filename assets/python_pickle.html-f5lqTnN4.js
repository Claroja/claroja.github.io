import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{r,o as a,c as i,a as e,b as c,d as n,e as l}from"./app-XqA98pG8.js";const s={},p=l('<h1 id="pickle" tabindex="-1"><a class="header-anchor" href="#pickle" aria-hidden="true">#</a> pickle</h1><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h2><p>pickle模块实现了用于对Python对象结构进行序列化和反序列化的二进制协议。“Pickling”是将Python对象转换为字节流的过程，“unpickling”是反向操作，由此字节流二进制文件或字节对象）转换回对象结构。</p><h2 id="模块方法" tabindex="-1"><a class="header-anchor" href="#模块方法" aria-hidden="true">#</a> 模块方法</h2><p>pickle.dump(obj, file, protocol=None, *, fix_imports=True) 将obj以二进制形式写入file-object文件 pickle.dumps(obj, protocol=None, *, fix_imports=True) 将obj编译为二进制对象 pickle.load(file, *, fix_imports=True, encoding=&quot;ASCII&quot;, errors=&quot;strict&quot;) dump的反向操作 pickle.loads(bytes_object, *, fix_imports=True, encoding=&quot;ASCII&quot;, errors=&quot;strict&quot;) dumps的反向操作</p>',5),d={href:"http://blog.csdn.net/claroja/article/details/72465703",target:"_blank",rel:"noopener noreferrer"};function h(u,_){const o=r("ExternalLinkIcon");return a(),i("div",null,[p,e("p",null,[e("a",d,[c("python读写序列（pickle）"),n(o)])])])}const m=t(s,[["render",h],["__file","python_pickle.html.vue"]]);export{m as default};
