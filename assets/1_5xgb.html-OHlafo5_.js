import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as e,o,c as p,b as n,d as s,e as i,a as c}from"./app-nD1Z-e8V.js";const l={},r=n("h1",{id:"ctr",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#ctr","aria-hidden":"true"},"#"),s(" ctr")],-1),u=n("p",null,"Click Through Rate(CTR), 计算公式为：",-1),d=n("p",null,"CTR = 点击广告的次数 / 广告展示的次数",-1),k=n("h2",{id:"数据集介绍",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#数据集介绍","aria-hidden":"true"},"#"),s(" 数据集介绍")],-1),m={href:"https://www.kaggle.com/datasets/gauravduttakiit/clickthrough-rate-prediction?select=new_ad.csv",target:"_blank",rel:"noopener noreferrer"},v=c(`<ol><li>Daily Time Spent on Site: 用户在网站上花费的时间段(timespan)</li><li>Age: 用户的年龄</li><li>Area Income: 该区域(area)用户的平均收入</li><li>Daily Internet Usage: 每天用户使用网络的时长</li><li>Ad Topic Line: 广告的标题</li><li>City: 用户所在城市</li><li>Gender: 用户性别</li><li>Country: 用户所在国家</li><li>Timestamp: 用户访问页面的时间戳</li><li>Clicked on Ad: 是否点击广告, 1表示点击, 0表示未点击</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">import</span> LabelEncoder
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>model_selection <span class="token keyword">import</span> train_test_split
<span class="token keyword">from</span> xgboost <span class="token keyword">import</span> XGBClassifier <span class="token keyword">as</span> xgb
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">import</span> accuracy_score

df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&#39;./data/ctr/ad_10000records.csv&#39;</span><span class="token punctuation">)</span>

df<span class="token punctuation">[</span><span class="token string">&quot;Gender&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> LabelEncoder<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&quot;Gender&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

x <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&#39;Daily Time Spent on Site&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Age&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Area Income&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Daily Internet Usage&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Gender&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span>

<span class="token comment"># Assigning the final variable as the target variable</span>
y<span class="token operator">=</span>df<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">]</span>

<span class="token comment"># Using train test split to split the dataset</span>
x_train<span class="token punctuation">,</span>x_test<span class="token punctuation">,</span>y_train<span class="token punctuation">,</span>y_test<span class="token operator">=</span>train_test_split<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>test_size<span class="token operator">=</span><span class="token number">0.2</span><span class="token punctuation">,</span>random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span>

<span class="token comment"># XGBoostClassifier model</span>
model <span class="token operator">=</span> xgb<span class="token punctuation">(</span>random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span>

<span class="token comment"># Training the model</span>
model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>x_train<span class="token punctuation">,</span> y_train<span class="token punctuation">)</span>

<span class="token comment"># Predicting test dataset values with the model</span>
y_pred <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>x_test<span class="token punctuation">)</span>

<span class="token comment"># Accuracy check of the model prediction</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;The model accuracy is&quot;</span><span class="token punctuation">,</span> accuracy_score<span class="token punctuation">(</span>y_test<span class="token punctuation">,</span>y_pred<span class="token punctuation">)</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2><ol><li>https://www.geeksforgeeks.org/click-through-rate-prediction/</li><li>https://statso.io/click-through-rate-analysis-case-study/</li><li>https://www.kaggle.com/datasets/gauravduttakiit/clickthrough-rate-prediction?select=new_ad.csv</li><li>https://thecleverprogrammer.com/2023/01/16/ads-click-through-rate-prediction-using-python/</li><li>https://pythonrepo.com/repo/xue-pai-FuxiCTR</li></ol>`,4);function h(_,b){const a=e("ExternalLinkIcon");return o(),p("div",null,[r,u,d,k,n("p",null,[s("数据"),n("a",m,[s("下载地址"),i(a)]),s(", 字段解释:")]),v])}const f=t(l,[["render",h],["__file","1_5xgb.html.vue"]]);export{f as default};
