const n=JSON.parse(`{"key":"v-effb2c52","path":"/%E6%9C%AA%E5%88%86%E7%B1%BB/%E5%90%8E%E7%AB%AF/flask/flask_jwt/flask_jwt_fresh.html","title":"jwt_fresh","lang":"zh-CN","frontmatter":{"description":"jwt_fresh 如果为True, 只能让标记为\\"新鲜\\"的授权token访问，该参数要结合create_access_token来使用，当我们创建access_token时，有一个可选参数为fresh如果我们把它设为True,则代表它是\\"新鲜\\"token。默认为False。 一个应用就是用户登陆时获得的access_token将fresh设为true, 对那些比较重要的接口, 比如转账之类的, 必须是要求用户手动收入密码后才能调用的. from flask_jwt_extended import create_access_token from flask_jwt_extended import create_refresh_token from flask_jwt_extended import get_jwt_identity from flask_jwt_extended import jwt_required from flask_jwt_extended import JWTManager from datetime import timedelta from flask import Flask from flask import jsonify app = Flask(__name__) app.config['JWT_SECRET_KEY'] = 'hello@#$%&amp;' # 加密盐值 app.config['JWT_ACCESS_TOKEN_EXPIRES'] = timedelta(hours=1) # 设置access_token的有效时间 app.config[\\"JWT_REFRESH_TOKEN_EXPIRES\\"] = timedelta(days=1) # 设置refresh_token的有效时间 jwt = JWTManager(app) @app.route(\\"/login\\", methods=[\\"POST\\"]) def login(): access_token = create_access_token(identity={'user': 'apple', 'id': 1}, fresh=True) # 开启新鲜度模式 refresh_token = create_refresh_token(identity={'user': 'apple', 'id': 1}) return jsonify(access_token=access_token, refresh_token=refresh_token) @app.route(\\"/refresh\\", methods=[\\"GET\\"]) # 携带refresh_token请求此接口，刷新access_token @jwt_required(refresh=True) def refresh(): identity = get_jwt_identity() access_token = create_access_token(identity=identity, fresh=False) # 刷新不开启新鲜度模式 return jsonify(access_token=access_token) @app.route(\\"/protected\\", methods=[\\"GET\\"]) @jwt_required(fresh=True) # 只允许登入授权的用户访问,刷新授权不能在访问 def protected(): identity = get_jwt_identity() return jsonify(identity=identity) @app.route('/index') @jwt_required() # 无论登入授权还是，刷新授权都能访问 def index(): return jsonify(msg='欢迎访问') if __name__ == \\"__main__\\": app.run()","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/%E6%9C%AA%E5%88%86%E7%B1%BB/%E5%90%8E%E7%AB%AF/flask/flask_jwt/flask_jwt_fresh.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"jwt_fresh"}],["meta",{"property":"og:description","content":"jwt_fresh 如果为True, 只能让标记为\\"新鲜\\"的授权token访问，该参数要结合create_access_token来使用，当我们创建access_token时，有一个可选参数为fresh如果我们把它设为True,则代表它是\\"新鲜\\"token。默认为False。 一个应用就是用户登陆时获得的access_token将fresh设为true, 对那些比较重要的接口, 比如转账之类的, 必须是要求用户手动收入密码后才能调用的. from flask_jwt_extended import create_access_token from flask_jwt_extended import create_refresh_token from flask_jwt_extended import get_jwt_identity from flask_jwt_extended import jwt_required from flask_jwt_extended import JWTManager from datetime import timedelta from flask import Flask from flask import jsonify app = Flask(__name__) app.config['JWT_SECRET_KEY'] = 'hello@#$%&amp;' # 加密盐值 app.config['JWT_ACCESS_TOKEN_EXPIRES'] = timedelta(hours=1) # 设置access_token的有效时间 app.config[\\"JWT_REFRESH_TOKEN_EXPIRES\\"] = timedelta(days=1) # 设置refresh_token的有效时间 jwt = JWTManager(app) @app.route(\\"/login\\", methods=[\\"POST\\"]) def login(): access_token = create_access_token(identity={'user': 'apple', 'id': 1}, fresh=True) # 开启新鲜度模式 refresh_token = create_refresh_token(identity={'user': 'apple', 'id': 1}) return jsonify(access_token=access_token, refresh_token=refresh_token) @app.route(\\"/refresh\\", methods=[\\"GET\\"]) # 携带refresh_token请求此接口，刷新access_token @jwt_required(refresh=True) def refresh(): identity = get_jwt_identity() access_token = create_access_token(identity=identity, fresh=False) # 刷新不开启新鲜度模式 return jsonify(access_token=access_token) @app.route(\\"/protected\\", methods=[\\"GET\\"]) @jwt_required(fresh=True) # 只允许登入授权的用户访问,刷新授权不能在访问 def protected(): identity = get_jwt_identity() return jsonify(identity=identity) @app.route('/index') @jwt_required() # 无论登入授权还是，刷新授权都能访问 def index(): return jsonify(msg='欢迎访问') if __name__ == \\"__main__\\": app.run()"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-25T13:46:58.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2023-11-25T13:46:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"jwt_fresh\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-25T13:46:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[],"git":{"createdTime":1700920018000,"updatedTime":1700920018000,"contributors":[{"name":"claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":1.15,"words":346},"filePathRelative":"未分类/后端/flask/flask_jwt/flask_jwt_fresh.md","localizedDate":"2023年11月25日","excerpt":"<h1> jwt_fresh</h1>\\n<p>如果为True, 只能让标记为\\"新鲜\\"的授权token访问，该参数要结合create_access_token来使用，当我们创建access_token时，有一个可选参数为fresh如果我们把它设为True,则代表它是\\"新鲜\\"token。默认为False。</p>\\n<p>一个应用就是用户登陆时获得的<code>access_token</code>将<code>fresh</code>设为<code>true</code>, 对那些比较重要的接口, 比如转账之类的, 必须是要求用户手动收入密码后才能调用的.</p>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">from</span> flask_jwt_extended <span class=\\"token keyword\\">import</span> create_access_token\\n<span class=\\"token keyword\\">from</span> flask_jwt_extended <span class=\\"token keyword\\">import</span> create_refresh_token\\n<span class=\\"token keyword\\">from</span> flask_jwt_extended <span class=\\"token keyword\\">import</span> get_jwt_identity\\n<span class=\\"token keyword\\">from</span> flask_jwt_extended <span class=\\"token keyword\\">import</span> jwt_required\\n<span class=\\"token keyword\\">from</span> flask_jwt_extended <span class=\\"token keyword\\">import</span> JWTManager\\n\\n<span class=\\"token keyword\\">from</span> datetime <span class=\\"token keyword\\">import</span> timedelta\\n<span class=\\"token keyword\\">from</span> flask <span class=\\"token keyword\\">import</span> Flask\\n<span class=\\"token keyword\\">from</span> flask <span class=\\"token keyword\\">import</span> jsonify\\n\\napp <span class=\\"token operator\\">=</span> Flask<span class=\\"token punctuation\\">(</span>__name__<span class=\\"token punctuation\\">)</span>\\napp<span class=\\"token punctuation\\">.</span>config<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'JWT_SECRET_KEY'</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'hello@#$%&amp;'</span>  <span class=\\"token comment\\"># 加密盐值</span>\\napp<span class=\\"token punctuation\\">.</span>config<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'JWT_ACCESS_TOKEN_EXPIRES'</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> timedelta<span class=\\"token punctuation\\">(</span>hours<span class=\\"token operator\\">=</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span>  <span class=\\"token comment\\"># 设置access_token的有效时间</span>\\napp<span class=\\"token punctuation\\">.</span>config<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">\\"JWT_REFRESH_TOKEN_EXPIRES\\"</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> timedelta<span class=\\"token punctuation\\">(</span>days<span class=\\"token operator\\">=</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span>  <span class=\\"token comment\\"># 设置refresh_token的有效时间</span>\\njwt <span class=\\"token operator\\">=</span> JWTManager<span class=\\"token punctuation\\">(</span>app<span class=\\"token punctuation\\">)</span>\\n\\n\\n<span class=\\"token decorator annotation punctuation\\">@app<span class=\\"token punctuation\\">.</span>route</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"/login\\"</span><span class=\\"token punctuation\\">,</span> methods<span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">[</span><span class=\\"token string\\">\\"POST\\"</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">def</span> <span class=\\"token function\\">login</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    access_token <span class=\\"token operator\\">=</span> create_access_token<span class=\\"token punctuation\\">(</span>identity<span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">{</span><span class=\\"token string\\">'user'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'apple'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'id'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span> fresh<span class=\\"token operator\\">=</span><span class=\\"token boolean\\">True</span><span class=\\"token punctuation\\">)</span>  <span class=\\"token comment\\"># 开启新鲜度模式</span>\\n    refresh_token <span class=\\"token operator\\">=</span> create_refresh_token<span class=\\"token punctuation\\">(</span>identity<span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">{</span><span class=\\"token string\\">'user'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'apple'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'id'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">return</span> jsonify<span class=\\"token punctuation\\">(</span>access_token<span class=\\"token operator\\">=</span>access_token<span class=\\"token punctuation\\">,</span> refresh_token<span class=\\"token operator\\">=</span>refresh_token<span class=\\"token punctuation\\">)</span>\\n\\n\\n<span class=\\"token decorator annotation punctuation\\">@app<span class=\\"token punctuation\\">.</span>route</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"/refresh\\"</span><span class=\\"token punctuation\\">,</span> methods<span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">[</span><span class=\\"token string\\">\\"GET\\"</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>  <span class=\\"token comment\\"># 携带refresh_token请求此接口，刷新access_token</span>\\n<span class=\\"token decorator annotation punctuation\\">@jwt_required</span><span class=\\"token punctuation\\">(</span>refresh<span class=\\"token operator\\">=</span><span class=\\"token boolean\\">True</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">def</span> <span class=\\"token function\\">refresh</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    identity <span class=\\"token operator\\">=</span> get_jwt_identity<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n    access_token <span class=\\"token operator\\">=</span> create_access_token<span class=\\"token punctuation\\">(</span>identity<span class=\\"token operator\\">=</span>identity<span class=\\"token punctuation\\">,</span> fresh<span class=\\"token operator\\">=</span><span class=\\"token boolean\\">False</span><span class=\\"token punctuation\\">)</span>  <span class=\\"token comment\\"># 刷新不开启新鲜度模式</span>\\n    <span class=\\"token keyword\\">return</span> jsonify<span class=\\"token punctuation\\">(</span>access_token<span class=\\"token operator\\">=</span>access_token<span class=\\"token punctuation\\">)</span>\\n\\n\\n<span class=\\"token decorator annotation punctuation\\">@app<span class=\\"token punctuation\\">.</span>route</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"/protected\\"</span><span class=\\"token punctuation\\">,</span> methods<span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">[</span><span class=\\"token string\\">\\"GET\\"</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token decorator annotation punctuation\\">@jwt_required</span><span class=\\"token punctuation\\">(</span>fresh<span class=\\"token operator\\">=</span><span class=\\"token boolean\\">True</span><span class=\\"token punctuation\\">)</span>  <span class=\\"token comment\\"># 只允许登入授权的用户访问,刷新授权不能在访问</span>\\n<span class=\\"token keyword\\">def</span> <span class=\\"token function\\">protected</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    identity <span class=\\"token operator\\">=</span> get_jwt_identity<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">return</span> jsonify<span class=\\"token punctuation\\">(</span>identity<span class=\\"token operator\\">=</span>identity<span class=\\"token punctuation\\">)</span>\\n\\n\\n<span class=\\"token decorator annotation punctuation\\">@app<span class=\\"token punctuation\\">.</span>route</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'/index'</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token decorator annotation punctuation\\">@jwt_required</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>  <span class=\\"token comment\\"># 无论登入授权还是，刷新授权都能访问</span>\\n<span class=\\"token keyword\\">def</span> <span class=\\"token function\\">index</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token keyword\\">return</span> jsonify<span class=\\"token punctuation\\">(</span>msg<span class=\\"token operator\\">=</span><span class=\\"token string\\">'欢迎访问'</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token keyword\\">if</span> __name__ <span class=\\"token operator\\">==</span> <span class=\\"token string\\">\\"__main__\\"</span><span class=\\"token punctuation\\">:</span>\\n    app<span class=\\"token punctuation\\">.</span>run<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"王新宇"},"autoDesc":true}`);export{n as data};
