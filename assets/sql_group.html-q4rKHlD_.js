import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as e,o as d,c as i,d as o,w as p,a as n,b as s,e as l}from"./app-XqA98pG8.js";const c="/assets/2-Gs-Aqing.png",r={},u=n("h1",{id:"group",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#group","aria-hidden":"true"},"#"),s(" group")],-1),k=n("p",null,"分组查询就是将查询结果按照指定字段进行分组，字段中数据相等的分为一组。",-1),v=l('<p>分组查询基本的语法格式如下： <code>GROUP BY 列名 [HAVING 条件表达式] [WITH ROLLUP]</code></p><ol><li>列名: 是指按照指定字段的值进行分组。</li><li>HAVING 条件表达式: 用来过滤分组后的数据。</li><li>WITH ROLLUP：在所有记录的最后加上一条记录，显示select查询时聚合函数的统计和计算结果</li></ol><h2 id="数据" tabindex="-1"><a class="header-anchor" href="#数据" aria-hidden="true">#</a> 数据</h2><table><thead><tr><th>id</th><th>account</th><th>name</th><th>order_id</th><th>sku</th><th>quantity</th><th>unit_price</th><th>ext_price</th></tr></thead><tbody><tr><td>0</td><td>383080</td><td>Will LLC</td><td>10001</td><td>B1-20000</td><td>7</td><td>33.69</td><td>235.83</td></tr><tr><td>1</td><td>383080</td><td>Will LLC</td><td>10001</td><td>S1-27722</td><td>11</td><td>21.12</td><td>232.32</td></tr><tr><td>2</td><td>383080</td><td>Will LLC</td><td>10001</td><td>B1-86481</td><td>3</td><td>35.99</td><td>107.97</td></tr><tr><td>3</td><td>412290</td><td>Jerde-Hilpert</td><td>10005</td><td>S1-06532</td><td>48</td><td>55.82</td><td>2679.36</td></tr><tr><td>4</td><td>412290</td><td>Jerde-Hilpert</td><td>10005</td><td>S1-82801</td><td>21</td><td>13.62</td><td>286.02</td></tr><tr><td>5</td><td>412290</td><td>Jerde-Hilpert</td><td>10005</td><td>S1-06532</td><td>9</td><td>92.55</td><td>832.95</td></tr><tr><td>6</td><td>412290</td><td>Jerde-Hilpert</td><td>10005</td><td>S1-47412</td><td>44</td><td>78.91</td><td>3472.04</td></tr><tr><td>7</td><td>412290</td><td>Jerde-Hilpert</td><td>10005</td><td>S1-27722</td><td>36</td><td>25.42</td><td>915.12</td></tr><tr><td>8</td><td>218895</td><td>Kulas Inc</td><td>10006</td><td>S1-27722</td><td>32</td><td>95.66</td><td>3061.12</td></tr><tr><td>9</td><td>218895</td><td>Kulas Inc</td><td>10006</td><td>B1-33087</td><td>23</td><td>22.55</td><td>518.65</td></tr><tr><td>10</td><td>218895</td><td>Kulas Inc</td><td>10006</td><td>B1-33364</td><td>3</td><td>72.30</td><td>216.90</td></tr><tr><td>11</td><td>218895</td><td>Kulas Inc</td><td>10006</td><td>B1-20000</td><td>-1</td><td>72.18</td><td>-72.18</td></tr></tbody></table><p>字段解释:</p><ol><li><code>id</code>: 订单的唯一标识</li><li><code>account</code>: 用户的账号</li><li><code>name</code>: 用户的名称</li><li><code>order_id</code>: 订单id(1个订单可以由多个商品)</li><li><code>sku</code>: 商品名称</li><li><code>quantity</code>: 商品的个数</li><li><code>unit_price</code>: 每个商品的价格</li><li><code>ext_price</code>: <code>unit_price</code> * <code>quantity</code></li></ol><p>可以看到有三个不同的订单(orders), 10001,10005和10006. 每个订单有多种商品(sku).</p><h2 id="group-by-单独使用" tabindex="-1"><a class="header-anchor" href="#group-by-单独使用" aria-hidden="true">#</a> group by 单独使用</h2><p>查询的字段要和group by字段保持一致, 就是分组然后去重</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 根据order字段来分组</span>\n<span class="token keyword">SELECT</span> <span class="token identifier"><span class="token punctuation">`</span>order_id<span class="token punctuation">`</span></span> <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">`</span>order_detail<span class="token punctuation">`</span></span> <span class="token keyword">group</span> <span class="token keyword">BY</span> <span class="token identifier"><span class="token punctuation">`</span>order_id<span class="token punctuation">`</span></span><span class="token punctuation">;</span>\n<span class="token string">&quot;&quot;&quot;\norder_id\n10001\n10005\n10006\n&quot;&quot;&quot;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="group-by-聚合函数" tabindex="-1"><a class="header-anchor" href="#group-by-聚合函数" aria-hidden="true">#</a> group by + 聚合函数</h2><p>查询每个订单的总额</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token identifier"><span class="token punctuation">`</span>order_id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token function">SUM</span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>ext_price<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">AS</span> <span class="token identifier"><span class="token punctuation">`</span>order_total<span class="token punctuation">`</span></span> <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">`</span>order_detail<span class="token punctuation">`</span></span> <span class="token keyword">group</span> <span class="token keyword">BY</span> <span class="token identifier"><span class="token punctuation">`</span>order_id<span class="token punctuation">`</span></span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><table><thead><tr><th style="text-align:right;">order_id</th><th style="text-align:right;">order_total</th></tr></thead><tbody><tr><td style="text-align:right;">10001</td><td style="text-align:right;">576.12</td></tr><tr><td style="text-align:right;">10005</td><td style="text-align:right;">8185.49</td></tr><tr><td style="text-align:right;">10006</td><td style="text-align:right;">3724.49</td></tr></tbody></table><figure><img src="'+c+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>同样的可以计算, 平均值, 个数等:</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 统计不同订单的平均价格</span>\n<span class="token keyword">SELECT</span> <span class="token identifier"><span class="token punctuation">`</span>order_id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token function">AVG</span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>ext_price<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">AS</span> <span class="token identifier"><span class="token punctuation">`</span>order_avg<span class="token punctuation">`</span></span> <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">`</span>order_detail<span class="token punctuation">`</span></span> <span class="token keyword">group</span> <span class="token keyword">BY</span> <span class="token identifier"><span class="token punctuation">`</span>order_id<span class="token punctuation">`</span></span><span class="token punctuation">;</span>\n\n<span class="token string">&quot;&quot;&quot;\norder_id;order_sum\n10001;576.12\n10005;8185.49\n10006;3724.49\n&quot;&quot;&quot;</span>\n\n<span class="token comment">-- 统计不同性别的人的个数</span>\n<span class="token keyword">SELECT</span> <span class="token identifier"><span class="token punctuation">`</span>order_id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> <span class="token identifier"><span class="token punctuation">`</span>count<span class="token punctuation">`</span></span> <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">`</span>order_detail<span class="token punctuation">`</span></span> <span class="token keyword">group</span> <span class="token keyword">BY</span> <span class="token identifier"><span class="token punctuation">`</span>order_id<span class="token punctuation">`</span></span><span class="token punctuation">;</span>\n<span class="token string">&quot;&quot;&quot;\norder_id;count\n10001;3\n10005;5\n10006;4\n&quot;&quot;&quot;</span>\n\n<span class="token comment">-- 根据gender字段进行分组， 查询gender字段和分组的name字段信息</span>\n<span class="token keyword">SELECT</span> <span class="token identifier"><span class="token punctuation">`</span>order_id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> GROUP_CONCAT<span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>name<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">AS</span> <span class="token identifier"><span class="token punctuation">`</span>gname<span class="token punctuation">`</span></span> <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">`</span>order_detail<span class="token punctuation">`</span></span> <span class="token keyword">group</span> <span class="token keyword">BY</span> <span class="token identifier"><span class="token punctuation">`</span>order_id<span class="token punctuation">`</span></span><span class="token punctuation">;</span>\n<span class="token string">&quot;&quot;&quot;\norder_id;gname\n10001;Will LLC,Will LLC,Will LLC\n10005;Jerde-Hilpert,Jerde-Hilpert,Jerde-Hilpert,Jerde-Hilpert,Jerde-Hilpert\n10006;Kulas Inc,Kulas Inc,Kulas Inc,Kulas Inc\n&quot;&quot;&quot;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="having" tabindex="-1"><a class="header-anchor" href="#having" aria-hidden="true">#</a> having</h2><p>having作用和where类似都是过滤数据的，但having是过滤分组数据的，只能用于group by having是把某些组直接过滤掉 where是把某些行直接过滤掉</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 筛选商品个数大于3的订单</span>\n<span class="token keyword">SELECT</span> <span class="token identifier"><span class="token punctuation">`</span>order_id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> <span class="token identifier"><span class="token punctuation">`</span>count<span class="token punctuation">`</span></span> <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">`</span>order_detail<span class="token punctuation">`</span></span> <span class="token keyword">group</span> <span class="token keyword">BY</span> <span class="token identifier"><span class="token punctuation">`</span>order_id<span class="token punctuation">`</span></span> <span class="token keyword">HAVING</span> <span class="token identifier"><span class="token punctuation">`</span>count<span class="token punctuation">`</span></span> <span class="token operator">&gt;</span> <span class="token number">3</span><span class="token punctuation">;</span>\n<span class="token string">&quot;&quot;&quot;\norder_id;count\n10005;5\n10006;4\n&quot;&quot;&quot;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="with-rollup" tabindex="-1"><a class="header-anchor" href="#with-rollup" aria-hidden="true">#</a> with rollup</h2><p>with rollup的作用是：在最后记录后面新增一行，显示select查询时聚合函数的统计和计算结果</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 根据订单分组汇总, 并进行总汇总(rollup)</span>\n<span class="token keyword">SELECT</span> <span class="token identifier"><span class="token punctuation">`</span>order_id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> <span class="token identifier"><span class="token punctuation">`</span>count<span class="token punctuation">`</span></span> <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">`</span>order_detail<span class="token punctuation">`</span></span> <span class="token keyword">group</span> <span class="token keyword">BY</span> <span class="token identifier"><span class="token punctuation">`</span>order_id<span class="token punctuation">`</span></span> <span class="token keyword">with rollup</span><span class="token punctuation">;</span>\n\n<span class="token string">&quot;&quot;&quot;\norder_id;count\n10001;3\n10005;5\n10006;4\n\\N;12\n&quot;&quot;&quot;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>First we should know the order of execution of Clauses i.e <code>FROM &gt; WHERE &gt; GROUP BY &gt; HAVING &gt; DISTINCT &gt; SELECT &gt; ORDER BY</code>.</p><p>first the <code>WHERE</code> clause fetches the records based on the condition then the <code>GROUP BY</code> clause groups them accordingly and then the <code>HAVING</code> clause fetches the group records based on the having condition.</p><p>&quot;HAVING is same as the WHERE clause but is applied on grouped records&quot;.</p><p>refs: https://stackoverflow.com/questions/9253244/sql-having-vs-where</p>',27);function h(m,g){const t=e("font");return d(),i("div",null,[u,k,o(t,{style:{background:"lightgreen"}},{default:p(()=>[s("sql的group by类似于pandas的groupby函数, 可参考[pandas_groupby](/pandas_groupby/)")]),_:1}),v])}const y=a(r,[["render",h],["__file","sql_group.html.vue"]]);export{y as default};
