const n=JSON.parse('{"key":"v-1d216bd2","path":"/%E6%95%B0%E6%8D%AE%E5%B7%A5%E7%A8%8B/spark/function/pyspark_functions.md/pyspark_checkpoint.html","title":"checkpoint","lang":"zh-CN","frontmatter":{"description":"checkpoint checkpoint vs cache checkpoint 将所有分数数据保存在一个HDFS文件中，而缓存分别保存在各个分区上，分区越多，风险越高 checkpoint 只能写入硬盘， 而cache可以写入内存，也可以写入硬盘，所以cache速度快 checkpoint 不保留血缘关系，cache保留血缘关系 ## coding:utf8 import time from pyspark import SparkConf, SparkContext from pyspark.storagelevel import StorageLevel conf = SparkConf().setAppName(\\"test\\").setMaster(\\"local[*]\\") sc = SparkContext(conf=conf) ## 1. 告知spark, 开启CheckPoint功能 sc.setCheckpointDir(\\"hdfs://node1:8020/output/ckp\\") rdd1 = sc.textFile(\\"../data/input/words.txt\\") rdd2 = rdd1.flatMap(lambda x: x.split(\\" \\")) rdd3 = rdd2.map(lambda x: (x, 1)) ## 调用checkpoint API 保存数据即可 rdd3.checkpoint() rdd4 = rdd3.reduceByKey(lambda a, b: a + b) print(rdd4.collect()) rdd5 = rdd3.groupByKey() rdd6 = rdd5.mapValues(lambda x: sum(x)) print(rdd6.collect()) rdd3.unpersist() time.sleep(100000)","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/%E6%95%B0%E6%8D%AE%E5%B7%A5%E7%A8%8B/spark/function/pyspark_functions.md/pyspark_checkpoint.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"checkpoint"}],["meta",{"property":"og:description","content":"checkpoint checkpoint vs cache checkpoint 将所有分数数据保存在一个HDFS文件中，而缓存分别保存在各个分区上，分区越多，风险越高 checkpoint 只能写入硬盘， 而cache可以写入内存，也可以写入硬盘，所以cache速度快 checkpoint 不保留血缘关系，cache保留血缘关系 ## coding:utf8 import time from pyspark import SparkConf, SparkContext from pyspark.storagelevel import StorageLevel conf = SparkConf().setAppName(\\"test\\").setMaster(\\"local[*]\\") sc = SparkContext(conf=conf) ## 1. 告知spark, 开启CheckPoint功能 sc.setCheckpointDir(\\"hdfs://node1:8020/output/ckp\\") rdd1 = sc.textFile(\\"../data/input/words.txt\\") rdd2 = rdd1.flatMap(lambda x: x.split(\\" \\")) rdd3 = rdd2.map(lambda x: (x, 1)) ## 调用checkpoint API 保存数据即可 rdd3.checkpoint() rdd4 = rdd3.reduceByKey(lambda a, b: a + b) print(rdd4.collect()) rdd5 = rdd3.groupByKey() rdd6 = rdd5.mapValues(lambda x: sum(x)) print(rdd6.collect()) rdd3.unpersist() time.sleep(100000)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-26T14:44:07.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2023-11-26T14:44:07.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"checkpoint\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-26T14:44:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[],"git":{"createdTime":1701009847000,"updatedTime":1701009847000,"contributors":[{"name":"claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":0.57,"words":171},"filePathRelative":"数据工程/spark/function/pyspark_functions.md/pyspark_checkpoint.md","localizedDate":"2023年11月26日","excerpt":"<h1> checkpoint</h1>\\n<p>checkpoint vs cache</p>\\n<ul>\\n<li>checkpoint 将所有分数数据保存在一个HDFS文件中，而缓存分别保存在各个分区上，分区越多，风险越高</li>\\n<li>checkpoint 只能写入硬盘， 而cache可以写入内存，也可以写入硬盘，所以cache速度快</li>\\n<li>checkpoint 不保留血缘关系，cache保留血缘关系</li>\\n</ul>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token comment\\">## coding:utf8</span>\\n<span class=\\"token keyword\\">import</span> time\\n\\n<span class=\\"token keyword\\">from</span> pyspark <span class=\\"token keyword\\">import</span> SparkConf<span class=\\"token punctuation\\">,</span> SparkContext\\n<span class=\\"token keyword\\">from</span> pyspark<span class=\\"token punctuation\\">.</span>storagelevel <span class=\\"token keyword\\">import</span> StorageLevel\\nconf <span class=\\"token operator\\">=</span> SparkConf<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span>setAppName<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"test\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span>setMaster<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"local[*]\\"</span><span class=\\"token punctuation\\">)</span>\\nsc <span class=\\"token operator\\">=</span> SparkContext<span class=\\"token punctuation\\">(</span>conf<span class=\\"token operator\\">=</span>conf<span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token comment\\">## 1. 告知spark, 开启CheckPoint功能</span>\\nsc<span class=\\"token punctuation\\">.</span>setCheckpointDir<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"hdfs://node1:8020/output/ckp\\"</span><span class=\\"token punctuation\\">)</span>\\nrdd1 <span class=\\"token operator\\">=</span> sc<span class=\\"token punctuation\\">.</span>textFile<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"../data/input/words.txt\\"</span><span class=\\"token punctuation\\">)</span>\\nrdd2 <span class=\\"token operator\\">=</span> rdd1<span class=\\"token punctuation\\">.</span>flatMap<span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">lambda</span> x<span class=\\"token punctuation\\">:</span> x<span class=\\"token punctuation\\">.</span>split<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\" \\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\nrdd3 <span class=\\"token operator\\">=</span> rdd2<span class=\\"token punctuation\\">.</span><span class=\\"token builtin\\">map</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">lambda</span> x<span class=\\"token punctuation\\">:</span> <span class=\\"token punctuation\\">(</span>x<span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token comment\\">## 调用checkpoint API 保存数据即可</span>\\nrdd3<span class=\\"token punctuation\\">.</span>checkpoint<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\nrdd4 <span class=\\"token operator\\">=</span> rdd3<span class=\\"token punctuation\\">.</span>reduceByKey<span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">lambda</span> a<span class=\\"token punctuation\\">,</span> b<span class=\\"token punctuation\\">:</span> a <span class=\\"token operator\\">+</span> b<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span>rdd4<span class=\\"token punctuation\\">.</span>collect<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n\\nrdd5 <span class=\\"token operator\\">=</span> rdd3<span class=\\"token punctuation\\">.</span>groupByKey<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\nrdd6 <span class=\\"token operator\\">=</span> rdd5<span class=\\"token punctuation\\">.</span>mapValues<span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">lambda</span> x<span class=\\"token punctuation\\">:</span> <span class=\\"token builtin\\">sum</span><span class=\\"token punctuation\\">(</span>x<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span>rdd6<span class=\\"token punctuation\\">.</span>collect<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n\\nrdd3<span class=\\"token punctuation\\">.</span>unpersist<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\ntime<span class=\\"token punctuation\\">.</span>sleep<span class=\\"token punctuation\\">(</span><span class=\\"token number\\">100000</span><span class=\\"token punctuation\\">)</span>\\n\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"王新宇"},"autoDesc":true}');export{n as data};
