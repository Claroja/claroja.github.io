import{_ as o}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as p,o as c,c as l,a as s,d as a,w as i,b as n,e as u}from"./app-A10JnHE0.js";const r={},k=s("h2",{id:"缺失值",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#缺失值","aria-hidden":"true"},"#"),n(" 缺失值")],-1),d={href:"https://scikit-learn.org/stable/modules/ensemble.html#ensemble",target:"_blank",rel:"noopener noreferrer"},m={href:"https://scikit-learn.org/stable/modules/tree.html#missing-values-support",target:"_blank",rel:"noopener noreferrer"},v=u(`<ol><li>把缺失值当成一个类别</li><li>如果缺失值同时被预测为两个目标值, 且目标值权重相同, 则该缺失值会被分配给右侧节点</li><li>如果缺失值同时被越策为两个目标值, 且目标值权重不同, 则缺失值会预测权重更高的值</li></ol><p>所以:</p><ol><li>scikitlearn决策树模型, 可以接收缺失值做输入, 按照以上方法进行处理</li><li>但是处理方法过于简单, 建议在特征工程时进行缺失值的填充</li></ol><h2 id="特征编码" tabindex="-1"><a class="header-anchor" href="#特征编码" aria-hidden="true">#</a> 特征编码</h2><ol><li><p>分类数据</p><ol><li>决策树理论上不需要对分类数据进行数字编码, 但scikitlearn尚未实现, 所以需要对分类数据进行编码, 编码成数值即可</li><li>不要使用onehot编码</li><li>决策树模型从理论上是不区分分类变量和排序变量的</li></ol></li><li><p>排序数据</p><p>决策树模型从理论上是不区分分类变量和排序变量的</p></li><li><p>数值数据</p><p>不需要处理</p></li></ol><h2 id="归一化" tabindex="-1"><a class="header-anchor" href="#归一化" aria-hidden="true">#</a> 归一化</h2><pre><code>随机森林不需要进行归一化
</code></pre><h2 id="实战" tabindex="-1"><a class="header-anchor" href="#实战" aria-hidden="true">#</a> 实战</h2><p>ordinal vs onehot</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>model_selection <span class="token keyword">import</span> train_test_split
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>ensemble <span class="token keyword">import</span> RandomForestClassifier
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">import</span> accuracy_score
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>model_selection <span class="token keyword">import</span> GridSearchCV

data_all <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>
    <span class="token string">&#39;./data/train.csv&#39;</span><span class="token punctuation">,</span> 
    usecols<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;Survived&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Pclass&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Sex&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Age&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;SibSp&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Parch&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Fare&#39;</span><span class="token punctuation">,</span>  <span class="token string">&#39;Embarked&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

data_all <span class="token operator">=</span> data_all<span class="token punctuation">.</span>dropna<span class="token punctuation">(</span><span class="token punctuation">)</span>

data_all <span class="token operator">=</span> pd<span class="token punctuation">.</span>merge<span class="token punctuation">(</span>data_all<span class="token punctuation">,</span> pd<span class="token punctuation">.</span>get_dummies<span class="token punctuation">(</span>data_all<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&#39;Sex&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Embarked&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> how<span class="token operator">=</span><span class="token string">&quot;inner&quot;</span><span class="token punctuation">,</span> left_index<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> right_index<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
data_all <span class="token operator">=</span> data_all<span class="token punctuation">.</span>drop<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Sex&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Embarked&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>

<span class="token comment"># data_all[&#39;Sex&#39;] = data_all[&#39;Sex&#39;].map({&#39;male&#39;:1,&#39;female&#39;:2})</span>
<span class="token comment"># data_all[&#39;Embarked&#39;] = data_all[&#39;Embarked&#39;].map({&#39;S&#39;:1,&#39;C&#39;:2,&#39;Q&#39;:3 })</span>



data_y <span class="token operator">=</span> data_all<span class="token punctuation">[</span><span class="token string">&#39;Survived&#39;</span><span class="token punctuation">]</span>
data_x <span class="token operator">=</span> data_all<span class="token punctuation">.</span>drop<span class="token punctuation">(</span><span class="token string">&#39;Survived&#39;</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>


X_train<span class="token punctuation">,</span> X_test<span class="token punctuation">,</span> y_train<span class="token punctuation">,</span> y_test <span class="token operator">=</span> train_test_split<span class="token punctuation">(</span>data_x<span class="token punctuation">,</span> data_y<span class="token punctuation">,</span> random_state <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span>

params <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;n_estimators&#39;</span><span class="token punctuation">:</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token string">&#39;max_depth&#39;</span><span class="token punctuation">:</span>  <span class="token punctuation">[</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string">&#39;criterion&#39;</span><span class="token punctuation">:</span>  <span class="token punctuation">[</span><span class="token string">&#39;gini&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;entropy&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string">&#39;max_features&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token string">&#39;sqrt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;log2&#39;</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">,</span> <span class="token number">0.4</span><span class="token punctuation">,</span> <span class="token number">0.6</span><span class="token punctuation">,</span> <span class="token number">0.8</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string">&#39;random_state&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span>
    
<span class="token punctuation">}</span>

clf_grid <span class="token operator">=</span> GridSearchCV<span class="token punctuation">(</span>
    estimator<span class="token operator">=</span>RandomForestClassifier<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    param_grid<span class="token operator">=</span>params<span class="token punctuation">,</span>
    cv<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span>
    n_jobs<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span>
    verbose<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>

clf_grid<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X_train<span class="token punctuation">,</span> y_train<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>accuracy_score<span class="token punctuation">(</span>y_test<span class="token punctuation">,</span> clf_grid<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X_test<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 0.7921348314606742</span>
clf_grid<span class="token punctuation">.</span>best_params_ 

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),_={href:"https://towardsdatascience.com/one-hot-encoding-is-making-your-tree-based-ensembles-worse-heres-why-d64b282b5769",target:"_blank",rel:"noopener noreferrer"};function b(h,g){const e=p("RouterLink"),t=p("ExternalLinkIcon");return c(),l("div",null,[k,s("p",null,[a(e,{to:"/2%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/1%E7%AE%97%E6%B3%95%E5%8E%9F%E7%90%86/3%E6%A0%91%E6%A8%A1%E5%9E%8B/3%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97/5_1%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97%E7%90%86%E8%AE%BA_%E6%A8%A1%E5%9E%8B.html"},{default:i(()=>[n("随机森林理论_模型")]),_:1}),n("中介绍了异常值的处理方法, 但是scikitlearn官网"),s("a",d,[n("ensemble"),a(t)]),n(", 并未对randomforest的缺失值处理方法做详细说明, 所以暂时按照"),s("a",m,[n("Missing Values Support"),a(t)]),n("理解:")]),v,s("p",null,[n("另有"),s("a",_,[n("One-Hot Encoding is making your Tree-Based Ensembles worse, here’s why?"),a(t)]),n("文章印证这个观点")])])}const y=o(r,[["render",b],["__file","3_2随机森林实战_scikitlearn_特征工程.html.vue"]]);export{y as default};
