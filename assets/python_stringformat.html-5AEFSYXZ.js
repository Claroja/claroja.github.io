import{_ as o}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as p,o as c,c as i,a as n,b as s,d as t,e}from"./app-XqA98pG8.js";const r={},l=n("h1",{id:"stringformat",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#stringformat","aria-hidden":"true"},"#"),s(" stringformat")],-1),d=n("p",null,"python格式化字符串有三种方法:",-1),u=n("h2",{id:"string-template",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#string-template","aria-hidden":"true"},"#"),s(" string.Template")],-1),k={href:"https://www.python.org/dev/peps/pep-0498/",target:"_blank",rel:"noopener noreferrer"},h=n("code",null,"f-string",-1),m=e(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>name <span class="token operator">=</span> <span class="token string">&quot;wang&quot;</span>
age <span class="token operator">=</span> <span class="token number">18</span>
s <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">\\t</span><span class="token interpolation"><span class="token punctuation">{</span>age<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span>
<span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>  <span class="token comment"># wang	18</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="str-format" tabindex="-1"><a class="header-anchor" href="#str-format" aria-hidden="true">#</a> <code>str.format()</code></h2>`,2),g={href:"https://docs.python.org/3/library/string.html#formatstrings",target:"_blank",rel:"noopener noreferrer"},v=e(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>s <span class="token operator">=</span> <span class="token string">&quot;{}\\t{age}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token string">&quot;wang&quot;</span><span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>  <span class="token comment"># wang	18</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>format</code>函数中前面可以以<code>*arg</code>列表形式填充值, 后面可以以<code>**kwargs</code>来填充值</p><h2 id="format-specification" tabindex="-1"><a class="header-anchor" href="#format-specification" aria-hidden="true">#</a> Format Specification</h2><p>常用的就是<code>[width][.precision][type]</code>三者</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">## [[fill]align][sign][width][.precision][type]</span>

<span class="token string">&quot;%#&lt;+06.1f&quot;</span> <span class="token operator">%</span> <span class="token number">5</span>  <span class="token comment"># 不支持左右对齐, unsupported format character &#39;&gt;&#39; (0x3e) at index 2</span>
<span class="token string">&quot;{:#&lt;+06.1f}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>  <span class="token comment"># &#39;+5.0##&#39;</span>
num <span class="token operator">=</span> <span class="token number">5</span>
<span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>num<span class="token punctuation">:</span><span class="token format-spec">#&lt;+06.1f</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span>  <span class="token comment"># &#39;+5.0##&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>format_spec     <span class="token punctuation">:</span><span class="token operator">:=</span>  <span class="token punctuation">[</span><span class="token punctuation">[</span>fill<span class="token punctuation">]</span>align<span class="token punctuation">]</span><span class="token punctuation">[</span>sign<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token comment">#][0][width][grouping_option][.precision][type]</span>
fill            <span class="token punctuation">:</span><span class="token operator">:=</span>  <span class="token operator">&lt;</span><span class="token builtin">any</span> character<span class="token operator">&gt;</span>
align           <span class="token punctuation">:</span><span class="token operator">:=</span>  <span class="token string">&quot;&lt;&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;&gt;&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;=&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;^&quot;</span>
sign            <span class="token punctuation">:</span><span class="token operator">:=</span>  <span class="token string">&quot;+&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;-&quot;</span> <span class="token operator">|</span> <span class="token string">&quot; &quot;</span>
width           <span class="token punctuation">:</span><span class="token operator">:=</span>  digit<span class="token operator">+</span>
precision       <span class="token punctuation">:</span><span class="token operator">:=</span>  digit<span class="token operator">+</span>
<span class="token builtin">type</span>            <span class="token punctuation">:</span><span class="token operator">:=</span>  <span class="token string">&quot;b&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;c&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;d&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;e&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;E&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;f&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;F&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;g&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;G&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;n&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;o&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;s&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;x&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;X&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;%&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fill" tabindex="-1"><a class="header-anchor" href="#fill" aria-hidden="true">#</a> fill</h3><p>指定左对齐和右对齐空白填充的字符</p><h3 id="align" tabindex="-1"><a class="header-anchor" href="#align" aria-hidden="true">#</a> align</h3><p>只有在指定最小宽度<code>minimumwidth</code>大于字符串本来宽度才生效.</p><p><code>&lt;</code> 左对齐, 默认 <code>&gt;</code> 右对齐 <code>^</code> 中对齐 <code>=</code> 正负号对齐, 如&#39;+000000120&#39;</p><h4 id="sign" tabindex="-1"><a class="header-anchor" href="#sign" aria-hidden="true">#</a> sign</h4><p><code>+</code> 表示正负值都要有符号 <code>-</code> 表示只有负值有符号, 默认 <code></code> 表示正值前面使用空格</p><h4 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h4><p><code>#</code>表示 将binary, octal, and hexadecimal需要使用前缀&#39;0b&#39;, &#39;0o&#39;, and &#39;0x&#39;</p><h4 id="_0" tabindex="-1"><a class="header-anchor" href="#_0" aria-hidden="true">#</a> 0</h4><p><code>0</code>表示填充,二进制,八进制,十六进制开头的数字, 默认为0</p><h4 id="minimumwidth" tabindex="-1"><a class="header-anchor" href="#minimumwidth" aria-hidden="true">#</a> minimumwidth</h4><p>指定宽度, 如果不指定, 则使用字符串本身的宽度</p><h4 id="precision" tabindex="-1"><a class="header-anchor" href="#precision" aria-hidden="true">#</a> .precision</h4><p>小数点后面保存的位数</p><h4 id="type" tabindex="-1"><a class="header-anchor" href="#type" aria-hidden="true">#</a> type</h4><p><code>f</code> 表示浮点数 <code>b</code> 表示二进制, binary <code>c</code> 表示字符, Character <code>d</code> 表示整型, Decimal Integer <code>o</code> 表示八进制, Octal <code>x</code> 表示小写十六进制, Hex <code>X</code> 表示大写十六进制, Hex</p><h2 id="早期的-formatting-不建议使用" tabindex="-1"><a class="header-anchor" href="#早期的-formatting-不建议使用" aria-hidden="true">#</a> 早期的<code>%-formatting</code>(不建议使用)</h2>`,24),b={href:"https://docs.python.org/3/library/stdtypes.html#printf-style-string-formatting",target:"_blank",rel:"noopener noreferrer"},q=e(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>s <span class="token operator">=</span> <span class="token string">&quot;%s\\t%d&quot;</span> <span class="token operator">%</span> <span class="token punctuation">(</span><span class="token string">&quot;wang&quot;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>  <span class="token comment"># wang	18</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>其中<code>%s</code>是字符串占位符, 另外还有<code>%d</code>整型占位符. <code>%</code>是固定语法. <code>(value1,value2)</code>是要填充的值,这里是元组形式<code>()</code></p><p><code>%</code>后面也可以跟字典<code>{}</code></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>s <span class="token operator">=</span> <span class="token string">&quot;%(name)s\\t%(age)d&quot;</span> <span class="token operator">%</span> <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;wang&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span><span class="token number">18</span><span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>  <span class="token comment"># wang	18</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>%[(name)][flags][width].[precision]typecode</code></p><ul><li>(name)为命名</li><li>flags可以有+,-,&#39; &#39;或0。+表示右对齐。-表示左对齐。&#39; &#39;为一个空格，表示在正数的左侧填充一个空格，从而与负数对齐。0表示使用0填充。</li><li>width表示显示宽度</li><li>precision表示小数点后精度</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;%05.2f&quot;</span> <span class="token operator">%</span> <span class="token number">5</span><span class="token punctuation">)</span>  <span class="token comment"># 05.00</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>flags = 0, 表示多余的位使用0填充</li><li>width = 5, 表示数字整体宽度是5(包含小数点),</li><li>precision = 2, 表示小数点后面保留2位, 因为width=5, 所以小数点前面也是2位</li></ul><p>参考: https://www.python.org/dev/peps/pep-0498/ https://realpython.com/python-formatted-output/</p>`,9);function f(y,_){const a=p("ExternalLinkIcon");return c(),i("div",null,[l,d,u,n("p",null,[n("a",k,[s("参考"),t(a)]),s(" 前两种方式是python2时代的产物, 而"),h,s("则是3.6之后加入的.")]),m,n("p",null,[n("a",g,[s("参考"),t(a)])]),v,n("p",null,[n("a",b,[s("参考"),t(a)])]),q])}const E=o(r,[["render",f],["__file","python_stringformat.html.vue"]]);export{E as default};
