const n=JSON.parse('{"key":"v-5fd14290","path":"/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/7%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E8%BF%AD%E4%BB%A3/iterable_iterator.html","title":"iterable&iterator","lang":"zh-CN","frontmatter":{"description":"iterable&amp;iterator from collections.abc import Iterable,Iterator class B(object): def __next__(self): pass class A(object): def __iter__(self): return B() a = A() b = B() print(isinstance(a, Iterable)) # True 实现了__iter__方法 print(isinstance(a, Iterator)) # False 实现了__iter__ 未实现__next__ print(isinstance(b, Iterable)) # False 未实现__iter__方法 print(isinstance(b, Iterator)) # False 未实现__iter__方法_next__方法","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/7%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E8%BF%AD%E4%BB%A3/iterable_iterator.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"iterable&iterator"}],["meta",{"property":"og:description","content":"iterable&amp;iterator from collections.abc import Iterable,Iterator class B(object): def __next__(self): pass class A(object): def __iter__(self): return B() a = A() b = B() print(isinstance(a, Iterable)) # True 实现了__iter__方法 print(isinstance(a, Iterator)) # False 实现了__iter__ 未实现__next__ print(isinstance(b, Iterable)) # False 未实现__iter__方法 print(isinstance(b, Iterator)) # False 未实现__iter__方法_next__方法"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-01T12:59:38.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2023-12-01T12:59:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"iterable&iterator\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-12-01T12:59:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[],"git":{"createdTime":1701435578000,"updatedTime":1701435578000,"contributors":[{"name":"claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":0.25,"words":76},"filePathRelative":"编程语言/python/7面向对象/迭代/iterable&iterator.md","localizedDate":"2023年12月1日","excerpt":"<h1> iterable&amp;iterator</h1>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">from</span> collections<span class=\\"token punctuation\\">.</span>abc <span class=\\"token keyword\\">import</span> Iterable<span class=\\"token punctuation\\">,</span>Iterator\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">B</span><span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">object</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">__next__</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token keyword\\">pass</span>\\n\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">A</span><span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">object</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">__iter__</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token keyword\\">return</span> B<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\na <span class=\\"token operator\\">=</span> A<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\nb <span class=\\"token operator\\">=</span> B<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">isinstance</span><span class=\\"token punctuation\\">(</span>a<span class=\\"token punctuation\\">,</span> Iterable<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\"># True 实现了__iter__方法</span>\\n<span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">isinstance</span><span class=\\"token punctuation\\">(</span>a<span class=\\"token punctuation\\">,</span> Iterator<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\"># False 实现了__iter__ 未实现__next__</span>\\n\\n<span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">isinstance</span><span class=\\"token punctuation\\">(</span>b<span class=\\"token punctuation\\">,</span> Iterable<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\"># False 未实现__iter__方法</span>\\n<span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">isinstance</span><span class=\\"token punctuation\\">(</span>b<span class=\\"token punctuation\\">,</span> Iterator<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\"># False 未实现__iter__方法_next__方法</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"王新宇"},"autoDesc":true}');export{n as data};
