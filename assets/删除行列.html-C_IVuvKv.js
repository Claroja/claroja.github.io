import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as a,c as s,a as e}from"./app-nD1Z-e8V.js";const o={},t=e(`<h1 id="删除行列" tabindex="-1"><a class="header-anchor" href="#删除行列" aria-hidden="true">#</a> 删除行列</h1><h2 id="实战" tabindex="-1"><a class="header-anchor" href="#实战" aria-hidden="true">#</a> 实战</h2><p>drop只接受index作为参数</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>df_info<span class="token punctuation">.</span>drop<span class="token punctuation">(</span>df_info<span class="token punctuation">[</span>df_info<span class="token punctuation">[</span><span class="token string">&#39;column&#39;</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">&#39;Sex&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>index<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="api" tabindex="-1"><a class="header-anchor" href="#api" aria-hidden="true">#</a> API</h2><h3 id="参数" tabindex="-1"><a class="header-anchor" href="#参数" aria-hidden="true">#</a> 参数</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>DataFrame<span class="token punctuation">.</span>drop<span class="token punctuation">(</span>
    labels<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>    <span class="token comment"># single label or list-like, 行索引或列索引</span>
    <span class="token operator">*</span><span class="token punctuation">,</span> 
    axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>         <span class="token comment"># {0 or ‘index’, 1 or ‘columns’}, 默认按行扫描</span>
    index<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>     <span class="token comment"># single label or list-like, labels, axis=0 等价于 index=labels</span>
    columns<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>   <span class="token comment"># single label or list-like, labels, axis=1 等价于 columns=labels</span>
    level<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>     <span class="token comment"># int or level name, 删除多重索引的某一重</span>
    inplace<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>  <span class="token comment"># bool, 直接替换, 不返回新的数据框</span>
    errors<span class="token operator">=</span><span class="token string">&#39;raise&#39;</span>  <span class="token comment"># {‘ignore’, ‘raise’}, 当列不存在时, 报错</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="返回" tabindex="-1"><a class="header-anchor" href="#返回" aria-hidden="true">#</a> 返回</h3><p>DataFrame or None</p>`,9),p=[t];function l(i,c){return a(),s("div",null,p)}const u=n(o,[["render",l],["__file","删除行列.html.vue"]]);export{u as default};
