const n=JSON.parse('{"key":"v-7d96a38e","path":"/8%E6%95%B0%E6%8D%AE%E5%B7%A5%E7%A8%8B/3spark/%E5%9F%BA%E7%A1%80/accumulator.html","title":"accumulator","lang":"zh-CN","frontmatter":{"description":"accumulator 累加器原理是将Dirver将累加器变量发送给executor，这样executor就能操作这个变量. 注意： 因为rdd是过程数据，如果rdd被多次使用，可能会重新构建此rdd，而造成多次执行。需要加cache或者checkpoint ## coding:utf8 import time from pyspark import SparkConf, SparkContext from pyspark.storagelevel import StorageLevel conf = SparkConf().setAppName(\\"test\\").setMaster(\\"local[*]\\") sc = SparkContext(conf=conf) rdd = sc.parallelize([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 2) acmlt = sc.accumulator(0) # Spark提供的累加器变量, def map_func(data): global acmlt acmlt += 1 # print(acmlt) rdd2 = rdd.map(map_func) rdd2.cache() rdd2.collect() rdd3 = rdd2.map(lambda x:x) rdd3.collect() print(acmlt)","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/8%E6%95%B0%E6%8D%AE%E5%B7%A5%E7%A8%8B/3spark/%E5%9F%BA%E7%A1%80/accumulator.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"accumulator"}],["meta",{"property":"og:description","content":"accumulator 累加器原理是将Dirver将累加器变量发送给executor，这样executor就能操作这个变量. 注意： 因为rdd是过程数据，如果rdd被多次使用，可能会重新构建此rdd，而造成多次执行。需要加cache或者checkpoint ## coding:utf8 import time from pyspark import SparkConf, SparkContext from pyspark.storagelevel import StorageLevel conf = SparkConf().setAppName(\\"test\\").setMaster(\\"local[*]\\") sc = SparkContext(conf=conf) rdd = sc.parallelize([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 2) acmlt = sc.accumulator(0) # Spark提供的累加器变量, def map_func(data): global acmlt acmlt += 1 # print(acmlt) rdd2 = rdd.map(map_func) rdd2.cache() rdd2.collect() rdd3 = rdd2.map(lambda x:x) rdd3.collect() print(acmlt)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-24T12:46:58.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2025-02-24T12:46:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"accumulator\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-24T12:46:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[],"git":{"createdTime":1740401218000,"updatedTime":1740401218000,"contributors":[{"name":"Claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":0.48,"words":144},"filePathRelative":"8数据工程/3spark/基础/accumulator.md","localizedDate":"2025年2月24日","excerpt":"<h1> accumulator</h1>\\n<p>累加器原理是将Dirver将累加器变量发送给executor，这样executor就能操作这个变量.</p>\\n<p>注意：\\n因为rdd是过程数据，如果rdd被多次使用，可能会重新构建此rdd，而造成多次执行。需要加cache或者checkpoint</p>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token comment\\">## coding:utf8</span>\\n<span class=\\"token keyword\\">import</span> time\\n\\n<span class=\\"token keyword\\">from</span> pyspark <span class=\\"token keyword\\">import</span> SparkConf<span class=\\"token punctuation\\">,</span> SparkContext\\n<span class=\\"token keyword\\">from</span> pyspark<span class=\\"token punctuation\\">.</span>storagelevel <span class=\\"token keyword\\">import</span> StorageLevel\\n\\nconf <span class=\\"token operator\\">=</span> SparkConf<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span>setAppName<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"test\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span>setMaster<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"local[*]\\"</span><span class=\\"token punctuation\\">)</span>\\nsc <span class=\\"token operator\\">=</span> SparkContext<span class=\\"token punctuation\\">(</span>conf<span class=\\"token operator\\">=</span>conf<span class=\\"token punctuation\\">)</span>\\n\\nrdd <span class=\\"token operator\\">=</span> sc<span class=\\"token punctuation\\">.</span>parallelize<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">3</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">4</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">5</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">6</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">7</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">8</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">9</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">10</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span>\\n\\n\\nacmlt <span class=\\"token operator\\">=</span> sc<span class=\\"token punctuation\\">.</span>accumulator<span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\"># Spark提供的累加器变量, </span>\\n\\n<span class=\\"token keyword\\">def</span> <span class=\\"token function\\">map_func</span><span class=\\"token punctuation\\">(</span>data<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token keyword\\">global</span> acmlt\\n    acmlt <span class=\\"token operator\\">+=</span> <span class=\\"token number\\">1</span>\\n    <span class=\\"token comment\\"># print(acmlt)</span>\\n\\nrdd2 <span class=\\"token operator\\">=</span> rdd<span class=\\"token punctuation\\">.</span><span class=\\"token builtin\\">map</span><span class=\\"token punctuation\\">(</span>map_func<span class=\\"token punctuation\\">)</span>\\nrdd2<span class=\\"token punctuation\\">.</span>cache<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\nrdd2<span class=\\"token punctuation\\">.</span>collect<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\nrdd3 <span class=\\"token operator\\">=</span> rdd2<span class=\\"token punctuation\\">.</span><span class=\\"token builtin\\">map</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">lambda</span> x<span class=\\"token punctuation\\">:</span>x<span class=\\"token punctuation\\">)</span>\\nrdd3<span class=\\"token punctuation\\">.</span>collect<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span>acmlt<span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"王新宇"},"autoDesc":true}');export{n as data};
