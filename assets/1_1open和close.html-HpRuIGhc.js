const e=JSON.parse('{"key":"v-60293d2e","path":"/4%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/2c%E8%AF%AD%E8%A8%80/7IO/1_1open%E5%92%8Cclose.html","title":"基础","lang":"zh-CN","frontmatter":{"description":"基础 printl()函数底层调用的是write()函数 文件描述符 Linux中会将所有的设备都当做文件来处理,每个文件对应一个文件描述符(file descriptor).所有的I/O操作都会调用文件描述符. 比如文件描述符0对应的是标准输入,就是我们的键盘. 文件描述符1对应的是标准输出,就是我们的console. 可以使用exec命令来改变文件描述符对应的文件(设备) exec 1 &gt; test 查看系统级别最大打开文件数sysctl -a | grep fs.file-max 197185 查看用户级别最大打开文件数ulimit -n 1024 也就是说系统为了不让某个进程占用全部文件描述符,设置了用户级别限制,所以可以通过更改用户级别限制来优化服务器","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/4%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/2c%E8%AF%AD%E8%A8%80/7IO/1_1open%E5%92%8Cclose.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"基础"}],["meta",{"property":"og:description","content":"基础 printl()函数底层调用的是write()函数 文件描述符 Linux中会将所有的设备都当做文件来处理,每个文件对应一个文件描述符(file descriptor).所有的I/O操作都会调用文件描述符. 比如文件描述符0对应的是标准输入,就是我们的键盘. 文件描述符1对应的是标准输出,就是我们的console. 可以使用exec命令来改变文件描述符对应的文件(设备) exec 1 &gt; test 查看系统级别最大打开文件数sysctl -a | grep fs.file-max 197185 查看用户级别最大打开文件数ulimit -n 1024 也就是说系统为了不让某个进程占用全部文件描述符,设置了用户级别限制,所以可以通过更改用户级别限制来优化服务器"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-24T12:46:58.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2025-02-24T12:46:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"基础\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-24T12:46:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[{"level":2,"title":"open","slug":"open","link":"#open","children":[]}],"git":{"createdTime":1740401218000,"updatedTime":1740401218000,"contributors":[{"name":"Claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":2.09,"words":628},"filePathRelative":"4编程语言/2c语言/7IO/1_1open和close.md","localizedDate":"2025年2月24日","excerpt":"<h1> 基础</h1>\\n<p><code>printl()</code>函数底层调用的是<code>write()</code>函数\\n文件描述符</p>\\n<p>Linux中会将所有的设备都当做文件来处理,每个文件对应一个文件描述符(file descriptor).所有的I/O操作都会调用文件描述符.\\n比如文件描述符0对应的是标准输入,就是我们的键盘.\\n文件描述符1对应的是标准输出,就是我们的console.\\n可以使用<code>exec</code>命令来改变文件描述符对应的文件(设备)\\n<code>exec 1 &gt; test</code></p>\\n<p>查看系统级别最大打开文件数<code>sysctl -a | grep fs.file-max</code> 197185\\n查看用户级别最大打开文件数<code>ulimit -n</code> 1024\\n也就是说系统为了不让某个进程占用全部文件描述符,设置了用户级别限制,所以可以通过更改用户级别限制来优化服务器</p>","copyright":{"author":"王新宇"},"autoDesc":true}');export{e as data};
