const t=JSON.parse('{"key":"v-a9cd22a0","path":"/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/%E9%80%9A%E7%94%A8%E7%9F%A5%E8%AF%86/io/FileDescriptor.html","title":"FileDescriptor","lang":"zh-CN","frontmatter":{"description":"FileDescriptor 文件描述符是一个非负整数，通常在C编程语言中表示为int类型(保留负值以表示“无值”或错误条件)。 在Linux上，进程中打开的一组文件描述符可以在路径/proc/pid/fd/下访问，其中PID是进程标识符。 在类似Unix的系统中，文件描述符可以引用在文件系统中命名的任何Unix文件类型。除了常规文件之外，它还包括目录、Blockand字符设备(也称为“特殊文件”)、Unix域套接字和命名管道。文件描述符还可以引用文件系统中通常不存在的其他对象，例如匿名管道和网络套接字。 系统级底层读写","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/%E9%80%9A%E7%94%A8%E7%9F%A5%E8%AF%86/io/FileDescriptor.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"FileDescriptor"}],["meta",{"property":"og:description","content":"FileDescriptor 文件描述符是一个非负整数，通常在C编程语言中表示为int类型(保留负值以表示“无值”或错误条件)。 在Linux上，进程中打开的一组文件描述符可以在路径/proc/pid/fd/下访问，其中PID是进程标识符。 在类似Unix的系统中，文件描述符可以引用在文件系统中命名的任何Unix文件类型。除了常规文件之外，它还包括目录、Blockand字符设备(也称为“特殊文件”)、Unix域套接字和命名管道。文件描述符还可以引用文件系统中通常不存在的其他对象，例如匿名管道和网络套接字。 系统级底层读写"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://claroja.github.io/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-27T13:31:52.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"FileDescriptor"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2023-11-27T13:31:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"FileDescriptor\\",\\"image\\":[\\"https://claroja.github.io/\\"],\\"dateModified\\":\\"2023-11-27T13:31:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[{"level":2,"title":"系统级底层读写","slug":"系统级底层读写","link":"#系统级底层读写","children":[]},{"level":2,"title":"用户级高级读写","slug":"用户级高级读写","link":"#用户级高级读写","children":[]}],"git":{"createdTime":1701091021000,"updatedTime":1701091912000,"contributors":[{"name":"claroja","email":"63183535@qq.com","commits":2}]},"readingTime":{"minutes":1.49,"words":448},"filePathRelative":"编程基础/通用知识/io/FileDescriptor.md","localizedDate":"2023年11月27日","excerpt":"<h1> FileDescriptor</h1>\\n<p>文件描述符是一个非负整数，通常在C编程语言中表示为int类型(保留负值以表示“无值”或错误条件)。\\n在Linux上，进程中打开的一组文件描述符可以在路径/proc/pid/fd/下访问，其中PID是进程标识符。\\n在类似Unix的系统中，文件描述符可以引用在文件系统中命名的任何Unix文件类型。除了常规文件之外，它还包括目录、Blockand字符设备(也称为“特殊文件”)、Unix域套接字和命名管道。文件描述符还可以引用文件系统中通常不存在的其他对象，例如匿名管道和网络套接字。</p>\\n<p>\\n</p>\\n<h2> 系统级底层读写</h2>\\n","copyright":{"author":"王新宇"},"autoDesc":true}');export{t as data};
