const n=JSON.parse('{"key":"v-1bdb8873","path":"/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/6%E6%96%B9%E6%B3%95(function)/%E8%A3%85%E9%A5%B0%E5%99%A8.html","title":"dec","lang":"zh-CN","frontmatter":{"description":"dec 基础知识 想理解装饰器，就得知道以下两点： 闭包特性（内函数能捕捉到外函数的环境变量） def line(a, b): # 生成了一个确定了ab的线性函数，结果只需要给x值就可以判断y值 def line(x): return a*x + b return line # 返回值为闭包，就是内层函数 line1 = line(1, 1) # 用line1接受a=1，b=1的闭包函数 line2 = line(-1, 1) # 用line2接收a=1，b=-1的闭包函数 line1(1) # 2 line2(1) # 0","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/6%E6%96%B9%E6%B3%95(function)/%E8%A3%85%E9%A5%B0%E5%99%A8.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"dec"}],["meta",{"property":"og:description","content":"dec 基础知识 想理解装饰器，就得知道以下两点： 闭包特性（内函数能捕捉到外函数的环境变量） def line(a, b): # 生成了一个确定了ab的线性函数，结果只需要给x值就可以判断y值 def line(x): return a*x + b return line # 返回值为闭包，就是内层函数 line1 = line(1, 1) # 用line1接受a=1，b=1的闭包函数 line2 = line(-1, 1) # 用line2接收a=1，b=-1的闭包函数 line1(1) # 2 line2(1) # 0"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-01T12:59:38.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2023-12-01T12:59:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"dec\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-12-01T12:59:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[{"level":2,"title":"基础知识","slug":"基础知识","link":"#基础知识","children":[]},{"level":2,"title":"原理","slug":"原理","link":"#原理","children":[]},{"level":2,"title":"return","slug":"return","link":"#return","children":[]},{"level":2,"title":"给被装饰函数传参","slug":"给被装饰函数传参","link":"#给被装饰函数传参","children":[]},{"level":2,"title":"装饰器传入参数","slug":"装饰器传入参数","link":"#装饰器传入参数","children":[]},{"level":2,"title":"多层装饰器","slug":"多层装饰器","link":"#多层装饰器","children":[]}],"git":{"createdTime":1701435578000,"updatedTime":1701435578000,"contributors":[{"name":"claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":2.75,"words":824},"filePathRelative":"编程语言/python/6方法(function)/装饰器.md","localizedDate":"2023年12月1日","excerpt":"<h1> dec</h1>\\n<h2> 基础知识</h2>\\n<p>想理解装饰器，就得知道以下两点：</p>\\n<ul>\\n<li>闭包特性（内函数能捕捉到外函数的环境变量）</li>\\n</ul>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">def</span> <span class=\\"token function\\">line</span><span class=\\"token punctuation\\">(</span>a<span class=\\"token punctuation\\">,</span> b<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span> <span class=\\"token comment\\"># 生成了一个确定了ab的线性函数，结果只需要给x值就可以判断y值</span>\\n    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">line</span><span class=\\"token punctuation\\">(</span>x<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token keyword\\">return</span> a<span class=\\"token operator\\">*</span>x <span class=\\"token operator\\">+</span> b\\n    <span class=\\"token keyword\\">return</span> line <span class=\\"token comment\\"># 返回值为闭包，就是内层函数</span>\\nline1 <span class=\\"token operator\\">=</span> line<span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\"># 用line1接受a=1，b=1的闭包函数</span>\\nline2 <span class=\\"token operator\\">=</span> line<span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">-</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\"># 用line2接收a=1，b=-1的闭包函数</span>\\n\\nline1<span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span>  <span class=\\"token comment\\"># 2</span>\\nline2<span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span>  <span class=\\"token comment\\"># 0</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"王新宇"},"autoDesc":true}');export{n as data};
