const e=JSON.parse('{"key":"v-5f87e588","path":"/2%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1%E9%80%9A%E7%94%A8%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/socket.html","title":"socket","lang":"zh-CN","frontmatter":{"description":"socket socket 本地的进程间通信（IPC） 有很多种⽅式队列, 同步（互斥锁、 条件变量等）. 在本地可以通过进程PID来唯⼀标识⼀个进程， 但是在⽹络中这是⾏不通的。 ⽹络层的“ip地址”可以唯⼀ 标识⽹络中的主机， ⽽传输层的“协议+端⼝”可以唯⼀标识主机中的应⽤程序（进程） 。这样利⽤ ip地址， 协议， 端⼝ 就可以标识⽹络的进程了， ⽹络中的进程通信就可以利⽤这个标志与其它进程进⾏交互. 创建 socket.socket(AddressFamily, Type)","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/2%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1%E9%80%9A%E7%94%A8%E7%9F%A5%E8%AF%86/%E7%BD%91%E7%BB%9C/socket.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"socket"}],["meta",{"property":"og:description","content":"socket socket 本地的进程间通信（IPC） 有很多种⽅式队列, 同步（互斥锁、 条件变量等）. 在本地可以通过进程PID来唯⼀标识⼀个进程， 但是在⽹络中这是⾏不通的。 ⽹络层的“ip地址”可以唯⼀ 标识⽹络中的主机， ⽽传输层的“协议+端⼝”可以唯⼀标识主机中的应⽤程序（进程） 。这样利⽤ ip地址， 协议， 端⼝ 就可以标识⽹络的进程了， ⽹络中的进程通信就可以利⽤这个标志与其它进程进⾏交互. 创建 socket.socket(AddressFamily, Type)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-21T12:59:55.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2025-02-21T12:59:55.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"socket\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-21T12:59:55.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[{"level":2,"title":"socket","slug":"socket-1","link":"#socket-1","children":[{"level":3,"title":"创建","slug":"创建","link":"#创建","children":[]}]}],"git":{"createdTime":1740142795000,"updatedTime":1740142795000,"contributors":[{"name":"Claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":0.7,"words":210},"filePathRelative":"2编程语言/1通用知识/网络/socket.md","localizedDate":"2025年2月21日","excerpt":"<h1> socket</h1>\\n<h2> socket</h2>\\n<p>本地的进程间通信（IPC） 有很多种⽅式队列, 同步（互斥锁、 条件变量等）.\\n在本地可以通过进程PID来唯⼀标识⼀个进程， 但是在⽹络中这是⾏不通的。 ⽹络层的“ip地址”可以唯⼀\\n标识⽹络中的主机， ⽽传输层的“协议+端⼝”可以唯⼀标识主机中的应⽤程序（进程） 。这样利⽤ ip地址， 协议， 端⼝ 就可以标识⽹络的进程了， ⽹络中的进程通信就可以利⽤这个标志与其它进程进⾏交互.</p>\\n<h3> 创建</h3>\\n<p><code>socket.socket(AddressFamily, Type)</code></p>","copyright":{"author":"王新宇"},"autoDesc":true}');export{e as data};
