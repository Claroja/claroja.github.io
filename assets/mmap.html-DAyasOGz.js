const e=JSON.parse('{"key":"v-7bf9be05","path":"/2%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/3python/9%E8%BF%9B%E7%A8%8B/mmap.html","title":"mmap","lang":"zh-CN","frontmatter":{"description":"mmap 本质： 将文件映射到内存，进行直接对内存进行读写（当关闭mmap时内存映射才写入到文件，中间的操作都是在内存） 优点： 1.直接读写内存，不需要任何数据拷贝。管道消息队列需要在内核和用户空间进行四次数据拷贝，而共享内存只拷贝两次数据（一次是文件到共享内存，一次是从共享内存到输出文件上） 缺点： Windows: mmap(fileno, length[, tagname[, access[, offset]]]) Unix: mmap(fileno, length[, flags[, prot[, access[, offset]]]])","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/2%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/3python/9%E8%BF%9B%E7%A8%8B/mmap.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"mmap"}],["meta",{"property":"og:description","content":"mmap 本质： 将文件映射到内存，进行直接对内存进行读写（当关闭mmap时内存映射才写入到文件，中间的操作都是在内存） 优点： 1.直接读写内存，不需要任何数据拷贝。管道消息队列需要在内核和用户空间进行四次数据拷贝，而共享内存只拷贝两次数据（一次是文件到共享内存，一次是从共享内存到输出文件上） 缺点： Windows: mmap(fileno, length[, tagname[, access[, offset]]]) Unix: mmap(fileno, length[, flags[, prot[, access[, offset]]]])"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-21T12:59:55.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2025-02-21T12:59:55.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"mmap\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-21T12:59:55.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[{"level":2,"title":"1.基本使用","slug":"_1-基本使用","link":"#_1-基本使用","children":[]},{"level":2,"title":"2.父子进程通信","slug":"_2-父子进程通信","link":"#_2-父子进程通信","children":[]},{"level":2,"title":"3.无关进程linux的通信","slug":"_3-无关进程linux的通信","link":"#_3-无关进程linux的通信","children":[]},{"level":2,"title":"4.无关进程win通信","slug":"_4-无关进程win通信","link":"#_4-无关进程win通信","children":[]}],"git":{"createdTime":1740142795000,"updatedTime":1740142795000,"contributors":[{"name":"Claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":2.59,"words":777},"filePathRelative":"2编程语言/3python/9进程/mmap.md","localizedDate":"2025年2月21日","excerpt":"<h1> mmap</h1>\\n<p>本质：\\n将文件映射到内存，进行直接对内存进行读写（当关闭mmap时内存映射才写入到文件，中间的操作都是在内存）\\n优点：\\n1.直接读写内存，不需要任何数据拷贝。管道消息队列需要在内核和用户空间进行四次数据拷贝，而共享内存只拷贝两次数据（一次是文件到共享内存，一次是从共享内存到输出文件上）\\n缺点：</p>\\n<p><code>Windows: mmap(fileno, length[, tagname[, access[, offset]]])</code>\\n<code>Unix: mmap(fileno, length[, flags[, prot[, access[, offset]]]])</code></p>","copyright":{"author":"王新宇"},"autoDesc":true}');export{e as data};
