const o=JSON.parse('{"key":"v-136d8afc","path":"/6%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/1BOM/%E5%85%B6%E4%BB%96/%E4%BA%8B%E4%BB%B6.html","title":"事件","lang":"zh-CN","frontmatter":{"description":"事件 window.onload 是窗口 (页面）加载事件,当文档内容完全加载完成会触发该事件(包括图像、脚本文件、CSS 文件等), 就调用的处理函数。 语法: window.onload = function(){} 或者 window.addEventListener(\\"load\\",function(){}); 注意： 有了 window.onload 就可以把 JS 代码写到页面元素的上方，因为 onload 是等页面内容全部加载完毕，再去执行处理函数。 window.onload 传统注册事件方式 只能写一次，如果有多个，会以最后一个 window.onload 为准。 如果使用 addEventListener 则没有限制","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/6%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/1BOM/%E5%85%B6%E4%BB%96/%E4%BA%8B%E4%BB%B6.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"事件"}],["meta",{"property":"og:description","content":"事件 window.onload 是窗口 (页面）加载事件,当文档内容完全加载完成会触发该事件(包括图像、脚本文件、CSS 文件等), 就调用的处理函数。 语法: window.onload = function(){} 或者 window.addEventListener(\\"load\\",function(){}); 注意： 有了 window.onload 就可以把 JS 代码写到页面元素的上方，因为 onload 是等页面内容全部加载完毕，再去执行处理函数。 window.onload 传统注册事件方式 只能写一次，如果有多个，会以最后一个 window.onload 为准。 如果使用 addEventListener 则没有限制"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-24T12:46:58.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2025-02-24T12:46:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"事件\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-24T12:46:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[{"level":2,"title":"事件","slug":"事件-1","link":"#事件-1","children":[{"level":3,"title":"load","slug":"load","link":"#load","children":[]},{"level":3,"title":"error","slug":"error","link":"#error","children":[]}]}],"git":{"createdTime":1740401218000,"updatedTime":1740401218000,"contributors":[{"name":"Claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":1.75,"words":525},"filePathRelative":"6前端开发/1BOM/其他/事件.md","localizedDate":"2025年2月24日","excerpt":"<h1> 事件</h1>\\n<p>window.onload 是窗口 (页面）加载事件,当文档内容完全加载完成会触发该事件(包括图像、脚本文件、CSS 文件等), 就调用的处理函数。\\n语法:\\n<code>window.onload = function(){}</code>\\n或者\\n<code>window.addEventListener(\\"load\\",function(){});</code></p>\\n<p>注意：</p>\\n<ol>\\n<li>有了 window.onload 就可以把 JS 代码写到页面元素的上方，因为 onload 是等页面内容全部加载完毕，再去执行处理函数。</li>\\n<li>window.onload 传统注册事件方式 只能写一次，如果有多个，会以最后一个 window.onload 为准。</li>\\n<li>如果使用 addEventListener 则没有限制</li>\\n</ol>","copyright":{"author":"王新宇"},"autoDesc":true}');export{o as data};
