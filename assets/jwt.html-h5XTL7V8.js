const n=JSON.parse(`{"key":"v-0e6e1712","path":"/7%E5%90%8E%E7%AB%AF/1flask/flask_jwt/jwt.html","title":"jwt","lang":"zh-CN","frontmatter":{"description":"jwt flask_jwt_extended基础使用 python服务启动 from flask_jwt_extended import create_access_token, get_jwt, get_jwt_header, get_jwt_identity from flask_jwt_extended import jwt_required from flask_jwt_extended import JWTManager from flask import Flask from flask import jsonify from datetime import timedelta app = Flask(__name__) jwt = JWTManager(app) app.config['JWT_SECRET_KEY'] = 'salt' # 加密盐值 @app.route('/login',methods=['POST']) def login(): access_token = create_access_token( identity={'id': 1, 'username': 'wang'}, fresh=False, expires_delta=timedelta(seconds=60), additional_claims={'claims': 'claims'}, additional_headers={\\"header\\": \\"header\\"}, ) return jsonify(access_token=access_token) @app.route('/index',methods=['GET']) @jwt_required() def index(): return jsonify({ \\"get_jwt()\\": get_jwt(), \\"get_jwt_identity()\\": get_jwt_identity(), \\"get_jwt_header()\\": get_jwt_header(), }) if __name__ == '__main__': app.run()","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/7%E5%90%8E%E7%AB%AF/1flask/flask_jwt/jwt.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"jwt"}],["meta",{"property":"og:description","content":"jwt flask_jwt_extended基础使用 python服务启动 from flask_jwt_extended import create_access_token, get_jwt, get_jwt_header, get_jwt_identity from flask_jwt_extended import jwt_required from flask_jwt_extended import JWTManager from flask import Flask from flask import jsonify from datetime import timedelta app = Flask(__name__) jwt = JWTManager(app) app.config['JWT_SECRET_KEY'] = 'salt' # 加密盐值 @app.route('/login',methods=['POST']) def login(): access_token = create_access_token( identity={'id': 1, 'username': 'wang'}, fresh=False, expires_delta=timedelta(seconds=60), additional_claims={'claims': 'claims'}, additional_headers={\\"header\\": \\"header\\"}, ) return jsonify(access_token=access_token) @app.route('/index',methods=['GET']) @jwt_required() def index(): return jsonify({ \\"get_jwt()\\": get_jwt(), \\"get_jwt_identity()\\": get_jwt_identity(), \\"get_jwt_header()\\": get_jwt_header(), }) if __name__ == '__main__': app.run()"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-21T12:59:55.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2025-02-21T12:59:55.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"jwt\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-21T12:59:55.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[{"level":2,"title":"python服务启动","slug":"python服务启动","link":"#python服务启动","children":[]},{"level":2,"title":"没有token,访问返回未授权","slug":"没有token-访问返回未授权","link":"#没有token-访问返回未授权","children":[]},{"level":2,"title":"访问登陆路由/login, 获得token","slug":"访问登陆路由-login-获得token","link":"#访问登陆路由-login-获得token","children":[{"level":3,"title":"第一部分: HEADER:ALGORITHM & TOKEN TYPE, 头部","slug":"第一部分-header-algorithm-token-type-头部","link":"#第一部分-header-algorithm-token-type-头部","children":[]},{"level":3,"title":"第二部分: PAYLOAD:DATA, 数据","slug":"第二部分-payload-data-数据","link":"#第二部分-payload-data-数据","children":[]},{"level":3,"title":"第三部分, VERIFY SIGNATURE签名信息","slug":"第三部分-verify-signature签名信息","link":"#第三部分-verify-signature签名信息","children":[]}]},{"level":2,"title":"带着token成功访问被保护的路由/index","slug":"带着token成功访问被保护的路由-index","link":"#带着token成功访问被保护的路由-index","children":[]},{"level":2,"title":"token过期","slug":"token过期","link":"#token过期","children":[]}],"git":{"createdTime":1740142795000,"updatedTime":1740142795000,"contributors":[{"name":"Claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":2.49,"words":746},"filePathRelative":"7后端/1flask/flask_jwt/jwt.md","localizedDate":"2025年2月21日","excerpt":"<h1> jwt</h1>\\n<p>flask_jwt_extended基础使用</p>\\n<h2> python服务启动</h2>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">from</span> flask_jwt_extended <span class=\\"token keyword\\">import</span> create_access_token<span class=\\"token punctuation\\">,</span> get_jwt<span class=\\"token punctuation\\">,</span> get_jwt_header<span class=\\"token punctuation\\">,</span> get_jwt_identity\\n<span class=\\"token keyword\\">from</span> flask_jwt_extended <span class=\\"token keyword\\">import</span> jwt_required\\n<span class=\\"token keyword\\">from</span> flask_jwt_extended <span class=\\"token keyword\\">import</span> JWTManager\\n\\n<span class=\\"token keyword\\">from</span> flask <span class=\\"token keyword\\">import</span> Flask\\n<span class=\\"token keyword\\">from</span> flask <span class=\\"token keyword\\">import</span> jsonify\\n<span class=\\"token keyword\\">from</span> datetime <span class=\\"token keyword\\">import</span> timedelta\\n\\n\\napp <span class=\\"token operator\\">=</span> Flask<span class=\\"token punctuation\\">(</span>__name__<span class=\\"token punctuation\\">)</span>\\njwt <span class=\\"token operator\\">=</span> JWTManager<span class=\\"token punctuation\\">(</span>app<span class=\\"token punctuation\\">)</span>\\n\\napp<span class=\\"token punctuation\\">.</span>config<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'JWT_SECRET_KEY'</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'salt'</span>  <span class=\\"token comment\\"># 加密盐值</span>\\n\\n<span class=\\"token decorator annotation punctuation\\">@app<span class=\\"token punctuation\\">.</span>route</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'/login'</span><span class=\\"token punctuation\\">,</span>methods<span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'POST'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">def</span> <span class=\\"token function\\">login</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    access_token <span class=\\"token operator\\">=</span> create_access_token<span class=\\"token punctuation\\">(</span>\\n        identity<span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">{</span><span class=\\"token string\\">'id'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'username'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'wang'</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n        fresh<span class=\\"token operator\\">=</span><span class=\\"token boolean\\">False</span><span class=\\"token punctuation\\">,</span>\\n        expires_delta<span class=\\"token operator\\">=</span>timedelta<span class=\\"token punctuation\\">(</span>seconds<span class=\\"token operator\\">=</span><span class=\\"token number\\">60</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n        additional_claims<span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">{</span><span class=\\"token string\\">'claims'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'claims'</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n        additional_headers<span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">{</span><span class=\\"token string\\">\\"header\\"</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">\\"header\\"</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">return</span> jsonify<span class=\\"token punctuation\\">(</span>access_token<span class=\\"token operator\\">=</span>access_token<span class=\\"token punctuation\\">)</span>\\n\\n\\n<span class=\\"token decorator annotation punctuation\\">@app<span class=\\"token punctuation\\">.</span>route</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'/index'</span><span class=\\"token punctuation\\">,</span>methods<span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'GET'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token decorator annotation punctuation\\">@jwt_required</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">def</span> <span class=\\"token function\\">index</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token keyword\\">return</span> jsonify<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token string\\">\\"get_jwt()\\"</span><span class=\\"token punctuation\\">:</span> get_jwt<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token string\\">\\"get_jwt_identity()\\"</span><span class=\\"token punctuation\\">:</span> get_jwt_identity<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token string\\">\\"get_jwt_header()\\"</span><span class=\\"token punctuation\\">:</span> get_jwt_header<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n\\n\\n<span class=\\"token keyword\\">if</span> __name__ <span class=\\"token operator\\">==</span> <span class=\\"token string\\">'__main__'</span><span class=\\"token punctuation\\">:</span>\\n    app<span class=\\"token punctuation\\">.</span>run<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"王新宇"},"autoDesc":true}`);export{n as data};
