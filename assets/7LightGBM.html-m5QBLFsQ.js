import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,a as t}from"./app-nD1Z-e8V.js";const e={},p=t(`<p>LightGBM是微软推出的boosting框架,</p><h2 id="优点" tabindex="-1"><a class="header-anchor" href="#优点" aria-hidden="true">#</a> 优点</h2><ol><li>速度更快 <ol><li>LightGBM 采用了直方图算法将遍历样本转变为遍历直方图，极大的降低了时间复杂度</li><li>LightGBM 在训练过程中采用单边梯度算法过滤掉梯度小的样本，减少了大量的计算</li><li>LightGBM 采用了基于 Leaf-wise 算法的增长策略构建树，减少了很多不必要的计算量</li><li>LightGBM 采用优化后的特征并行、数据并行方法加速计算，当数据量非常大的时候还可以采用投票并行的策略</li><li>LightGBM 对缓存也进行了优化，增加了缓存命中率</li></ol></li><li>内存更小 <ol><li>XGBoost使用预排序后需要记录特征值及其对应样本的统计值的索引，而 LightGBM 使用了直方图算法将特征值转变为 bin 值，且不需要记录特征到样本的索引，将空间复杂度从 O(2*data) 降低为 O(bin) ，极大的减少了内存消耗</li><li>LightGBM 采用了直方图算法将存储特征值转变为存储 bin 值，降低了内存消耗</li><li>LightGBM 在训练过程中采用互斥特征捆绑算法减少了特征数量，降低了内存消耗</li></ol></li></ol><h2 id="缺点" tabindex="-1"><a class="header-anchor" href="#缺点" aria-hidden="true">#</a> 缺点</h2><ol><li>可能会长出比较深的决策树，产生过拟合。因此LightGBM在Leaf-wise之上增加了一个最大深度限制，在保证高效率的同时防止过拟合</li><li>Boosting族是迭代算法，每一次迭代都根据上一次迭代的预测结果对样本进行权重调整，所以随着迭代不断进行，误差会越来越小，模型的偏差（bias）会不断降低。由于LightGBM是基于偏差的算法，所以会对噪点较为敏感</li><li>在寻找最优解时，依据的是最优切分变量，没有将最优解是全部特征的综合这一理念考虑进去</li></ol><h2 id="lightgbm调参" tabindex="-1"><a class="header-anchor" href="#lightgbm调参" aria-hidden="true">#</a> LightGBM调参</h2><h3 id="控制参数" tabindex="-1"><a class="header-anchor" href="#控制参数" aria-hidden="true">#</a> 控制参数</h3><table><thead><tr><th>Control Parameters</th><th>含义</th><th>用法</th></tr></thead><tbody><tr><td><code>max_depth</code></td><td>树的最大深度</td><td>当模型过拟合时,可以考虑首先降低 <code>max_depth</code></td></tr><tr><td><code>min_data_in_leaf</code></td><td>叶子可能具有的最小记录数</td><td>默认20，过拟合时用</td></tr><tr><td><code>feature_fraction</code></td><td>例如 为0.8时，意味着在每次迭代中随机选择80％的参数来建树</td><td>boosting 为 random forest 时用</td></tr><tr><td><code>bagging_fraction</code></td><td>每次迭代时用的数据比例</td><td>用于加快训练速度和减小过拟合</td></tr><tr><td><code>early_stopping_round</code></td><td>如果一次验证数据的一个度量在最近的<code>early_stopping_round</code> 回合中没有提高，模型将停止训练</td><td>加速分析，减少过多迭代</td></tr><tr><td>lambda</td><td>指定正则化</td><td>0～1</td></tr><tr><td><code>min_gain_to_split</code></td><td>描述分裂的最小 gain</td><td>控制树的有用的分裂</td></tr><tr><td><code>max_cat_group</code></td><td>在 group 边界上找到分割点</td><td>当类别数量很多时，找分割点很</td></tr></tbody></table><h3 id="核心参数" tabindex="-1"><a class="header-anchor" href="#核心参数" aria-hidden="true">#</a> 核心参数</h3><table><thead><tr><th>CoreParameters</th><th>含义</th><th>用法</th></tr></thead><tbody><tr><td>Task</td><td>数据的用途</td><td>选择 train 或者 predict</td></tr><tr><td>application</td><td>模型的用途</td><td>选择 regression: 回归时，binary: 二分类时，multiclass: 多分类时</td></tr><tr><td>boosting</td><td>要用的算法</td><td>gbdt， rf: random forest， dart: Dropouts meet Multiple Additive Regression Trees， goss: <code>Gradient-based One-Side Sampling</code></td></tr><tr><td><code>num_boost_round</code></td><td>迭代次数</td><td>通常 100+</td></tr><tr><td><code>learning_rate</code></td><td>如果一次验证数据的一个度量在最近的 <code>early_stopping_round</code> 回合中没有提高，模型将停止训练</td><td>常用 0.1, 0.001, 0.003…</td></tr><tr><td>num_leaves</td><td></td><td>默认 31</td></tr><tr><td>device</td><td></td><td>cpu 或者 gpu</td></tr><tr><td>metric</td><td></td><td>mae: mean absolute error ， mse: mean squared error ， binary_logloss: loss for binary classification ， multi_logloss: loss for multi classification</td></tr></tbody></table><h3 id="io参数" tabindex="-1"><a class="header-anchor" href="#io参数" aria-hidden="true">#</a> IO参数</h3><table><thead><tr><th>IO parameter</th><th>含义</th></tr></thead><tbody><tr><td><code>max_bin</code></td><td>表示 feature 将存入的 bin 的最大数量</td></tr><tr><td><code>categorical_feature</code></td><td>如果 <code>categorical_features = 0,1,2</code>， 则列 0，1，2是 categorical 变量</td></tr><tr><td><code>ignore_column</code></td><td>与 <code>categorical_features</code> 类似，只不过不是将特定的列视为categorical，而是完全忽略</td></tr><tr><td><code>save_binary</code></td><td>这个参数为 true 时，则数据集被保存为二进制文件，下次读数据时速度会变快</td></tr></tbody></table><h3 id="调参" tabindex="-1"><a class="header-anchor" href="#调参" aria-hidden="true">#</a> 调参</h3><table><thead><tr><th>IO parameter</th><th>含义</th></tr></thead><tbody><tr><td><code>num_leaves</code></td><td>取值应 <code>&lt;= 2 ^（max_depth）</code>， 超过此值会导致过拟合</td></tr><tr><td><code>min_data_in_leaf</code></td><td>将它设置为较大的值可以避免生长太深的树，但可能会导致 underfitting，在大型数据集时就设置为数百或数千</td></tr><tr><td><code>max_depth</code></td><td>这个也是可以限制树的深度</td></tr></tbody></table><p>下表对应了 Faster Speed ，better accuracy ，over-fitting 三种目的时，可以调的参数：</p><table><thead><tr><th>Faster Speed</th><th>better accuracy</th><th>over-fitting</th></tr></thead><tbody><tr><td>将 <code>max_bin</code> 设置小一些</td><td>用较大的 <code>max_bin</code></td><td><code>max_bin</code> 小一些</td></tr><tr><td></td><td><code>num_leaves</code> 大一些</td><td><code>num_leaves</code> 小一些</td></tr><tr><td>用 <code>feature_fraction</code> 来做 <code>sub-sampling</code></td><td></td><td>用 <code>feature_fraction</code></td></tr><tr><td>用 <code>bagging_fraction 和 bagging_freq</code></td><td></td><td>设定 <code>bagging_fraction 和 bagging_freq</code></td></tr><tr><td></td><td>training data 多一些</td><td>training data 多一些</td></tr><tr><td>用 <code>save_binary</code> 来加速数据加载</td><td>直接用 categorical feature</td><td>用 <code>gmin_data_in_leaf 和 min_sum_hessian_in_leaf</code></td></tr><tr><td>用 parallel learning</td><td>用 dart</td><td>用 <code>lambda_l1, lambda_l2 ，min_gain_to_split</code> 做正则化</td></tr><tr><td></td><td><code>num_iterations</code> 大一些，<code>learning_rate</code> 小一些</td><td>用 <code>max_depth</code> 控制树的深度</td></tr></tbody></table><h2 id="应用" tabindex="-1"><a class="header-anchor" href="#应用" aria-hidden="true">#</a> 应用</h2><p>LightGBM有两大类接口：LightGBM原生接口 和 scikit-learn接口 ，并且LightGBM能够实现分类和回归两种任务。</p><h3 id="基于lightgbm原生接口的分类" tabindex="-1"><a class="header-anchor" href="#基于lightgbm原生接口的分类" aria-hidden="true">#</a> 基于LightGBM原生接口的分类</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">from</span> sklearn <span class="token keyword">import</span> datasets
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>model_selection <span class="token keyword">import</span> train_test_split
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">import</span> roc_auc_score<span class="token punctuation">,</span> accuracy_score
<span class="token keyword">import</span> lightgbm <span class="token keyword">as</span> lgb

<span class="token comment"># 加载数据</span>
iris <span class="token operator">=</span> datasets<span class="token punctuation">.</span>load_iris<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># 划分训练集和测试集</span>
X_train<span class="token punctuation">,</span> X_test<span class="token punctuation">,</span> y_train<span class="token punctuation">,</span> y_test <span class="token operator">=</span> train_test_split<span class="token punctuation">(</span>iris<span class="token punctuation">.</span>data<span class="token punctuation">,</span> iris<span class="token punctuation">.</span>target<span class="token punctuation">,</span> test_size<span class="token operator">=</span><span class="token number">0.3</span><span class="token punctuation">)</span>

<span class="token comment"># 转换为Dataset数据格式</span>
train_data <span class="token operator">=</span> lgb<span class="token punctuation">.</span>Dataset<span class="token punctuation">(</span>X_train<span class="token punctuation">,</span> label<span class="token operator">=</span>y_train<span class="token punctuation">)</span>
validation_data <span class="token operator">=</span> lgb<span class="token punctuation">.</span>Dataset<span class="token punctuation">(</span>X_test<span class="token punctuation">,</span> label<span class="token operator">=</span>y_test<span class="token punctuation">)</span>

<span class="token comment"># 参数</span>
params <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;learning_rate&#39;</span><span class="token punctuation">:</span> <span class="token number">0.1</span><span class="token punctuation">,</span>
    <span class="token string">&#39;lambda_l1&#39;</span><span class="token punctuation">:</span> <span class="token number">0.1</span><span class="token punctuation">,</span>
    <span class="token string">&#39;lambda_l2&#39;</span><span class="token punctuation">:</span> <span class="token number">0.2</span><span class="token punctuation">,</span>
    <span class="token string">&#39;max_depth&#39;</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
    <span class="token string">&#39;objective&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;multiclass&#39;</span><span class="token punctuation">,</span>  <span class="token comment"># 目标函数</span>
    <span class="token string">&#39;num_class&#39;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment"># 模型训练</span>
gbm <span class="token operator">=</span> lgb<span class="token punctuation">.</span>train<span class="token punctuation">(</span>params<span class="token punctuation">,</span> train_data<span class="token punctuation">,</span> valid_sets<span class="token operator">=</span><span class="token punctuation">[</span>validation_data<span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment"># 模型预测</span>
y_pred <span class="token operator">=</span> gbm<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X_test<span class="token punctuation">)</span>
y_pred <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">list</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token builtin">max</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">for</span> x <span class="token keyword">in</span> y_pred<span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>y_pred<span class="token punctuation">)</span>

<span class="token comment"># 模型评估</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>accuracy_score<span class="token punctuation">(</span>y_test<span class="token punctuation">,</span> y_pred<span class="token punctuation">)</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="基于scikit-learn接口的分类" tabindex="-1"><a class="header-anchor" href="#基于scikit-learn接口的分类" aria-hidden="true">#</a> 基于Scikit-learn接口的分类</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> lightgbm <span class="token keyword">import</span> LGBMClassifier
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">import</span> accuracy_score
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>model_selection <span class="token keyword">import</span> GridSearchCV
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>datasets <span class="token keyword">import</span> load_iris
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>model_selection <span class="token keyword">import</span> train_test_split
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>externals <span class="token keyword">import</span> joblib

<span class="token comment"># 加载数据</span>
iris <span class="token operator">=</span> load_iris<span class="token punctuation">(</span><span class="token punctuation">)</span>
data <span class="token operator">=</span> iris<span class="token punctuation">.</span>data
target <span class="token operator">=</span> iris<span class="token punctuation">.</span>target

<span class="token comment"># 划分训练数据和测试数据</span>
X_train<span class="token punctuation">,</span> X_test<span class="token punctuation">,</span> y_train<span class="token punctuation">,</span> y_test <span class="token operator">=</span> train_test_split<span class="token punctuation">(</span>data<span class="token punctuation">,</span> target<span class="token punctuation">,</span> test_size<span class="token operator">=</span><span class="token number">0.2</span><span class="token punctuation">)</span>

<span class="token comment"># 模型训练</span>
gbm <span class="token operator">=</span> LGBMClassifier<span class="token punctuation">(</span>num_leaves<span class="token operator">=</span><span class="token number">31</span><span class="token punctuation">,</span> learning_rate<span class="token operator">=</span><span class="token number">0.05</span><span class="token punctuation">,</span> n_estimators<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span>
gbm<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X_train<span class="token punctuation">,</span> y_train<span class="token punctuation">,</span> eval_set<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">(</span>X_test<span class="token punctuation">,</span> y_test<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> early_stopping_rounds<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>

<span class="token comment"># 模型存储</span>
joblib<span class="token punctuation">.</span>dump<span class="token punctuation">(</span>gbm<span class="token punctuation">,</span> <span class="token string">&#39;loan_model.pkl&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># 模型加载</span>
gbm <span class="token operator">=</span> joblib<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token string">&#39;loan_model.pkl&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># 模型预测</span>
y_pred <span class="token operator">=</span> gbm<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X_test<span class="token punctuation">,</span> num_iteration<span class="token operator">=</span>gbm<span class="token punctuation">.</span>best_iteration_<span class="token punctuation">)</span>

<span class="token comment"># 模型评估</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;The accuracy of prediction is:&#39;</span><span class="token punctuation">,</span> accuracy_score<span class="token punctuation">(</span>y_test<span class="token punctuation">,</span> y_pred<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># 特征重要度</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Feature importances:&#39;</span><span class="token punctuation">,</span> <span class="token builtin">list</span><span class="token punctuation">(</span>gbm<span class="token punctuation">.</span>feature_importances_<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># Feature importances: [28, 6, 97, 61]</span>

<span class="token comment"># 网格搜索，参数优化</span>
estimator <span class="token operator">=</span> LGBMClassifier<span class="token punctuation">(</span>num_leaves<span class="token operator">=</span><span class="token number">31</span><span class="token punctuation">)</span>
param_grid <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;learning_rate&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">0.01</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string">&#39;n_estimators&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
gbm <span class="token operator">=</span> GridSearchCV<span class="token punctuation">(</span>estimator<span class="token punctuation">,</span> param_grid<span class="token punctuation">)</span>
gbm<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X_train<span class="token punctuation">,</span> y_train<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Best parameters found by grid search are:&#39;</span><span class="token punctuation">,</span> gbm<span class="token punctuation">.</span>best_params_<span class="token punctuation">)</span>
<span class="token comment"># Best parameters found by grid search are: {&#39;learning_rate&#39;: 0.1, &#39;n_estimators&#39;: 20}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="基于lightgbm原生接口的回归" tabindex="-1"><a class="header-anchor" href="#基于lightgbm原生接口的回归" aria-hidden="true">#</a> 基于LightGBM原生接口的回归</h3><p>对于LightGBM解决回归问题，我们用Kaggle比赛中回归问题：House Prices: Advanced Regression Techniques，地址：https://www.kaggle.com/c/house-prices-advanced-regression-techniques 来进行实例讲解。</p><p>该房价预测的训练数据集中一共有列，第一列是Id，最后一列是label，中间列是特征。这列特征中，有列是分类型变量，列是整数变量，列是浮点型变量。训练数据集中存在缺失值。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>model_selection <span class="token keyword">import</span> train_test_split
<span class="token keyword">import</span> lightgbm <span class="token keyword">as</span> lgb
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">import</span> mean_absolute_error
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">import</span> Imputer

<span class="token comment"># 1.读文件</span>
data <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&#39;./dataset/train.csv&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># 2.切分数据输入：特征 输出：预测目标变量</span>
y <span class="token operator">=</span> data<span class="token punctuation">.</span>SalePrice
X <span class="token operator">=</span> data<span class="token punctuation">.</span>drop<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;SalePrice&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>select_dtypes<span class="token punctuation">(</span>exclude<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;object&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment"># 3.切分训练集、测试集,切分比例7.5 : 2.5</span>
train_X<span class="token punctuation">,</span> test_X<span class="token punctuation">,</span> train_y<span class="token punctuation">,</span> test_y <span class="token operator">=</span> train_test_split<span class="token punctuation">(</span>X<span class="token punctuation">.</span>values<span class="token punctuation">,</span> y<span class="token punctuation">.</span>values<span class="token punctuation">,</span> test_size<span class="token operator">=</span><span class="token number">0.25</span><span class="token punctuation">)</span>

<span class="token comment"># 4.空值处理，默认方法：使用特征列的平均值进行填充</span>
my_imputer <span class="token operator">=</span> Imputer<span class="token punctuation">(</span><span class="token punctuation">)</span>
train_X <span class="token operator">=</span> my_imputer<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>train_X<span class="token punctuation">)</span>
test_X <span class="token operator">=</span> my_imputer<span class="token punctuation">.</span>transform<span class="token punctuation">(</span>test_X<span class="token punctuation">)</span>

<span class="token comment"># 5.转换为Dataset数据格式</span>
lgb_train <span class="token operator">=</span> lgb<span class="token punctuation">.</span>Dataset<span class="token punctuation">(</span>train_X<span class="token punctuation">,</span> train_y<span class="token punctuation">)</span>
lgb_eval <span class="token operator">=</span> lgb<span class="token punctuation">.</span>Dataset<span class="token punctuation">(</span>test_X<span class="token punctuation">,</span> test_y<span class="token punctuation">,</span> reference<span class="token operator">=</span>lgb_train<span class="token punctuation">)</span>

<span class="token comment"># 6.参数</span>
params <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;task&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;train&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;boosting_type&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;gbdt&#39;</span><span class="token punctuation">,</span>  <span class="token comment"># 设置提升类型</span>
    <span class="token string">&#39;objective&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;regression&#39;</span><span class="token punctuation">,</span>  <span class="token comment"># 目标函数</span>
    <span class="token string">&#39;metric&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">&#39;l2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;auc&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment"># 评估函数</span>
    <span class="token string">&#39;num_leaves&#39;</span><span class="token punctuation">:</span> <span class="token number">31</span><span class="token punctuation">,</span>  <span class="token comment"># 叶子节点数</span>
    <span class="token string">&#39;learning_rate&#39;</span><span class="token punctuation">:</span> <span class="token number">0.05</span><span class="token punctuation">,</span>  <span class="token comment"># 学习速率</span>
    <span class="token string">&#39;feature_fraction&#39;</span><span class="token punctuation">:</span> <span class="token number">0.9</span><span class="token punctuation">,</span>  <span class="token comment"># 建树的特征选择比例</span>
    <span class="token string">&#39;bagging_fraction&#39;</span><span class="token punctuation">:</span> <span class="token number">0.8</span><span class="token punctuation">,</span>  <span class="token comment"># 建树的样本采样比例</span>
    <span class="token string">&#39;bagging_freq&#39;</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span>  <span class="token comment"># k 意味着每 k 次迭代执行bagging</span>
    <span class="token string">&#39;verbose&#39;</span><span class="token punctuation">:</span> <span class="token number">1</span>  <span class="token comment"># &lt;0 显示致命的, =0 显示错误 (警告), &gt;0 显示信息</span>
<span class="token punctuation">}</span>

<span class="token comment"># 7.调用LightGBM模型，使用训练集数据进行训练（拟合）</span>
<span class="token comment"># Add verbosity=2 to print messages while running boosting</span>
my_model <span class="token operator">=</span> lgb<span class="token punctuation">.</span>train<span class="token punctuation">(</span>params<span class="token punctuation">,</span> lgb_train<span class="token punctuation">,</span> num_boost_round<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span> valid_sets<span class="token operator">=</span>lgb_eval<span class="token punctuation">,</span> early_stopping_rounds<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>

<span class="token comment"># 8.使用模型对测试集数据进行预测</span>
predictions <span class="token operator">=</span> my_model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>test_X<span class="token punctuation">,</span> num_iteration<span class="token operator">=</span>my_model<span class="token punctuation">.</span>best_iteration<span class="token punctuation">)</span>

<span class="token comment"># 9.对模型的预测结果进行评判（平均绝对误差）</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Mean Absolute Error : &quot;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>mean_absolute_error<span class="token punctuation">(</span>predictions<span class="token punctuation">,</span> test_y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># Mean Absolute Error : 55355.984107934746</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="基于scikit-learn接口的回归" tabindex="-1"><a class="header-anchor" href="#基于scikit-learn接口的回归" aria-hidden="true">#</a> 基于Scikit-learn接口的回归</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>model_selection <span class="token keyword">import</span> train_test_split
<span class="token keyword">import</span> lightgbm <span class="token keyword">as</span> lgb
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">import</span> mean_absolute_error
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">import</span> Imputer

<span class="token comment"># 1.读文件</span>
data <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&#39;./dataset/train.csv&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># 2.切分数据输入：特征 输出：预测目标变量</span>
y <span class="token operator">=</span> data<span class="token punctuation">.</span>SalePrice
X <span class="token operator">=</span> data<span class="token punctuation">.</span>drop<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;SalePrice&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>select_dtypes<span class="token punctuation">(</span>exclude<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;object&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment"># 3.切分训练集、测试集,切分比例7.5 : 2.5</span>
train_X<span class="token punctuation">,</span> test_X<span class="token punctuation">,</span> train_y<span class="token punctuation">,</span> test_y <span class="token operator">=</span> train_test_split<span class="token punctuation">(</span>X<span class="token punctuation">.</span>values<span class="token punctuation">,</span> y<span class="token punctuation">.</span>values<span class="token punctuation">,</span> test_size<span class="token operator">=</span><span class="token number">0.25</span><span class="token punctuation">)</span>

<span class="token comment"># 4.空值处理，默认方法：使用特征列的平均值进行填充</span>
my_imputer <span class="token operator">=</span> Imputer<span class="token punctuation">(</span><span class="token punctuation">)</span>
train_X <span class="token operator">=</span> my_imputer<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>train_X<span class="token punctuation">)</span>
test_X <span class="token operator">=</span> my_imputer<span class="token punctuation">.</span>transform<span class="token punctuation">(</span>test_X<span class="token punctuation">)</span>

<span class="token comment"># 5.调用LightGBM模型，使用训练集数据进行训练（拟合）</span>
<span class="token comment"># Add verbosity=2 to print messages while running boosting</span>
my_model <span class="token operator">=</span> lgb<span class="token punctuation">.</span>LGBMRegressor<span class="token punctuation">(</span>objective<span class="token operator">=</span><span class="token string">&#39;regression&#39;</span><span class="token punctuation">,</span> num_leaves<span class="token operator">=</span><span class="token number">31</span><span class="token punctuation">,</span> learning_rate<span class="token operator">=</span><span class="token number">0.05</span><span class="token punctuation">,</span> n_estimators<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span>
                             verbosity<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>
my_model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>train_X<span class="token punctuation">,</span> train_y<span class="token punctuation">,</span> verbose<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>

<span class="token comment"># 6.使用模型对测试集数据进行预测</span>
predictions <span class="token operator">=</span> my_model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>test_X<span class="token punctuation">)</span>

<span class="token comment"># 7.对模型的预测结果进行评判（平均绝对误差）</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Mean Absolute Error : &quot;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>mean_absolute_error<span class="token punctuation">(</span>predictions<span class="token punctuation">,</span> test_y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># Mean Absolute Error : 29071.590700672827</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2><ol><li>https://mayuanucas.github.io/xgboost-lightgbm/</li><li>https://www.analyticsvidhya.com/blog/2020/02/4-boosting-algorithms-machine-learning/</li></ol>`,30),o=[p];function i(c,l){return s(),a("div",null,o)}const d=n(e,[["render",i],["__file","7LightGBM.html.vue"]]);export{d as default};
