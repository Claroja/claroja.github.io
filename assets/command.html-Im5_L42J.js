const e=JSON.parse('{"key":"v-eb2864b0","path":"/%E5%BD%B1%E9%9F%B3%E5%88%B6%E4%BD%9C/manim-mobject/command.html","title":"command","lang":"zh-CN","frontmatter":{"description":"command 命令行用来生成文件, 其中render是默认选项, 可以省略 manim (render) [OPTIONS] FILE [SCENE_NAMES] 例如: manim -qm file.py SceneOne等价于manim render -qm file.py SceneOne 这条命令将在file.py中寻找SceneOne类, 使用-qm参数进行渲染. 参数 描述 -p, --preview preview, 预览, 当渲染完成后自动打开进行预览 -f, --show_in_file_browser 打开渲染文件的文件夹 `--format [png gif `-q, --quality [l m --fps, --frame_rate FLOAT 设置帧率","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/%E5%BD%B1%E9%9F%B3%E5%88%B6%E4%BD%9C/manim-mobject/command.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"command"}],["meta",{"property":"og:description","content":"command 命令行用来生成文件, 其中render是默认选项, 可以省略 manim (render) [OPTIONS] FILE [SCENE_NAMES] 例如: manim -qm file.py SceneOne等价于manim render -qm file.py SceneOne 这条命令将在file.py中寻找SceneOne类, 使用-qm参数进行渲染. 参数 描述 -p, --preview preview, 预览, 当渲染完成后自动打开进行预览 -f, --show_in_file_browser 打开渲染文件的文件夹 `--format [png gif `-q, --quality [l m --fps, --frame_rate FLOAT 设置帧率"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-28T13:15:02.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2023-11-28T13:15:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"command\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-28T13:15:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[],"git":{"createdTime":1701177302000,"updatedTime":1701177302000,"contributors":[{"name":"claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":0.46,"words":139},"filePathRelative":"影音制作/manim-mobject/command.md","localizedDate":"2023年11月28日","excerpt":"<h1> command</h1>\\n<p>命令行用来生成文件, 其中render是默认选项, 可以省略\\n<code>manim (render) [OPTIONS] FILE [SCENE_NAMES]</code>\\n例如:\\n<code>manim -qm file.py SceneOne</code>等价于<code>manim render -qm file.py SceneOne</code>\\n这条命令将在<code>file.py</code>中寻找<code>SceneOne</code>类, 使用<code>-qm</code>参数进行渲染.</p>\\n<table>\\n<thead>\\n<tr>\\n<th>参数</th>\\n<th>描述</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><code>-p, --preview</code></td>\\n<td>preview, 预览, 当渲染完成后自动打开进行预览</td>\\n</tr>\\n<tr>\\n<td><code>-f, --show_in_file_browser</code></td>\\n<td>打开渲染文件的文件夹</td>\\n</tr>\\n<tr>\\n<td>`--format [png</td>\\n<td>gif</td>\\n</tr>\\n<tr>\\n<td>`-q, --quality [l</td>\\n<td>m</td>\\n</tr>\\n<tr>\\n<td><code>--fps, --frame_rate FLOAT </code></td>\\n<td>设置帧率</td>\\n</tr>\\n</tbody>\\n</table>","copyright":{"author":"王新宇"},"autoDesc":true}');export{e as data};
