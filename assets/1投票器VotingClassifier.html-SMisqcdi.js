const s=JSON.parse(`{"key":"v-0d03ce9c","path":"/2%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/1%E7%AE%97%E6%B3%95%E5%8E%9F%E7%90%86/12%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/1%E6%8A%95%E7%A5%A8%E5%99%A8VotingClassifier.html","title":"","lang":"zh-CN","frontmatter":{"description":"最佳实践 from sklearn import svm, linear_model, neighbors, naive_bayes, ensemble, gaussian_process from xgboost import XGBClassifier from sklearn import datasets from sklearn import model_selection data = datasets.load_iris() # 以下模型均带有predict_proba方法, 均适应soft投票模式 vote_est = [ ('ada', ensemble.AdaBoostClassifier()), ('bc', ensemble.BaggingClassifier()), ('etc',ensemble.ExtraTreesClassifier()), ('gbc', ensemble.GradientBoostingClassifier()), ('rfc', ensemble.RandomForestClassifier()), ('gpc', gaussian_process.GaussianProcessClassifier()), ('lr', linear_model.LogisticRegressionCV()), ('bnb', naive_bayes.BernoulliNB()), ('gnb', naive_bayes.GaussianNB()), ('knn', neighbors.KNeighborsClassifier()), ('svc', svm.SVC(probability=True)), ('xgb', XGBClassifier()) ] # Hard Vote or majority rules vote_hard = ensemble.VotingClassifier(estimators = vote_est , voting = 'hard') vote_hard_cv = model_selection.cross_validate(vote_hard, data['data'], data['target'],) vote_hard.fit(data['data'], data['target']) # Soft Vote or weighted probabilities vote_soft = ensemble.VotingClassifier(estimators = vote_est , voting = 'soft') vote_soft_cv = model_selection.cross_validate(vote_soft, data['data'], data['target'],) vote_soft.fit(data['data'], data['target'])","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/2%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/1%E7%AE%97%E6%B3%95%E5%8E%9F%E7%90%86/12%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/1%E6%8A%95%E7%A5%A8%E5%99%A8VotingClassifier.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:description","content":"最佳实践 from sklearn import svm, linear_model, neighbors, naive_bayes, ensemble, gaussian_process from xgboost import XGBClassifier from sklearn import datasets from sklearn import model_selection data = datasets.load_iris() # 以下模型均带有predict_proba方法, 均适应soft投票模式 vote_est = [ ('ada', ensemble.AdaBoostClassifier()), ('bc', ensemble.BaggingClassifier()), ('etc',ensemble.ExtraTreesClassifier()), ('gbc', ensemble.GradientBoostingClassifier()), ('rfc', ensemble.RandomForestClassifier()), ('gpc', gaussian_process.GaussianProcessClassifier()), ('lr', linear_model.LogisticRegressionCV()), ('bnb', naive_bayes.BernoulliNB()), ('gnb', naive_bayes.GaussianNB()), ('knn', neighbors.KNeighborsClassifier()), ('svc', svm.SVC(probability=True)), ('xgb', XGBClassifier()) ] # Hard Vote or majority rules vote_hard = ensemble.VotingClassifier(estimators = vote_est , voting = 'hard') vote_hard_cv = model_selection.cross_validate(vote_hard, data['data'], data['target'],) vote_hard.fit(data['data'], data['target']) # Soft Vote or weighted probabilities vote_soft = ensemble.VotingClassifier(estimators = vote_est , voting = 'soft') vote_soft_cv = model_selection.cross_validate(vote_soft, data['data'], data['target'],) vote_soft.fit(data['data'], data['target'])"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-24T12:46:58.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2025-02-24T12:46:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-24T12:46:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[{"level":2,"title":"最佳实践","slug":"最佳实践","link":"#最佳实践","children":[]},{"level":2,"title":"VotingClassifierAPI","slug":"votingclassifierapi","link":"#votingclassifierapi","children":[]}],"git":{"createdTime":1740401218000,"updatedTime":1740401218000,"contributors":[{"name":"Claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":0.91,"words":274},"filePathRelative":"2机器学习/1算法原理/12集成学习/1投票器VotingClassifier.md","localizedDate":"2025年2月24日","excerpt":"<h2> 最佳实践</h2>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">from</span> sklearn <span class=\\"token keyword\\">import</span> svm<span class=\\"token punctuation\\">,</span> linear_model<span class=\\"token punctuation\\">,</span> neighbors<span class=\\"token punctuation\\">,</span> naive_bayes<span class=\\"token punctuation\\">,</span> ensemble<span class=\\"token punctuation\\">,</span> gaussian_process\\n<span class=\\"token keyword\\">from</span> xgboost <span class=\\"token keyword\\">import</span> XGBClassifier\\n<span class=\\"token keyword\\">from</span> sklearn <span class=\\"token keyword\\">import</span> datasets\\n<span class=\\"token keyword\\">from</span> sklearn <span class=\\"token keyword\\">import</span> model_selection\\n\\ndata <span class=\\"token operator\\">=</span> datasets<span class=\\"token punctuation\\">.</span>load_iris<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token comment\\"># 以下模型均带有predict_proba方法, 均适应soft投票模式</span>\\n\\nvote_est <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span>\\n    <span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'ada'</span><span class=\\"token punctuation\\">,</span> ensemble<span class=\\"token punctuation\\">.</span>AdaBoostClassifier<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'bc'</span><span class=\\"token punctuation\\">,</span> ensemble<span class=\\"token punctuation\\">.</span>BaggingClassifier<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'etc'</span><span class=\\"token punctuation\\">,</span>ensemble<span class=\\"token punctuation\\">.</span>ExtraTreesClassifier<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'gbc'</span><span class=\\"token punctuation\\">,</span> ensemble<span class=\\"token punctuation\\">.</span>GradientBoostingClassifier<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'rfc'</span><span class=\\"token punctuation\\">,</span> ensemble<span class=\\"token punctuation\\">.</span>RandomForestClassifier<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'gpc'</span><span class=\\"token punctuation\\">,</span> gaussian_process<span class=\\"token punctuation\\">.</span>GaussianProcessClassifier<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'lr'</span><span class=\\"token punctuation\\">,</span> linear_model<span class=\\"token punctuation\\">.</span>LogisticRegressionCV<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'bnb'</span><span class=\\"token punctuation\\">,</span> naive_bayes<span class=\\"token punctuation\\">.</span>BernoulliNB<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'gnb'</span><span class=\\"token punctuation\\">,</span> naive_bayes<span class=\\"token punctuation\\">.</span>GaussianNB<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'knn'</span><span class=\\"token punctuation\\">,</span> neighbors<span class=\\"token punctuation\\">.</span>KNeighborsClassifier<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'svc'</span><span class=\\"token punctuation\\">,</span> svm<span class=\\"token punctuation\\">.</span>SVC<span class=\\"token punctuation\\">(</span>probability<span class=\\"token operator\\">=</span><span class=\\"token boolean\\">True</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'xgb'</span><span class=\\"token punctuation\\">,</span> XGBClassifier<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">]</span>\\n<span class=\\"token comment\\"># Hard Vote or majority rules</span>\\n\\nvote_hard <span class=\\"token operator\\">=</span> ensemble<span class=\\"token punctuation\\">.</span>VotingClassifier<span class=\\"token punctuation\\">(</span>estimators <span class=\\"token operator\\">=</span> vote_est <span class=\\"token punctuation\\">,</span> voting <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'hard'</span><span class=\\"token punctuation\\">)</span>\\nvote_hard_cv <span class=\\"token operator\\">=</span> model_selection<span class=\\"token punctuation\\">.</span>cross_validate<span class=\\"token punctuation\\">(</span>vote_hard<span class=\\"token punctuation\\">,</span> data<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'data'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> data<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'target'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span><span class=\\"token punctuation\\">)</span>\\nvote_hard<span class=\\"token punctuation\\">.</span>fit<span class=\\"token punctuation\\">(</span>data<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'data'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> data<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'target'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token comment\\"># Soft Vote or weighted probabilities</span>\\nvote_soft <span class=\\"token operator\\">=</span> ensemble<span class=\\"token punctuation\\">.</span>VotingClassifier<span class=\\"token punctuation\\">(</span>estimators <span class=\\"token operator\\">=</span> vote_est <span class=\\"token punctuation\\">,</span> voting <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'soft'</span><span class=\\"token punctuation\\">)</span>\\nvote_soft_cv <span class=\\"token operator\\">=</span> model_selection<span class=\\"token punctuation\\">.</span>cross_validate<span class=\\"token punctuation\\">(</span>vote_soft<span class=\\"token punctuation\\">,</span> data<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'data'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> data<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'target'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span><span class=\\"token punctuation\\">)</span>\\nvote_soft<span class=\\"token punctuation\\">.</span>fit<span class=\\"token punctuation\\">(</span>data<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'data'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> data<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'target'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n\\n\\n\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"王新宇"},"autoDesc":true}`);export{s as data};
