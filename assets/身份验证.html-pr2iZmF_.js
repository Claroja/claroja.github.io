import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,e as t}from"./app-qxiCM96p.js";const e={},p=t(`<h1 id="身份验证" tabindex="-1"><a class="header-anchor" href="#身份验证" aria-hidden="true">#</a> 身份验证</h1><h2 id="form" tabindex="-1"><a class="header-anchor" href="#form" aria-hidden="true">#</a> form</h2><h3 id="后端" tabindex="-1"><a class="header-anchor" href="#后端" aria-hidden="true">#</a> 后端</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">&#39;/post&#39;</span><span class="token punctuation">,</span> methods <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;POST&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">post</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    method<span class="token operator">=</span>request<span class="token punctuation">.</span>method
    key1<span class="token operator">=</span>request<span class="token punctuation">.</span>form<span class="token punctuation">[</span><span class="token string">&quot;post-key1&quot;</span><span class="token punctuation">]</span>
    key2<span class="token operator">=</span>request<span class="token punctuation">.</span>form<span class="token punctuation">[</span><span class="token string">&quot;post-key2&quot;</span><span class="token punctuation">]</span>
    <span class="token keyword">return</span> <span class="token string">&quot;%s&lt;br&gt;%s&lt;br&gt;%s&lt;br&gt;%s&lt;br&gt;%s&quot;</span><span class="token operator">%</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> key1<span class="token punctuation">,</span> key2<span class="token punctuation">,</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="前端" tabindex="-1"><a class="header-anchor" href="#前端" aria-hidden="true">#</a> 前端</h3><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>POST<span class="token punctuation">&quot;</span></span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/post<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>post-key1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>post-value1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>post-key2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>post-value2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Submit<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="requests" tabindex="-1"><a class="header-anchor" href="#requests" aria-hidden="true">#</a> requests</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> requests
payload <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;key1&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;value1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;key2&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;value2&#39;</span><span class="token punctuation">}</span>
r <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span><span class="token string">&quot;https://httpbin.org/post&quot;</span><span class="token punctuation">,</span> data<span class="token operator">=</span>payload<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>text<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="json" tabindex="-1"><a class="header-anchor" href="#json" aria-hidden="true">#</a> json</h2><h3 id="后端-1" tabindex="-1"><a class="header-anchor" href="#后端-1" aria-hidden="true">#</a> 后端</h3><p>flask使用<code>.json</code>来获得请求的格式</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>key1<span class="token operator">=</span>request<span class="token punctuation">.</span>json<span class="token punctuation">.</span>get<span class="token punctuation">[</span><span class="token string">&#39;key1&#39;</span><span class="token punctuation">]</span>
key2<span class="token operator">=</span>request<span class="token punctuation">.</span>json<span class="token punctuation">.</span>get<span class="token punctuation">[</span><span class="token string">&#39;key2&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="前端-1" tabindex="-1"><a class="header-anchor" href="#前端-1" aria-hidden="true">#</a> 前端</h3><p>？？</p><h3 id="requests-1" tabindex="-1"><a class="header-anchor" href="#requests-1" aria-hidden="true">#</a> requests</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>### post-json
request发送post请求,data(既json表单提交形式)
\`\`\`python
payload = {&#39;key1&#39;: &#39;value1&#39;, &#39;key2&#39;: &#39;value2&#39;}
r = requests.post(&quot;http://127.0.0.1:5000/post&quot;, json=payload)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="httpbasicauth" tabindex="-1"><a class="header-anchor" href="#httpbasicauth" aria-hidden="true">#</a> HTTPBasicAuth</h2><p>Basic是HTTP简单的认证方式,不是很安全,用户名和密码会经过base64编码放在请求头(header)的Authorization字段下,服务器解析此请求头即可获得. Basic认证失败会相应401状态码</p><h3 id="后端-2" tabindex="-1"><a class="header-anchor" href="#后端-2" aria-hidden="true">#</a> 后端</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask
<span class="token keyword">from</span> flask_httpauth <span class="token keyword">import</span> HTTPBasicAuth

app <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>
auth <span class="token operator">=</span> HTTPBasicAuth<span class="token punctuation">(</span><span class="token punctuation">)</span>

user <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;username&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;wang&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;password&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;123&#39;</span><span class="token punctuation">}</span>


<span class="token comment">## requests.get(&#39;http://127.0.0.1:5000/login&#39;,auth=(&#39;wang&#39;,&#39;123&#39;))  # 会将用户名和密码发给请求头的</span>
<span class="token decorator annotation punctuation">@auth<span class="token punctuation">.</span>get_password</span> <span class="token comment"># 只对明文密码有效</span>
<span class="token keyword">def</span> <span class="token function">get_password</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> user<span class="token punctuation">[</span><span class="token string">&#39;username&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> username<span class="token punctuation">:</span>
        <span class="token keyword">return</span> user<span class="token punctuation">[</span><span class="token string">&#39;password&#39;</span><span class="token punctuation">]</span>
    <span class="token keyword">return</span> <span class="token boolean">None</span>

<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span>
<span class="token decorator annotation punctuation">@auth<span class="token punctuation">.</span>login_required</span>
<span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token string">&quot;Hello, %s!&quot;</span> <span class="token operator">%</span> auth<span class="token punctuation">.</span>username<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="前端-2" tabindex="-1"><a class="header-anchor" href="#前端-2" aria-hidden="true">#</a> 前端</h3><p>？？</p><h3 id="requests-2" tabindex="-1"><a class="header-anchor" href="#requests-2" aria-hidden="true">#</a> requests</h3><p><code>HTTP Basic Auth</code>发的是get请求,用户名和密码放在request.headers[&#39;Authorization&#39;]里,使用base64加密 requests</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> requests<span class="token punctuation">.</span>auth <span class="token keyword">import</span> HTTPBasicAuth
requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;http://127.0.0.1:5000/login&#39;</span><span class="token punctuation">,</span> auth<span class="token operator">=</span>HTTPBasicAuth<span class="token punctuation">(</span><span class="token string">&#39;user&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;pass&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># # 本质上存在request.headers[&#39;Authorization&#39;]里,使用base64加密  #拿到授权信息(类型 信息)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>HTTP Basic Auth 如此常见，Requests 就提供了一种简写的使用方式：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;http://127.0.0.1:5000/login&#39;</span><span class="token punctuation">,</span> auth<span class="token operator">=</span><span class="token punctuation">(</span><span class="token string">&#39;wang&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;123&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="httpdigestauth" tabindex="-1"><a class="header-anchor" href="#httpdigestauth" aria-hidden="true">#</a> HTTPDigestAuth</h2><p>摘要认证(Digest Authentication),使用hash加密算法,</p><h3 id="后端-3" tabindex="-1"><a class="header-anchor" href="#后端-3" aria-hidden="true">#</a> 后端</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask
<span class="token keyword">from</span> flask_httpauth <span class="token keyword">import</span> HTTPDigestAuth

app <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>
app<span class="token punctuation">.</span>config<span class="token punctuation">[</span><span class="token string">&#39;SECRET_KEY&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;secret key here&#39;</span>
auth <span class="token operator">=</span> HTTPDigestAuth<span class="token punctuation">(</span><span class="token punctuation">)</span>

users <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;john&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;susan&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;bye&quot;</span>
<span class="token punctuation">}</span>

<span class="token decorator annotation punctuation">@auth<span class="token punctuation">.</span>get_password</span>
<span class="token keyword">def</span> <span class="token function">get_pw</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> username <span class="token keyword">in</span> users<span class="token punctuation">:</span>
        <span class="token keyword">return</span> users<span class="token punctuation">.</span>get<span class="token punctuation">(</span>username<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token boolean">None</span>

<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span>
<span class="token decorator annotation punctuation">@auth<span class="token punctuation">.</span>login_required</span>
<span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token string">&quot;Hello, %s!&quot;</span> <span class="token operator">%</span> auth<span class="token punctuation">.</span>username<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="前端-3" tabindex="-1"><a class="header-anchor" href="#前端-3" aria-hidden="true">#</a> 前端</h3><p>？？</p><h3 id="requests-3" tabindex="-1"><a class="header-anchor" href="#requests-3" aria-hidden="true">#</a> requests</h3><p><code>HTTPDigestAuth</code>发的是get请求,用户名和密码放在request.headers[&#39;Authorization&#39;]里,使用base64加密 requests</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> requests<span class="token punctuation">.</span>auth <span class="token keyword">import</span> HTTPDigestAuth
url <span class="token operator">=</span> <span class="token string">&#39;http://httpbin.org/digest-auth/auth/user/pass&#39;</span>
requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> auth<span class="token operator">=</span>HTTPDigestAuth<span class="token punctuation">(</span><span class="token string">&#39;user&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;pass&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="httptokenauth" tabindex="-1"><a class="header-anchor" href="#httptokenauth" aria-hidden="true">#</a> HTTPTokenAuth</h2><p>后面所讲的jwt也是属于HTTPTokenAuth</p><h3 id="后端-4" tabindex="-1"><a class="header-anchor" href="#后端-4" aria-hidden="true">#</a> 后端</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> g
<span class="token keyword">from</span> flask_httpauth <span class="token keyword">import</span> HTTPTokenAuth

app <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>
auth <span class="token operator">=</span> HTTPTokenAuth<span class="token punctuation">(</span>scheme<span class="token operator">=</span><span class="token string">&#39;Token&#39;</span><span class="token punctuation">)</span>

tokens <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;secret-token-1&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;john&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;secret-token-2&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;susan&quot;</span>
<span class="token punctuation">}</span>

<span class="token decorator annotation punctuation">@auth<span class="token punctuation">.</span>verify_token</span>
<span class="token keyword">def</span> <span class="token function">verify_token</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> token <span class="token keyword">in</span> tokens<span class="token punctuation">:</span>
        g<span class="token punctuation">.</span>current_user <span class="token operator">=</span> tokens<span class="token punctuation">[</span>token<span class="token punctuation">]</span>
        <span class="token keyword">return</span> <span class="token boolean">True</span>
    <span class="token keyword">return</span> <span class="token boolean">False</span>

<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span>
<span class="token decorator annotation punctuation">@auth<span class="token punctuation">.</span>login_required</span>
<span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token string">&quot;Hello, %s!&quot;</span> <span class="token operator">%</span> g<span class="token punctuation">.</span>current_user

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="前端-4" tabindex="-1"><a class="header-anchor" href="#前端-4" aria-hidden="true">#</a> 前端</h3><p>？？</p><h3 id="requests-4" tabindex="-1"><a class="header-anchor" href="#requests-4" aria-hidden="true">#</a> requests</h3><p><code>HTTPTokenAuth</code>发的是get请求token信息放在request.headers[&#39;Authorization&#39;]里,使用base64加密</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> requests
res <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span><span class="token string">&#39;http://127.0.0.1:5000/login&#39;</span><span class="token punctuation">,</span>json<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;username&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;password&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
access_token <span class="token operator">=</span> res<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;access_token&#39;</span><span class="token punctuation">]</span>

header<span class="token operator">=</span><span class="token punctuation">{</span>
    <span class="token string">&quot;Authorization&quot;</span><span class="token punctuation">:</span> <span class="token string-interpolation"><span class="token string">f&quot;Bearer </span><span class="token interpolation"><span class="token punctuation">{</span>access_token<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span>
<span class="token punctuation">}</span>
res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;http://127.0.0.1:5000/protected&#39;</span><span class="token punctuation">,</span>headers<span class="token operator">=</span>header<span class="token punctuation">)</span>  <span class="token comment"># 如果重新获得token则无效</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>text<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>https://www.cnblogs.com/fiona-zhong/p/10254961.html https://www.cnblogs.com/Erick-L/p/7060806.html https://blog.csdn.net/ousuixin/article/details/94053454 https://blog.csdn.net/qq_42597385/article/details/85248483 https://blog.csdn.net/ousuixin/article/details/94053454#flask%E4%B8%AD%E5%B0%81%E8%A3%85token%E7%9A%84package%E4%BD%BF%E7%94%A8 https://www.jianshu.com/p/537b356d34c9 https://github.com/vimalloc/flask-jwt-extended https://flask-httpauth.readthedocs.io/en/latest/ https://blog.csdn.net/gnnulzy/article/details/79822354 https://www.cnblogs.com/Erick-L/p/7060806.html</p>`,46),o=[p];function c(i,u){return s(),a("div",null,o)}const d=n(e,[["render",c],["__file","身份验证.html.vue"]]);export{d as default};
