const e=JSON.parse('{"key":"v-132e0ca2","path":"/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/coroutines/pickle.html","title":"pickle","lang":"zh-CN","frontmatter":{"description":"pickle 简介 pickle模块实现了用于对Python对象结构进行序列化和反序列化的二进制协议。“Pickling”是将Python对象转换为字节流的过程，“unpickling”是反向操作，由此字节流二进制文件或字节对象）转换回对象结构。 模块方法 pickle.dump(obj, file, protocol=None, *, fix_imports=True) 将obj以二进制形式写入file-object文件 pickle.dumps(obj, protocol=None, *, fix_imports=True) 将obj编译为二进制对象 pickle.load(file, *, fix_imports=True, encoding=\\"ASCII\\", errors=\\"strict\\") dump的反向操作 pickle.loads(bytes_object, *, fix_imports=True, encoding=\\"ASCII\\", errors=\\"strict\\") dumps的反向操作","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/coroutines/pickle.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"pickle"}],["meta",{"property":"og:description","content":"pickle 简介 pickle模块实现了用于对Python对象结构进行序列化和反序列化的二进制协议。“Pickling”是将Python对象转换为字节流的过程，“unpickling”是反向操作，由此字节流二进制文件或字节对象）转换回对象结构。 模块方法 pickle.dump(obj, file, protocol=None, *, fix_imports=True) 将obj以二进制形式写入file-object文件 pickle.dumps(obj, protocol=None, *, fix_imports=True) 将obj编译为二进制对象 pickle.load(file, *, fix_imports=True, encoding=\\"ASCII\\", errors=\\"strict\\") dump的反向操作 pickle.loads(bytes_object, *, fix_imports=True, encoding=\\"ASCII\\", errors=\\"strict\\") dumps的反向操作"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-27T13:17:01.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2023-11-27T13:17:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"pickle\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-27T13:17:01.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"模块方法","slug":"模块方法","link":"#模块方法","children":[]}],"git":{"createdTime":1701091021000,"updatedTime":1701091021000,"contributors":[{"name":"claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":0.51,"words":153},"filePathRelative":"编程语言/python/coroutines/pickle.md","localizedDate":"2023年11月27日","excerpt":"<h1> pickle</h1>\\n<h2> 简介</h2>\\n<p>pickle模块实现了用于对Python对象结构进行序列化和反序列化的二进制协议。“Pickling”是将Python对象转换为字节流的过程，“unpickling”是反向操作，由此字节流二进制文件或字节对象）转换回对象结构。</p>\\n<h2> 模块方法</h2>\\n<p>pickle.dump(obj, file, protocol=None, *, fix_imports=True)\\n将obj以二进制形式写入file-object文件\\npickle.dumps(obj, protocol=None, *, fix_imports=True)\\n将obj编译为二进制对象\\npickle.load(file, *, fix_imports=True, encoding=\\"ASCII\\", errors=\\"strict\\")\\ndump的反向操作\\npickle.loads(bytes_object, *, fix_imports=True, encoding=\\"ASCII\\", errors=\\"strict\\")\\ndumps的反向操作</p>","copyright":{"author":"王新宇"},"autoDesc":true}');export{e as data};
