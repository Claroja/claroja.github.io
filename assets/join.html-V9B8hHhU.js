const t=JSON.parse('{"key":"v-74039c4e","path":"/%E6%95%B0%E6%8D%AE%E5%B7%A5%E7%A8%8B/flink/window/join.html","title":"join","lang":"zh-CN","frontmatter":{"description":"join 在实际应用中，可能需要将不同来源的数据连接合并在一起处理，也有可能需要将一条流拆分开，所以经常会有对多条流进行处理的场景。 分流 所谓“分流”，就是将一条数据流拆分成完全独立的两条、甚至多条流。也就是基于一个DataStream，得到完全平等的多个子 DataStream，如下图所示。一般来说，我们会定义一些筛选条件，将符合条件的数据拣选出来放到对应的流里。 合流 Union 联合操作要求必须流中的数据类型必须相同，合并之后的新流会包括所有流中的元素，数据类型不变。这种合流方式非常简单粗暴，就像公路上多个车道汇在一起一样。","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/%E6%95%B0%E6%8D%AE%E5%B7%A5%E7%A8%8B/flink/window/join.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"join"}],["meta",{"property":"og:description","content":"join 在实际应用中，可能需要将不同来源的数据连接合并在一起处理，也有可能需要将一条流拆分开，所以经常会有对多条流进行处理的场景。 分流 所谓“分流”，就是将一条数据流拆分成完全独立的两条、甚至多条流。也就是基于一个DataStream，得到完全平等的多个子 DataStream，如下图所示。一般来说，我们会定义一些筛选条件，将符合条件的数据拣选出来放到对应的流里。 合流 Union 联合操作要求必须流中的数据类型必须相同，合并之后的新流会包括所有流中的元素，数据类型不变。这种合流方式非常简单粗暴，就像公路上多个车道汇在一起一样。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://claroja.github.io/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-27T13:31:52.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"join"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2023-11-27T13:31:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"join\\",\\"image\\":[\\"https://claroja.github.io/\\"],\\"dateModified\\":\\"2023-11-27T13:31:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[{"level":2,"title":"分流","slug":"分流","link":"#分流","children":[]},{"level":2,"title":"合流","slug":"合流","link":"#合流","children":[{"level":3,"title":"Union","slug":"union","link":"#union","children":[]},{"level":3,"title":"Connect","slug":"connect","link":"#connect","children":[]}]},{"level":2,"title":"join","slug":"join-1","link":"#join-1","children":[{"level":3,"title":"Window Join","slug":"window-join","link":"#window-join","children":[]}]}],"git":{"createdTime":1701091021000,"updatedTime":1701091912000,"contributors":[{"name":"claroja","email":"63183535@qq.com","commits":2}]},"readingTime":{"minutes":1.87,"words":560},"filePathRelative":"数据工程/flink/window/join.md","localizedDate":"2023年11月27日","excerpt":"<h1> join</h1>\\n<p>在实际应用中，可能需要将不同来源的数据连接合并在一起处理，也有可能需要将一条流拆分开，所以经常会有对多条流进行处理的场景。</p>\\n<h2> 分流</h2>\\n<p>所谓“分流”，就是将一条数据流拆分成完全独立的两条、甚至多条流。也就是基于一个DataStream，得到完全平等的多个子 DataStream，如下图所示。一般来说，我们会定义一些筛选条件，将符合条件的数据拣选出来放到对应的流里。</p>\\n<h2> 合流</h2>\\n<h3> Union</h3>\\n<p>联合操作要求必须流中的数据类型必须相同，合并之后的新流会包括所有流中的元素，数据类型不变。这种合流方式非常简单粗暴，就像公路上多个车道汇在一起一样。\\n</p>","copyright":{"author":"王新宇"},"autoDesc":true}');export{t as data};
