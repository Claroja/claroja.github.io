import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,e as t}from"./app-SnI5rGHA.js";const p={},e=t(`<h1 id="offset" tabindex="-1"><a class="header-anchor" href="#offset" aria-hidden="true">#</a> offset</h1><h2 id="贝叶斯网络学习" tabindex="-1"><a class="header-anchor" href="#贝叶斯网络学习" aria-hidden="true">#</a> 贝叶斯网络学习</h2><p>贝叶斯网络的学习可以分为两个部分: 参数学习(Parameter learning):给出数据样本和DAG结构,来估算CPD. 结构学习(Structure learning):给出数据样本, 来估算DAG结构和CPD.</p><h3 id="参数学习" tabindex="-1"><a class="header-anchor" href="#参数学习" aria-hidden="true">#</a> 参数学习</h3><h4 id="构造数据" tabindex="-1"><a class="header-anchor" href="#构造数据" aria-hidden="true">#</a> 构造数据</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
data<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;fruit&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;banana&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;apple&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;banana&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;apple&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;banana&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;apple&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;banana&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;apple&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;apple&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;apple&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;banana&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;banana&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;apple&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;banana&quot;</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">,</span> 
        <span class="token string">&#39;tasty&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;yes&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;no&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;yes&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;yes&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;yes&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;yes&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;yes&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;yes&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;yes&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;yes&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;yes&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;no&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;no&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;no&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> 
        <span class="token string">&#39;size&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;large&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;large&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;large&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;small&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;large&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;large&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;large&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;small&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;large&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;large&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;large&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;large&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;small&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;small&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span>
data <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="构造dag" tabindex="-1"><a class="header-anchor" href="#构造dag" aria-hidden="true">#</a> 构造DAG</h4><p><a href="1.png">1.png</a></p><h4 id="parameterestimator" tabindex="-1"><a class="header-anchor" href="#parameterestimator" aria-hidden="true">#</a> ParameterEstimator</h4><p>状态统计(state count)是非常有意义的, 我们可以看每个变量值出现的次数. 如果是存在父节点的话, 还可以看到各个条件下的统计次数</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> pgmpy<span class="token punctuation">.</span>estimators <span class="token keyword">import</span> ParameterEstimator
pe <span class="token operator">=</span> ParameterEstimator<span class="token punctuation">(</span>model<span class="token punctuation">,</span> data<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">,</span> pe<span class="token punctuation">.</span>state_counts<span class="token punctuation">(</span><span class="token string">&#39;fruit&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># unconditional</span>
<span class="token triple-quoted-string string">&#39;&#39;&#39;
         fruit
apple       7
banana      7
&#39;&#39;&#39;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">,</span> pe<span class="token punctuation">.</span>state_counts<span class="token punctuation">(</span><span class="token string">&#39;tasty&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># conditional on fruit and size</span>
<span class="token triple-quoted-string string">&#39;&#39;&#39;
 fruit apple       banana
size  large small  large small
tasty
no      1.0   1.0    1.0   1.0
yes     3.0   2.0    5.0   0.0
&#39;&#39;&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="maximum-likelihood-estimation" tabindex="-1"><a class="header-anchor" href="#maximum-likelihood-estimation" aria-hidden="true">#</a> Maximum Likelihood Estimation</h4><p>估算CPD的一个方法是根据频率进行计算, 比如我们观察到14个水果中有7个苹果, 那么就可以推算7/14=50%个水果是苹果.这个就是最大似然估计(Maximum Likelihood Estimation (MLE)).</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> pgmpy<span class="token punctuation">.</span>estimators <span class="token keyword">import</span> MaximumLikelihoodEstimator
model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>data<span class="token punctuation">,</span> estimator<span class="token operator">=</span>MaximumLikelihoodEstimator<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>model<span class="token punctuation">.</span>get_cpds<span class="token punctuation">(</span><span class="token string">&quot;fruit&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># unconditional</span>
<span class="token triple-quoted-string string">&#39;&#39;&#39;
+---------------+-----+
| fruit(apple)  | 0.5 |
+---------------+-----+
| fruit(banana) | 0.5 |
+---------------+-----+
&#39;&#39;&#39;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>model<span class="token punctuation">.</span>get_cpds<span class="token punctuation">(</span><span class="token string">&quot;tasty&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># conditional</span>
<span class="token triple-quoted-string string">&#39;&#39;&#39;
+------------+--------------+--------------------+---------------------+---------------+
| fruit      | fruit(apple) | fruit(apple)       | fruit(banana)       | fruit(banana) |
+------------+--------------+--------------------+---------------------+---------------+
| size       | size(large)  | size(small)        | size(large)         | size(small)   |
+------------+--------------+--------------------+---------------------+---------------+
| tasty(no)  | 0.25         | 0.3333333333333333 | 0.16666666666666666 | 1.0           |
+------------+--------------+--------------------+---------------------+---------------+
| tasty(yes) | 0.75         | 0.6666666666666666 | 0.8333333333333334  | 0.0           |
+------------+--------------+--------------------+---------------------+---------------+
&#39;&#39;&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ML估计会过拟合.large banana为tasty的概率是0.833, 因为被观察的5/6的banana是tasty. 而small banana为tasty的概率是0, 因为我们只观察到一个small banana,而且它是 not tasty. 但是我们很难相信,small banana一定是not tasty. 因为我们观察的样本还不足够多. ML另外一个问题是在网络复杂时, 计算将非常苦难.比如一个变量有3个父节点, 每个节点有10种状态, 那么该变量的CPD将会有$$10^3$$中可能.</p><h4 id="bayesian-parameter-estimation" tabindex="-1"><a class="header-anchor" href="#bayesian-parameter-estimation" aria-hidden="true">#</a> Bayesian Parameter Estimation</h4><p>为了解决ML的问题, 可以使用Bayesian Parameter Estimation.具体的是 BDeu (Bayesian Dirichlet equivalent uniform prior), 就是均衡的向各个变量中添加样本. equivalent_sample_size = 10, 就是向各个变量中各个状态添加10个样本.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> pgmpy<span class="token punctuation">.</span>estimators <span class="token keyword">import</span> BayesianEstimator
model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>data<span class="token punctuation">,</span> estimator<span class="token operator">=</span>BayesianEstimator<span class="token punctuation">,</span> prior_type<span class="token operator">=</span><span class="token string">&quot;BDeu&quot;</span><span class="token punctuation">,</span> equivalent_sample_size<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment"># default equivalent_sample_size=5</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>model<span class="token punctuation">.</span>get_cpds<span class="token punctuation">(</span><span class="token string">&quot;tasty&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token triple-quoted-string string">&#39;&#39;&#39;
+------------+---------------------+--------------------+--------------------+---------------------+
| fruit      | fruit(apple)        | fruit(apple)       | fruit(banana)      | fruit(banana)       |
+------------+---------------------+--------------------+--------------------+---------------------+
| size       | size(large)         | size(small)        | size(large)        | size(small)         |
+------------+---------------------+--------------------+--------------------+---------------------+
| tasty(no)  | 0.34615384615384615 | 0.4090909090909091 | 0.2647058823529412 | 0.6428571428571429  |
+------------+---------------------+--------------------+--------------------+---------------------+
| tasty(yes) | 0.6538461538461539  | 0.5909090909090909 | 0.7352941176470589 | 0.35714285714285715 |
+------------+---------------------+--------------------+--------------------+---------------------+
&#39;&#39;&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数设置" tabindex="-1"><a class="header-anchor" href="#参数设置" aria-hidden="true">#</a> 参数设置</h4><p>直接设置参数</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> pgmpy<span class="token punctuation">.</span>models <span class="token keyword">import</span> BayesianModel
<span class="token keyword">from</span> pgmpy<span class="token punctuation">.</span>factors<span class="token punctuation">.</span>discrete <span class="token keyword">import</span> TabularCPD
<span class="token comment">## 定义网络结构, 每个元组填入两个节点, 第一个节点指向第二个节点</span>
model <span class="token operator">=</span> BayesianModel<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">&#39;D&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;G&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;I&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;G&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;G&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;L&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;I&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;S&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">## 定义每个节点的CPD</span>
<span class="token comment">### 独立节点的CPD定义,variable:变量名为D/variable_card:变量状态为两个/values:变量各状态值/state_names:变量状态的名字是Easy Hard</span>
cpd_d_sn <span class="token operator">=</span> TabularCPD<span class="token punctuation">(</span>variable<span class="token operator">=</span><span class="token string">&#39;D&#39;</span><span class="token punctuation">,</span> variable_card<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> values<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0.6</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0.4</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> state_names<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;D&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&#39;Easy&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Hard&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
cpd_i_sn <span class="token operator">=</span> TabularCPD<span class="token punctuation">(</span>variable<span class="token operator">=</span><span class="token string">&#39;I&#39;</span><span class="token punctuation">,</span> variable_card<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> values<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0.7</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0.3</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> state_names<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;I&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&#39;Dumb&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Intelligent&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">### 非独立节点的CPD定义, 列：evidence 行：state</span>
<span class="token comment">##    +---------+---------+---------+---------+---------+</span>
<span class="token comment">##    | diff    | intel_0 | intel_0 | intel_1 | intel_1 |</span>
<span class="token comment">##    +---------+---------+---------+---------+---------+</span>
<span class="token comment">##    | intel   | diff_0  | diff_1  | diff_0  | diff_1  |</span>
<span class="token comment">##    +---------+---------+---------+---------+---------+</span>
<span class="token comment">##    | grade_0 | 0.3     | 0.05    | 0.9     | 0.5     |</span>
<span class="token comment">##    +---------+---------+---------+---------+---------+</span>
<span class="token comment">##    | grade_1 | 0.4     | 0.25    | 0.08    | 0.3     |</span>
<span class="token comment">##    +---------+---------+---------+---------+---------+</span>
<span class="token comment">##    | grade_2 | 0.3     | 0.7     | 0.02    | 0.2     |</span>
<span class="token comment">##    +---------+---------+---------+---------+---------+</span>
<span class="token comment">## evidence:证据或父节点/evidence_card:证据或父节点变量状态个数/state_names取别名</span>
cpd_g_sn <span class="token operator">=</span> TabularCPD<span class="token punctuation">(</span>variable<span class="token operator">=</span><span class="token string">&#39;G&#39;</span><span class="token punctuation">,</span> variable_card<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span>
                      values<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0.3</span><span class="token punctuation">,</span> <span class="token number">0.05</span><span class="token punctuation">,</span> <span class="token number">0.9</span><span class="token punctuation">,</span>  <span class="token number">0.5</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                              <span class="token punctuation">[</span><span class="token number">0.4</span><span class="token punctuation">,</span> <span class="token number">0.25</span><span class="token punctuation">,</span> <span class="token number">0.08</span><span class="token punctuation">,</span> <span class="token number">0.3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                              <span class="token punctuation">[</span><span class="token number">0.3</span><span class="token punctuation">,</span> <span class="token number">0.7</span><span class="token punctuation">,</span>  <span class="token number">0.02</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                      evidence<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;I&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;D&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                      evidence_card<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                      state_names<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;G&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;C&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                                   <span class="token string">&#39;I&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&#39;Dumb&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Intelligent&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                                   <span class="token string">&#39;D&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&#39;Easy&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Hard&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
cpd_l_sn <span class="token operator">=</span> TabularCPD<span class="token punctuation">(</span>variable<span class="token operator">=</span><span class="token string">&#39;L&#39;</span><span class="token punctuation">,</span> variable_card<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>
                      values<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">0.4</span><span class="token punctuation">,</span> <span class="token number">0.99</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                              <span class="token punctuation">[</span><span class="token number">0.9</span><span class="token punctuation">,</span> <span class="token number">0.6</span><span class="token punctuation">,</span> <span class="token number">0.01</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                      evidence<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;G&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                      evidence_card<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                      state_names<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;L&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&#39;Bad&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Good&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                                   <span class="token string">&#39;G&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;C&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
cpd_s_sn <span class="token operator">=</span> TabularCPD<span class="token punctuation">(</span>variable<span class="token operator">=</span><span class="token string">&#39;S&#39;</span><span class="token punctuation">,</span> variable_card<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>
                      values<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0.95</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                              <span class="token punctuation">[</span><span class="token number">0.05</span><span class="token punctuation">,</span> <span class="token number">0.8</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                      evidence<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;I&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                      evidence_card<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                      state_names<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;S&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&#39;Bad&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Good&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                                   <span class="token string">&#39;I&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&#39;Dumb&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Intelligent&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">## 将条件概率分布加入到贝叶斯网络中</span>
model<span class="token punctuation">.</span>add_cpds<span class="token punctuation">(</span>cpd_d_sn<span class="token punctuation">,</span> cpd_i_sn<span class="token punctuation">,</span> cpd_g_sn<span class="token punctuation">,</span> cpd_l_sn<span class="token punctuation">,</span> cpd_s_sn<span class="token punctuation">)</span>
model<span class="token punctuation">.</span>check_model<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="载入预置模型" tabindex="-1"><a class="header-anchor" href="#载入预置模型" aria-hidden="true">#</a> 载入预置模型</h4><p>pgmpy内置了很多模型:pgmpy内置了很多模型:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">## Use the alarm model to generate data from it.</span>
<span class="token keyword">from</span> pgmpy<span class="token punctuation">.</span>utils <span class="token keyword">import</span> get_example_model
<span class="token keyword">from</span> pgmpy<span class="token punctuation">.</span>sampling <span class="token keyword">import</span> BayesianModelSampling

alarm_model <span class="token operator">=</span> get_example_model<span class="token punctuation">(</span><span class="token string">&#39;alarm&#39;</span><span class="token punctuation">)</span>
samples <span class="token operator">=</span> BayesianModelSampling<span class="token punctuation">(</span>alarm_model<span class="token punctuation">)</span><span class="token punctuation">.</span>forward_sample<span class="token punctuation">(</span>size<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">1e5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
samples<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>罗列内置的模型:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>filenames <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;asia&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;utils/example_models/asia.bif.gz&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;cancer&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;utils/example_models/cancer.bif.gz&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;earthquake&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;utils/example_models/earthquake.bif.gz&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;sachs&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;utils/example_models/sachs.bif.gz&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;survey&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;utils/example_models/survey.bif.gz&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;alarm&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;utils/example_models/alarm.bif.gz&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;barley&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;utils/example_models/barley.bif.gz&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;child&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;utils/example_models/child.bif.gz&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;insurance&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;utils/example_models/insurance.bif.gz&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;mildew&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;utils/example_models/mildew.bif.gz&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;water&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;utils/example_models/water.bif.gz&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;hailfinder&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;utils/example_models/hailfinder.bif.gz&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;hepar2&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;utils/example_models/hepar2.bif.gz&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;win95pts&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;utils/example_models/win95pts.bif.gz&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;andes&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;utils/example_models/andes.bif.gz&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;diabetes&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;utils/example_models/diabetes.bif.gz&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;link&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;utils/example_models/link.bif.gz&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;munin1&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;utils/example_models/munin1.bif.gz&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;munin2&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;utils/example_models/munin2.bif.gz&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;munin3&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;utils/example_models/munin3.bif.gz&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;munin4&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;utils/example_models/munin4.bif.gz&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;pathfinder&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;utils/example_models/pathfinder.bif.gz&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;pigs&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;utils/example_models/pigs.bif.gz&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;munin&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;utils/example_models/munin.bif.gz&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;ecoli70&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;magic-niab&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;magic-irri&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;arth150&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;sangiovese&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;mehra&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="模型描述" tabindex="-1"><a class="header-anchor" href="#模型描述" aria-hidden="true">#</a> 模型描述</h4><p>在student模型中, 可以将模型打印出来</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>model<span class="token punctuation">.</span>nodes<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token triple-quoted-string string">&#39;&#39;&#39;
NodeView((&#39;D&#39;, &#39;G&#39;, &#39;I&#39;, &#39;L&#39;, &#39;S&#39;))
&#39;&#39;&#39;</span>
model<span class="token punctuation">.</span>edges<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token triple-quoted-string string">&#39;&#39;&#39;
OutEdgeView([(&#39;D&#39;, &#39;G&#39;), (&#39;G&#39;, &#39;L&#39;), (&#39;I&#39;, &#39;G&#39;), (&#39;I&#39;, &#39;S&#39;)])
&#39;&#39;&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> networkx <span class="token keyword">as</span> nx
<span class="token keyword">from</span> matplotlib <span class="token keyword">import</span> pyplot <span class="token keyword">as</span> plt
<span class="token comment">## 绘制网络结构图，并附上概率分布表</span>
nx<span class="token punctuation">.</span>draw<span class="token punctuation">(</span>model<span class="token punctuation">,</span>
        with_labels<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>
        node_size<span class="token operator">=</span><span class="token number">800</span><span class="token punctuation">,</span>
        font_weight<span class="token operator">=</span><span class="token string">&#39;bold&#39;</span><span class="token punctuation">,</span>
        node_color<span class="token operator">=</span><span class="token string">&#39;y&#39;</span><span class="token punctuation">,</span>
        pos<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&quot;D&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&quot;I&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&quot;G&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&quot;S&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">&quot;L&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2.5</span><span class="token punctuation">,</span> model<span class="token punctuation">.</span>get_cpds<span class="token punctuation">(</span><span class="token string">&quot;D&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2.5</span><span class="token punctuation">,</span> model<span class="token punctuation">.</span>get_cpds<span class="token punctuation">(</span><span class="token string">&quot;I&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token number">2.1</span><span class="token punctuation">,</span> <span class="token number">1.25</span><span class="token punctuation">,</span> model<span class="token punctuation">.</span>get_cpds<span class="token punctuation">(</span><span class="token string">&quot;G&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> model<span class="token punctuation">.</span>get_cpds<span class="token punctuation">(</span><span class="token string">&quot;S&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0.8</span><span class="token punctuation">,</span> model<span class="token punctuation">.</span>get_cpds<span class="token punctuation">(</span><span class="token string">&quot;L&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>参考: https://colab.research.google.com/github/kristiyandd/ai-combinator/blob/master/Learning_Bayesian_Networks.ipynb#scrollTo=VaeRKm7qj-SS</p><h2 id="参数学习-1" tabindex="-1"><a class="header-anchor" href="#参数学习-1" aria-hidden="true">#</a> 参数学习</h2><h3 id="_1-获得数据" tabindex="-1"><a class="header-anchor" href="#_1-获得数据" aria-hidden="true">#</a> 1. 获得数据</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">## Use the alarm model to generate data from it.</span>

<span class="token keyword">from</span> pgmpy<span class="token punctuation">.</span>utils <span class="token keyword">import</span> get_example_model
<span class="token keyword">from</span> pgmpy<span class="token punctuation">.</span>sampling <span class="token keyword">import</span> BayesianModelSampling

alarm_model <span class="token operator">=</span> get_example_model<span class="token punctuation">(</span><span class="token string">&#39;alarm&#39;</span><span class="token punctuation">)</span>
samples <span class="token operator">=</span> BayesianModelSampling<span class="token punctuation">(</span>alarm_model<span class="token punctuation">)</span><span class="token punctuation">.</span>forward_sample<span class="token punctuation">(</span>size<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">1e5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
samples<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-定义模型结构" tabindex="-1"><a class="header-anchor" href="#_2-定义模型结构" aria-hidden="true">#</a> 2. 定义模型结构</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">## Defining the Bayesian Model structure</span>
<span class="token keyword">from</span> pgmpy<span class="token punctuation">.</span>models <span class="token keyword">import</span> BayesianNetwork
model_struct <span class="token operator">=</span> BayesianNetwork<span class="token punctuation">(</span>ebunch<span class="token operator">=</span>alarm_model<span class="token punctuation">.</span>edges<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
model_struct<span class="token punctuation">.</span>nodes<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token triple-quoted-string string">&#39;&#39;&#39;
NodeView((&#39;HYPOVOLEMIA&#39;, &#39;LVEDVOLUME&#39;, &#39;STROKEVOLUME&#39;, &#39;CVP&#39;, &#39;PCWP&#39;, &#39;LVFAILURE&#39;, &#39;HISTORY&#39;, &#39;CO&#39;, &#39;ERRLOWOUTPUT&#39;, &#39;HRBP&#39;, &#39;ERRCAUTER&#39;, &#39;HREKG&#39;, &#39;HRSAT&#39;, &#39;INSUFFANESTH&#39;, &#39;CATECHOL&#39;, &#39;ANAPHYLAXIS&#39;, &#39;TPR&#39;, &#39;BP&#39;, &#39;KINKEDTUBE&#39;, &#39;PRESS&#39;, &#39;VENTLUNG&#39;, &#39;FIO2&#39;, &#39;PVSAT&#39;, &#39;SAO2&#39;, &#39;PULMEMBOLUS&#39;, &#39;PAP&#39;, &#39;SHUNT&#39;, &#39;INTUBATION&#39;, &#39;MINVOL&#39;, &#39;VENTALV&#39;, &#39;DISCONNECT&#39;, &#39;VENTTUBE&#39;, &#39;MINVOLSET&#39;, &#39;VENTMACH&#39;, &#39;EXPCO2&#39;, &#39;ARTCO2&#39;, &#39;HR&#39;))
&#39;&#39;&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-学习参数" tabindex="-1"><a class="header-anchor" href="#_3-学习参数" aria-hidden="true">#</a> 3. 学习参数</h3><h4 id="最大似然估计" tabindex="-1"><a class="header-anchor" href="#最大似然估计" aria-hidden="true">#</a> 最大似然估计</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">## Fitting the model using Maximum Likelihood Estimator</span>
<span class="token keyword">from</span> pgmpy<span class="token punctuation">.</span>estimators <span class="token keyword">import</span> MaximumLikelihoodEstimator
mle <span class="token operator">=</span> MaximumLikelihoodEstimator<span class="token punctuation">(</span>model<span class="token operator">=</span>model_struct<span class="token punctuation">,</span> data<span class="token operator">=</span>samples<span class="token punctuation">)</span>
<span class="token comment">## Estimating the CPD for a single node.</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>mle<span class="token punctuation">.</span>estimate_cpd<span class="token punctuation">(</span>node<span class="token operator">=</span><span class="token string">&#39;FIO2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>mle<span class="token punctuation">.</span>estimate_cpd<span class="token punctuation">(</span>node<span class="token operator">=</span><span class="token string">&#39;CVP&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">## Estimating CPDs for all the nodes in the model</span>
mle<span class="token punctuation">.</span>get_parameters<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token comment"># Show just the first 10 CPDs in the output</span>

<span class="token triple-quoted-string string">&#39;&#39;&#39;
+--------------+---------+
| FIO2(LOW)    | 0.04859 |
+--------------+---------+
| FIO2(NORMAL) | 0.95141 |
+--------------+---------+
+-------------+----------------------+-----------------------+----------------------+
| LVEDVOLUME  | LVEDVOLUME(HIGH)     | LVEDVOLUME(LOW)       | LVEDVOLUME(NORMAL)   |
+-------------+----------------------+-----------------------+----------------------+
| CVP(HIGH)   | 0.702671646078713    | 0.0069145318521877126 | 0.010257212769589711 |
+-------------+----------------------+-----------------------+----------------------+
| CVP(LOW)    | 0.009480034472852629 | 0.9526184538653366    | 0.03999032606840039  |
+-------------+----------------------+-----------------------+----------------------+
| CVP(NORMAL) | 0.28784831944843436  | 0.04046701428247563   | 0.94975246116201     |
+-------------+----------------------+-----------------------+----------------------+
&#39;&#39;&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="贝叶斯估计" tabindex="-1"><a class="header-anchor" href="#贝叶斯估计" aria-hidden="true">#</a> 贝叶斯估计</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">## Fitting the using Bayesian Estimator</span>
<span class="token keyword">from</span> pgmpy<span class="token punctuation">.</span>estimators <span class="token keyword">import</span> BayesianEstimator
best <span class="token operator">=</span> BayesianEstimator<span class="token punctuation">(</span>model<span class="token operator">=</span>model_struct<span class="token punctuation">,</span> data<span class="token operator">=</span>samples<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>best<span class="token punctuation">.</span>estimate_cpd<span class="token punctuation">(</span>node<span class="token operator">=</span><span class="token string">&#39;FIO2&#39;</span><span class="token punctuation">,</span> prior_type<span class="token operator">=</span><span class="token string">&quot;BDeu&quot;</span><span class="token punctuation">,</span> equivalent_sample_size<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">## Uniform pseudo count for each state. Can also accept an array of the size of CPD.</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>best<span class="token punctuation">.</span>estimate_cpd<span class="token punctuation">(</span>node<span class="token operator">=</span><span class="token string">&#39;CVP&#39;</span><span class="token punctuation">,</span> prior_type<span class="token operator">=</span><span class="token string">&quot;dirichlet&quot;</span><span class="token punctuation">,</span> pseudo_counts<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">## Learning CPDs for all the nodes in the model. For learning all parameters with BDeU prior, a dict of</span>
<span class="token comment">## pseudo_counts need to be provided</span>
best<span class="token punctuation">.</span>get_parameters<span class="token punctuation">(</span>prior_type<span class="token operator">=</span><span class="token string">&quot;BDeu&quot;</span><span class="token punctuation">,</span> equivalent_sample_size<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">10</span><span class="token punctuation">]</span>
<span class="token triple-quoted-string string">&#39;&#39;&#39;
+--------------+-----------+
| FIO2(LOW)    | 0.0530594 |
+--------------+-----------+
| FIO2(NORMAL) | 0.946941  |
+--------------+-----------+
+-------------+----------------------+----------------------+----------------------+
| LVEDVOLUME  | LVEDVOLUME(HIGH)     | LVEDVOLUME(LOW)      | LVEDVOLUME(NORMAL)   |
+-------------+----------------------+----------------------+----------------------+
| CVP(HIGH)   | 0.6974417067875012   | 0.017649638237228676 | 0.011630213055303717 |
+-------------+----------------------+----------------------+----------------------+
| CVP(LOW)    | 0.014065892570565468 | 0.9322516991887744   | 0.041236967361740706 |
+-------------+----------------------+----------------------+----------------------+
| CVP(NORMAL) | 0.2884924006419334   | 0.05009866257399693  | 0.9471328195829556   |
+-------------+----------------------+----------------------+----------------------+
&#39;&#39;&#39;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="快捷方法" tabindex="-1"><a class="header-anchor" href="#快捷方法" aria-hidden="true">#</a> 快捷方法</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">## Shortcut for learning all the parameters and adding the CPDs to the model.</span>
model_struct <span class="token operator">=</span> BayesianNetwork<span class="token punctuation">(</span>ebunch<span class="token operator">=</span>alarm_model<span class="token punctuation">.</span>edges<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
model_struct<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>data<span class="token operator">=</span>samples<span class="token punctuation">,</span> estimator<span class="token operator">=</span>MaximumLikelihoodEstimator<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>model_struct<span class="token punctuation">.</span>get_cpds<span class="token punctuation">(</span><span class="token string">&#39;FIO2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
model_struct <span class="token operator">=</span> BayesianNetwork<span class="token punctuation">(</span>ebunch<span class="token operator">=</span>alarm_model<span class="token punctuation">.</span>edges<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
model_struct<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>data<span class="token operator">=</span>samples<span class="token punctuation">,</span> estimator<span class="token operator">=</span>BayesianEstimator<span class="token punctuation">,</span> prior_type<span class="token operator">=</span><span class="token string">&#39;BDeu&#39;</span><span class="token punctuation">,</span> equivalent_sample_size<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>model_struct<span class="token punctuation">.</span>get_cpds<span class="token punctuation">(</span><span class="token string">&#39;FIO2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token triple-quoted-string string">&#39;&#39;&#39;
+--------------+---------+
| FIO2(LOW)    | 0.04859 |
+--------------+---------+
| FIO2(NORMAL) | 0.95141 |
+--------------+---------+
+--------------+-----------+
| FIO2(LOW)    | 0.0530594 |
+--------------+-----------+
| FIO2(NORMAL) | 0.946941  |
+--------------+-----------+
&#39;&#39;&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>参考: https://pgmpy.org/examples/Learning%20Parameters%20in%20Discrete%20Bayesian%20Networks.html</p><h2 id="structure-learning" tabindex="-1"><a class="header-anchor" href="#structure-learning" aria-hidden="true">#</a> Structure Learning</h2><p>三种学习结构的方法:</p><ol><li>PC with stable and parallel variants.</li><li>Hill-Climb Search</li><li>Exhaustive Search</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> itertools <span class="token keyword">import</span> combinations
<span class="token keyword">import</span> networkx <span class="token keyword">as</span> nx
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">import</span> f1_score
<span class="token keyword">from</span> pgmpy<span class="token punctuation">.</span>estimators <span class="token keyword">import</span> PC<span class="token punctuation">,</span> HillClimbSearch<span class="token punctuation">,</span> ExhaustiveSearch
<span class="token keyword">from</span> pgmpy<span class="token punctuation">.</span>estimators <span class="token keyword">import</span> K2Score
<span class="token keyword">from</span> pgmpy<span class="token punctuation">.</span>utils <span class="token keyword">import</span> get_example_model
<span class="token keyword">from</span> pgmpy<span class="token punctuation">.</span>sampling <span class="token keyword">import</span> BayesianModelSampling
model <span class="token operator">=</span> get_example_model<span class="token punctuation">(</span><span class="token string">&#39;alarm&#39;</span><span class="token punctuation">)</span>
samples <span class="token operator">=</span> BayesianModelSampling<span class="token punctuation">(</span>model<span class="token punctuation">)</span><span class="token punctuation">.</span>forward_sample<span class="token punctuation">(</span>size<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">1e3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
samples<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">## Funtion to evaluate the learned model structures.</span>
<span class="token keyword">def</span> <span class="token function">get_f1_score</span><span class="token punctuation">(</span>estimated_model<span class="token punctuation">,</span> true_model<span class="token punctuation">)</span><span class="token punctuation">:</span>
    nodes <span class="token operator">=</span> estimated_model<span class="token punctuation">.</span>nodes<span class="token punctuation">(</span><span class="token punctuation">)</span>
    est_adj <span class="token operator">=</span> nx<span class="token punctuation">.</span>to_numpy_matrix<span class="token punctuation">(</span>estimated_model<span class="token punctuation">.</span>to_undirected<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> nodelist<span class="token operator">=</span>nodes<span class="token punctuation">,</span> weight<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span>
    true_adj <span class="token operator">=</span> nx<span class="token punctuation">.</span>to_numpy_matrix<span class="token punctuation">(</span>true_model<span class="token punctuation">.</span>to_undirected<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> nodelist<span class="token operator">=</span>nodes<span class="token punctuation">,</span> weight<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span>

    f1 <span class="token operator">=</span> f1_score<span class="token punctuation">(</span>np<span class="token punctuation">.</span>ravel<span class="token punctuation">(</span>true_adj<span class="token punctuation">)</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>ravel<span class="token punctuation">(</span>est_adj<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;F1-score for the model skeleton: &quot;</span><span class="token punctuation">,</span> f1<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>使用PC</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>est <span class="token operator">=</span> PC<span class="token punctuation">(</span>data<span class="token operator">=</span>samples<span class="token punctuation">)</span>
estimated_model <span class="token operator">=</span> est<span class="token punctuation">.</span>estimate<span class="token punctuation">(</span>variant<span class="token operator">=</span><span class="token string">&#39;stable&#39;</span><span class="token punctuation">,</span> max_cond_vars<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span>
get_f1_score<span class="token punctuation">(</span>estimated_model<span class="token punctuation">,</span> model<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>使用HillClimb</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>scoring_method <span class="token operator">=</span> K2Score<span class="token punctuation">(</span>data<span class="token operator">=</span>samples<span class="token punctuation">)</span>
est <span class="token operator">=</span> HillClimbSearch<span class="token punctuation">(</span>data<span class="token operator">=</span>samples<span class="token punctuation">)</span>
estimated_model <span class="token operator">=</span> est<span class="token punctuation">.</span>estimate<span class="token punctuation">(</span>scoring_method<span class="token operator">=</span>scoring_method<span class="token punctuation">,</span> max_indegree<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span> max_iter<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">1e4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
get_f1_score<span class="token punctuation">(</span>estimated_model<span class="token punctuation">,</span> model<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>参考: https://pgmpy.org/examples/Structure%20Learning%20in%20Bayesian%20Networks.html https://pgmpy.org/examples/Structure%20Learning%20with%20Chow-Liu.html https://pgmpy.org/examples/Structure%20Learning%20with%20TAN.html</p>`,53),o=[e];function i(c,l){return s(),a("div",null,o)}const k=n(p,[["render",i],["__file","pgmpy模型训练.html.vue"]]);export{k as default};
