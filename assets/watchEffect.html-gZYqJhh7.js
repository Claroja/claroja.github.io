const t=JSON.parse('{"key":"v-01b559f4","path":"/%E5%89%8D%E7%AB%AF/vue/vue%E5%AF%B9%E8%B1%A1/watchEffect.html","title":"watchEffect","lang":"zh-CN","frontmatter":{"description":"watchEffect vue3-cli 应用: 不关注新旧值, 直接使用watchEffect()更加的方便 概念: watch是：既要指明监视的属性，也要指明监视的回调。 watchEffect是：不用指明监视哪个属性，监视的回调中用到哪个属性，那就监视哪个属性。 watchEffect有点像computed： 但computed注重的计算出来的值（回调函数的返回值），所以必须要写返回值。 而watchEffect更注重的是过程（回调函数的函数体），所以不用写返回值。 语法:watchEffect(()=&gt;{}) 回调函数中用到的变量都会被监视","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/%E5%89%8D%E7%AB%AF/vue/vue%E5%AF%B9%E8%B1%A1/watchEffect.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"watchEffect"}],["meta",{"property":"og:description","content":"watchEffect vue3-cli 应用: 不关注新旧值, 直接使用watchEffect()更加的方便 概念: watch是：既要指明监视的属性，也要指明监视的回调。 watchEffect是：不用指明监视哪个属性，监视的回调中用到哪个属性，那就监视哪个属性。 watchEffect有点像computed： 但computed注重的计算出来的值（回调函数的返回值），所以必须要写返回值。 而watchEffect更注重的是过程（回调函数的函数体），所以不用写返回值。 语法:watchEffect(()=&gt;{}) 回调函数中用到的变量都会被监视"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-27T13:17:01.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2023-11-27T13:17:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"watchEffect\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-27T13:17:01.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[{"level":2,"title":"vue3-cli","slug":"vue3-cli","link":"#vue3-cli","children":[]}],"git":{"createdTime":1701091021000,"updatedTime":1701091021000,"contributors":[{"name":"claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":1.05,"words":316},"filePathRelative":"前端/vue/vue对象/watchEffect.md","localizedDate":"2023年11月27日","excerpt":"<h1> watchEffect</h1>\\n<h2> vue3-cli</h2>\\n<p>应用: 不关注新旧值, 直接使用<code>watchEffect()</code>更加的方便\\n概念:</p>\\n<ul>\\n<li>watch是：既要指明监视的属性，也要指明监视的回调。</li>\\n<li>watchEffect是：不用指明监视哪个属性，监视的回调中用到哪个属性，那就监视哪个属性。</li>\\n<li>watchEffect有点像computed：\\n<ul>\\n<li>但computed注重的计算出来的值（回调函数的返回值），所以必须要写返回值。</li>\\n<li>而watchEffect更注重的是过程（回调函数的函数体），所以不用写返回值。\\n语法:<code>watchEffect(()=&gt;{})</code> 回调函数中用到的变量都会被监视</li>\\n</ul>\\n</li>\\n</ul>","copyright":{"author":"王新宇"},"autoDesc":true}');export{t as data};
