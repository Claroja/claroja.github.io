const n=JSON.parse('{"key":"v-4471ac20","path":"/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/java/Concurrency/JavaThread.html","title":"json","lang":"zh-CN","frontmatter":{"description":"json 创建Thread 当程序运行时, 自动创建了一个Main Thread, Main Thread和我们创建的Thread地位平等地被系统调度. 方法1: extend Thread 不推荐, 使用匿名内部类 Thread t = new Thread(\\"t1\\"){ @Override public void run() { log.debug(\\"running\\"); } }; t.start();","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/java/Concurrency/JavaThread.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"json"}],["meta",{"property":"og:description","content":"json 创建Thread 当程序运行时, 自动创建了一个Main Thread, Main Thread和我们创建的Thread地位平等地被系统调度. 方法1: extend Thread 不推荐, 使用匿名内部类 Thread t = new Thread(\\"t1\\"){ @Override public void run() { log.debug(\\"running\\"); } }; t.start();"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-25T13:46:58.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2023-11-25T13:46:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"json\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-25T13:46:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[{"level":2,"title":"创建Thread","slug":"创建thread","link":"#创建thread","children":[{"level":3,"title":"方法1: extend Thread","slug":"方法1-extend-thread","link":"#方法1-extend-thread","children":[]},{"level":3,"title":"方法2: implements Runnable","slug":"方法2-implements-runnable","link":"#方法2-implements-runnable","children":[]},{"level":3,"title":"方法3: FutureTask","slug":"方法3-futuretask","link":"#方法3-futuretask","children":[]}]},{"level":2,"title":"线程运行原理","slug":"线程运行原理","link":"#线程运行原理","children":[]},{"level":2,"title":"常用命令","slug":"常用命令","link":"#常用命令","children":[{"level":3,"title":"start() & run()","slug":"start-run","link":"#start-run","children":[]},{"level":3,"title":"sleep & yield","slug":"sleep-yield","link":"#sleep-yield","children":[]},{"level":3,"title":"setPriority","slug":"setpriority","link":"#setpriority","children":[]},{"level":3,"title":"join","slug":"join","link":"#join","children":[]},{"level":3,"title":"interrupt","slug":"interrupt","link":"#interrupt","children":[]}]},{"level":2,"title":"LockSupport.park()","slug":"locksupport-park","link":"#locksupport-park","children":[]},{"level":2,"title":"主线程和守护线程","slug":"主线程和守护线程","link":"#主线程和守护线程","children":[]}],"git":{"createdTime":1700920018000,"updatedTime":1700920018000,"contributors":[{"name":"claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":5.92,"words":1777},"filePathRelative":"编程语言/java/Concurrency/JavaThread.md","localizedDate":"2023年11月25日","excerpt":"<h1> json</h1>\\n<h2> 创建Thread</h2>\\n<p>当程序运行时, 自动创建了一个Main Thread, Main Thread和我们创建的Thread地位平等地被系统调度.</p>\\n<h3> 方法1: extend Thread</h3>\\n<p>不推荐, 使用匿名内部类</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token class-name\\">Thread</span> t <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Thread</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"t1\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token annotation punctuation\\">@Override</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">run</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        log<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">debug</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"running\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\nt<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">start</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"王新宇"},"autoDesc":true}');export{n as data};
