import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,a as t}from"./app-nD1Z-e8V.js";const p="/assets/1-DIjbhjE1.png",e={},o=t(`<h2 id="步骤" tabindex="-1"><a class="header-anchor" href="#步骤" aria-hidden="true">#</a> 步骤</h2><ol><li>选择模型</li><li>罗列模型需要调整的参数, 建立超参空间</li><li>使用不同方法搜索最优参数, 如网格搜索, 随机搜索, 贝叶斯搜索</li><li>进行交叉验证, 取均值比较</li></ol><h2 id="搜索方法" tabindex="-1"><a class="header-anchor" href="#搜索方法" aria-hidden="true">#</a> 搜索方法</h2><h3 id="手动搜索-manual-search" tabindex="-1"><a class="header-anchor" href="#手动搜索-manual-search" aria-hidden="true">#</a> 手动搜索(Manual Search)</h3><p>手动创建一系列参数组合</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>model_selection <span class="token keyword">import</span> train_test_split
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>tree <span class="token keyword">import</span> DecisionTreeClassifier
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">import</span> accuracy_score
df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&quot;pima-indians-diabetes.csv&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># Train Test Split </span>
<span class="token comment">#df = df.drop([&#39;name&#39;,&#39;origin&#39;,&#39;model_year&#39;], axis=1)</span>
y <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;class&#39;</span><span class="token punctuation">]</span> 
X <span class="token operator">=</span> df<span class="token punctuation">.</span>drop<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;class&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
X_train<span class="token punctuation">,</span> X_test<span class="token punctuation">,</span> y_train<span class="token punctuation">,</span> y_test <span class="token operator">=</span> train_test_split<span class="token punctuation">(</span>X<span class="token punctuation">,</span> y<span class="token punctuation">,</span> test_size<span class="token operator">=</span><span class="token number">0.3</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">)</span>

<span class="token comment"># sets of hyperparameters</span>
params_1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;criterion&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;gini&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;splitter&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;best&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;max_depth&#39;</span><span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">}</span>
params_2 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;criterion&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;entropy&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;splitter&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;random&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;max_depth&#39;</span><span class="token punctuation">:</span> <span class="token number">70</span><span class="token punctuation">}</span>
params_3 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;criterion&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;gini&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;splitter&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;random&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;max_depth&#39;</span><span class="token punctuation">:</span> <span class="token number">60</span><span class="token punctuation">}</span>
params_4 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;criterion&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;entropy&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;splitter&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;best&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;max_depth&#39;</span><span class="token punctuation">:</span> <span class="token number">80</span><span class="token punctuation">}</span>
params_5 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;criterion&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;gini&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;splitter&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;best&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;max_depth&#39;</span><span class="token punctuation">:</span> <span class="token number">40</span><span class="token punctuation">}</span>
<span class="token comment"># Separate models</span>
model_1 <span class="token operator">=</span> DecisionTreeClassifier<span class="token punctuation">(</span><span class="token operator">**</span>params_1<span class="token punctuation">)</span>
model_2 <span class="token operator">=</span> DecisionTreeClassifier<span class="token punctuation">(</span><span class="token operator">**</span>params_2<span class="token punctuation">)</span>
model_3 <span class="token operator">=</span> DecisionTreeClassifier<span class="token punctuation">(</span><span class="token operator">**</span>params_3<span class="token punctuation">)</span>
model_4 <span class="token operator">=</span> DecisionTreeClassifier<span class="token punctuation">(</span><span class="token operator">**</span>params_4<span class="token punctuation">)</span>
model_5 <span class="token operator">=</span> DecisionTreeClassifier<span class="token punctuation">(</span><span class="token operator">**</span>params_5<span class="token punctuation">)</span>
model_1<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X_train<span class="token punctuation">,</span> y_train<span class="token punctuation">)</span>
model_2<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X_train<span class="token punctuation">,</span> y_train<span class="token punctuation">)</span>
model_3<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X_train<span class="token punctuation">,</span> y_train<span class="token punctuation">)</span>
model_4<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X_train<span class="token punctuation">,</span> y_train<span class="token punctuation">)</span>
model_5<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X_train<span class="token punctuation">,</span> y_train<span class="token punctuation">)</span>
<span class="token comment"># Prediction sets</span>
preds_1 <span class="token operator">=</span> model_1<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X_test<span class="token punctuation">)</span>
preds_2 <span class="token operator">=</span> model_3<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X_test<span class="token punctuation">)</span>
preds_3 <span class="token operator">=</span> model_3<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X_test<span class="token punctuation">)</span>
preds_4 <span class="token operator">=</span> model_4<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X_test<span class="token punctuation">)</span>
preds_5 <span class="token operator">=</span> model_5<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X_test<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;Accuracy on Model 1: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">round</span><span class="token punctuation">(</span>accuracy_score<span class="token punctuation">(</span>y_test<span class="token punctuation">,</span> preds_1<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>  <span class="token comment"># Accuracy on Model 1: 0.693</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;Accuracy on Model 2: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">round</span><span class="token punctuation">(</span>accuracy_score<span class="token punctuation">(</span>y_test<span class="token punctuation">,</span> preds_2<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>  <span class="token comment"># Accuracy on Model 2: 0.693</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;Accuracy on Model 3: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">round</span><span class="token punctuation">(</span>accuracy_score<span class="token punctuation">(</span>y_test<span class="token punctuation">,</span> preds_3<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>  <span class="token comment"># Accuracy on Model 3: 0.693</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;Accuracy on Model 4: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">round</span><span class="token punctuation">(</span>accuracy_score<span class="token punctuation">(</span>y_test<span class="token punctuation">,</span> preds_4<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>  <span class="token comment"># Accuracy on Model 4: 0.736</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;Accuracy on Model 5: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">round</span><span class="token punctuation">(</span>accuracy_score<span class="token punctuation">(</span>y_test<span class="token punctuation">,</span> preds_5<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>  <span class="token comment"># Accuracy on Model 5: 0.688</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="网格搜索-grid-search" tabindex="-1"><a class="header-anchor" href="#网格搜索-grid-search" aria-hidden="true">#</a> 网格搜索(Grid-Search)</h3><p>Scikit-Learn提供过了GridSearchCV()方法进行Grid-Search.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>neighbors <span class="token keyword">import</span> KNeighborsClassifier
knn_clf <span class="token operator">=</span> KNeighborsClassifier<span class="token punctuation">(</span><span class="token punctuation">)</span>
knn_clf<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X_train<span class="token punctuation">,</span> y_train<span class="token punctuation">)</span>

<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">import</span> accuracy_score
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>model_selection <span class="token keyword">import</span> GridSearchCV

param_grid <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;n_neighbors&#39;</span><span class="token punctuation">:</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&#39;algorithm&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token string">&#39;auto&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ball_tree&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;kd_tree&#39;</span> <span class="token punctuation">,</span> <span class="token string">&#39;brute&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span> <span class="token comment">## 对比8*4=32个参数组合</span>
gs <span class="token operator">=</span> GridSearchCV<span class="token punctuation">(</span>knn_clf<span class="token punctuation">,</span>param_grid<span class="token punctuation">,</span>cv<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>
gs<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X_train<span class="token punctuation">,</span> y_train<span class="token punctuation">)</span>

gs<span class="token punctuation">.</span>cv_results_<span class="token punctuation">[</span><span class="token string">&#39;params&#39;</span><span class="token punctuation">]</span>  <span class="token comment"># 打印所有参数</span>
gs<span class="token punctuation">.</span>cv_results_<span class="token punctuation">[</span><span class="token string">&#39;mean_test_score&#39;</span><span class="token punctuation">]</span>  <span class="token comment"># 查看交叉验证分数</span>
gs<span class="token punctuation">.</span>best_params_  <span class="token comment"># 获得最优参数, {&#39;algorithm&#39;: &#39;auto&#39;, &#39;n_neighbors&#39;: 6}</span>
gs<span class="token punctuation">.</span>score<span class="token punctuation">(</span>X_test<span class="token punctuation">,</span>y_test<span class="token punctuation">)</span>  <span class="token comment"># 最优参数测试集上的表现, 0.70129870</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="随机搜索-random-search" tabindex="-1"><a class="header-anchor" href="#随机搜索-random-search" aria-hidden="true">#</a> 随机搜索(Random Search)</h3><p>网格搜索是遍历所有参数, 计算量很大.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>model_selection <span class="token keyword">import</span> RandomizedSearchCV
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>ensemble <span class="token keyword">import</span> RandomForestClassifier
<span class="token keyword">from</span> scipy<span class="token punctuation">.</span>stats <span class="token keyword">import</span> randint <span class="token keyword">as</span> sp_randint

<span class="token comment"># build a RandomForestClassifier</span>
clf <span class="token operator">=</span> RandomForestClassifier<span class="token punctuation">(</span>n_estimators<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">)</span>

param_dist <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;max_depth&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
              <span class="token string">&quot;max_features&quot;</span><span class="token punctuation">:</span> sp_randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
              <span class="token string">&quot;min_samples_split&quot;</span><span class="token punctuation">:</span> sp_randint<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
              <span class="token string">&quot;min_samples_leaf&quot;</span><span class="token punctuation">:</span> sp_randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
              <span class="token string">&quot;bootstrap&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
              <span class="token string">&quot;criterion&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;gini&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;entropy&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span>


samples <span class="token operator">=</span> <span class="token number">8</span>  <span class="token comment"># number of random samples </span>
randomCV <span class="token operator">=</span> RandomizedSearchCV<span class="token punctuation">(</span>clf<span class="token punctuation">,</span> param_distributions<span class="token operator">=</span>param_dist<span class="token punctuation">,</span> n_iter<span class="token operator">=</span>samples<span class="token punctuation">,</span>cv<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>


randomCV<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X<span class="token punctuation">,</span> y<span class="token punctuation">)</span>
randomCV<span class="token punctuation">.</span>best_params_
randomCV<span class="token punctuation">.</span>cv_results_<span class="token punctuation">[</span><span class="token string">&#39;mean_test_score&#39;</span><span class="token punctuation">]</span>
randomCV<span class="token punctuation">.</span>score<span class="token punctuation">(</span>X_test<span class="token punctuation">,</span>y_test<span class="token punctuation">)</span>  <span class="token comment"># 0.8744588744588745</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="网格搜索和随机搜索比较" tabindex="-1"><a class="header-anchor" href="#网格搜索和随机搜索比较" aria-hidden="true">#</a> 网格搜索和随机搜索比较</h3><table><thead><tr><th>网格搜索</th><th>随机搜索</th></tr></thead><tbody><tr><td>参数被定义好</td><td>参数没有被定义好</td></tr><tr><td>超参是离散的</td><td>超参是连续的</td></tr><tr><td>定义了网格空间</td><td>没有定义网格空间</td></tr><tr><td>计算复杂, 表现一般</td><td>计算简单, 表现较好</td></tr></tbody></table><figure><img src="`+p+`" alt="alt text" tabindex="0" loading="lazy"><figcaption>alt text</figcaption></figure><h2 id="进行超参搜索和不进行超参搜索比较" tabindex="-1"><a class="header-anchor" href="#进行超参搜索和不进行超参搜索比较" aria-hidden="true">#</a> 进行超参搜索和不进行超参搜索比较</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>model_selection <span class="token keyword">import</span> train_test_split
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>tree <span class="token keyword">import</span> DecisionTreeClassifier<span class="token punctuation">,</span> plot_tree
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">import</span> accuracy_score
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>model_selection <span class="token keyword">import</span> GridSearchCV

data_all <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>
    <span class="token string">&#39;./data/test/titanic.csv&#39;</span><span class="token punctuation">,</span> 
    usecols<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;Survived&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Pclass&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Age&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;SibSp&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Parch&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Fare&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Sex&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Embarked&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

data_all <span class="token operator">=</span> data_all<span class="token punctuation">.</span>dropna<span class="token punctuation">(</span><span class="token punctuation">)</span>

data_all <span class="token operator">=</span> pd<span class="token punctuation">.</span>merge<span class="token punctuation">(</span>data_all<span class="token punctuation">,</span> pd<span class="token punctuation">.</span>get_dummies<span class="token punctuation">(</span>data_all<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&#39;Sex&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Embarked&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> how<span class="token operator">=</span><span class="token string">&quot;inner&quot;</span><span class="token punctuation">,</span> left_index<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> right_index<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
data_all <span class="token operator">=</span> data_all<span class="token punctuation">.</span>drop<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Sex&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Embarked&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>

data_y <span class="token operator">=</span> data_all<span class="token punctuation">[</span><span class="token string">&#39;Survived&#39;</span><span class="token punctuation">]</span>
data_x <span class="token operator">=</span> data_all<span class="token punctuation">.</span>drop<span class="token punctuation">(</span><span class="token string">&#39;Survived&#39;</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>


X_train<span class="token punctuation">,</span> X_test<span class="token punctuation">,</span> y_train<span class="token punctuation">,</span> y_test <span class="token operator">=</span> train_test_split<span class="token punctuation">(</span>data_x<span class="token punctuation">,</span> data_y<span class="token punctuation">,</span> random_state <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span>

params_default <span class="token operator">=</span><span class="token punctuation">{</span>
    <span class="token string">&#39;criterion&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;gini&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;splitter&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;best&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;max_depth&#39;</span><span class="token punctuation">:</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
    <span class="token string">&#39;max_features&#39;</span><span class="token punctuation">:</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
    <span class="token string">&#39;random_state&#39;</span><span class="token punctuation">:</span> <span class="token number">10</span>
<span class="token punctuation">}</span>

clf <span class="token operator">=</span> DecisionTreeClassifier<span class="token punctuation">(</span><span class="token operator">**</span>params_default<span class="token punctuation">)</span>
clf<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X_train<span class="token punctuation">,</span> y_train<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>accuracy_score<span class="token punctuation">(</span>y_test<span class="token punctuation">,</span> clf<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X_test<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 0.79</span>



params <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;criterion&#39;</span><span class="token punctuation">:</span>  <span class="token punctuation">[</span><span class="token string">&#39;gini&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;entropy&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string">&#39;splitter&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&#39;best&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;random&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string">&#39;max_depth&#39;</span><span class="token punctuation">:</span>  <span class="token punctuation">[</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string">&#39;max_features&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token string">&#39;sqrt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;log2&#39;</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">,</span> <span class="token number">0.4</span><span class="token punctuation">,</span> <span class="token number">0.6</span><span class="token punctuation">,</span> <span class="token number">0.8</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string">&#39;random_state&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span>
    
<span class="token punctuation">}</span>

clf_grid <span class="token operator">=</span> GridSearchCV<span class="token punctuation">(</span>
    estimator<span class="token operator">=</span>DecisionTreeClassifier<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    param_grid<span class="token operator">=</span>params<span class="token punctuation">,</span>
    cv<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span>
    n_jobs<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span>
    verbose<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>

clf_grid<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X_train<span class="token punctuation">,</span> y_train<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>accuracy_score<span class="token punctuation">(</span>y_test<span class="token punctuation">,</span> clf_grid<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X_test<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 0.79</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>网格搜索后, 反倒是准确率下降了. 产生以上结果可能原因是测试集对直接训练的模型更有利. 我们随机分配训练集和测试集, 做100次训练, 可以看到通过网格搜索后的模型表现更稳定.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>count <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">101</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    

    X_train<span class="token punctuation">,</span> X_test<span class="token punctuation">,</span> y_train<span class="token punctuation">,</span> y_test <span class="token operator">=</span> train_test_split<span class="token punctuation">(</span>data_x<span class="token punctuation">,</span> data_y<span class="token punctuation">,</span> random_state <span class="token operator">=</span> i<span class="token punctuation">)</span>
    params_default <span class="token operator">=</span><span class="token punctuation">{</span>
        <span class="token string">&#39;criterion&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;gini&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;splitter&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;best&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;max_depth&#39;</span><span class="token punctuation">:</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
        <span class="token string">&#39;max_features&#39;</span><span class="token punctuation">:</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
        <span class="token string">&#39;random_state&#39;</span><span class="token punctuation">:</span> <span class="token number">10</span>
    <span class="token punctuation">}</span>


    clf <span class="token operator">=</span> DecisionTreeClassifier<span class="token punctuation">(</span><span class="token operator">**</span>params_default<span class="token punctuation">)</span>
    clf<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X_train<span class="token punctuation">,</span> y_train<span class="token punctuation">)</span>
    score_base <span class="token operator">=</span> accuracy_score<span class="token punctuation">(</span>y_test<span class="token punctuation">,</span> clf<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X_test<span class="token punctuation">)</span><span class="token punctuation">)</span>


    params <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&#39;criterion&#39;</span><span class="token punctuation">:</span>  <span class="token punctuation">[</span><span class="token string">&#39;gini&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;entropy&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string">&#39;splitter&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&#39;best&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;random&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string">&#39;max_depth&#39;</span><span class="token punctuation">:</span>  <span class="token punctuation">[</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string">&#39;max_features&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token string">&#39;sqrt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;log2&#39;</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">,</span> <span class="token number">0.4</span><span class="token punctuation">,</span> <span class="token number">0.6</span><span class="token punctuation">,</span> <span class="token number">0.8</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string">&#39;random_state&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span>
        
    <span class="token punctuation">}</span>

    clf_grid <span class="token operator">=</span> GridSearchCV<span class="token punctuation">(</span>
        estimator<span class="token operator">=</span>DecisionTreeClassifier<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        param_grid<span class="token operator">=</span>params<span class="token punctuation">,</span>
        cv<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span>
        n_jobs<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span>
        verbose<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span>

    clf_grid<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X_train<span class="token punctuation">,</span> y_train<span class="token punctuation">)</span>
    score_select <span class="token operator">=</span> accuracy_score<span class="token punctuation">(</span>y_test<span class="token punctuation">,</span> clf_grid<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X_test<span class="token punctuation">)</span><span class="token punctuation">)</span>
    count <span class="token operator">=</span> count <span class="token operator">+</span> <span class="token builtin">int</span><span class="token punctuation">(</span>score_select <span class="token operator">&gt;=</span> score_base<span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>count<span class="token operator">/</span><span class="token number">100</span><span class="token punctuation">)</span>  <span class="token comment"># 0.89</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2><ol><li>https://www.analyticsvidhya.com/blog/2022/02/a-comprehensive-guide-on-hyperparameter-tuning-and-its-techniques/</li><li>https://www.analyticsvidhya.com/blog/2024/06/hyperparameter-optimization-in-machine-learning-models/</li><li>https://www.analyticsvidhya.com/blog/2021/09/a-hands-on-discussion-on-hyperparameter-optimization-techniques/</li><li>https://www.analyticsvidhya.com/blog/2020/03/beginners-guide-random-forest-hyperparameter-tuning/</li><li>https://blog.csdn.net/weixin_38037405/article/details/120869498</li><li>https://zhuanlan.zhihu.com/p/334322761</li></ol>`,21),c=[o];function i(l,u){return s(),a("div",null,c)}const d=n(e,[["render",i],["__file","4_4_0超参调优hyperparameter-tuning.html.vue"]]);export{d as default};
