const e=JSON.parse(`{"key":"v-4312795c","path":"/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/git/Git%E5%91%BD%E4%BB%A4/revert.html","title":"revert","lang":"zh-CN","frontmatter":{"description":"revert idea演示 1.准备数据,每次提交一行 2.revert 到version2 3.弹出冲突 4.处理冲突 5.跳出正常的commit处理界面 git 命令操作 以上操作相当于 //1.指定revert的commit,HEAD~2是自身以0为起点,数三个commit(version2),然后用下一个(version1)的commit来merge git revert HEAD~2//或者git revert 4c7907(version的id) //2.处理冲突 处理冲突 //3.继续 git revert --continue //4.冲突后的文件修改 git add ./ //5.提交 git commit -m 'Revert Version2'","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/git/Git%E5%91%BD%E4%BB%A4/revert.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"revert"}],["meta",{"property":"og:description","content":"revert idea演示 1.准备数据,每次提交一行 2.revert 到version2 3.弹出冲突 4.处理冲突 5.跳出正常的commit处理界面 git 命令操作 以上操作相当于 //1.指定revert的commit,HEAD~2是自身以0为起点,数三个commit(version2),然后用下一个(version1)的commit来merge git revert HEAD~2//或者git revert 4c7907(version的id) //2.处理冲突 处理冲突 //3.继续 git revert --continue //4.冲突后的文件修改 git add ./ //5.提交 git commit -m 'Revert Version2'"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://claroja.github.io/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-27T13:31:52.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"revert"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2023-11-27T13:31:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"revert\\",\\"image\\":[\\"https://claroja.github.io/\\"],\\"dateModified\\":\\"2023-11-27T13:31:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[{"level":2,"title":"idea演示","slug":"idea演示","link":"#idea演示","children":[]},{"level":2,"title":"git 命令操作","slug":"git-命令操作","link":"#git-命令操作","children":[]}],"git":{"createdTime":1701091021000,"updatedTime":1701091912000,"contributors":[{"name":"claroja","email":"63183535@qq.com","commits":2}]},"readingTime":{"minutes":0.45,"words":136},"filePathRelative":"编程基础/git/Git命令/revert.md","localizedDate":"2023年11月27日","excerpt":"<h1> revert</h1>\\n<h2> idea演示</h2>\\n<p>1.准备数据,每次提交一行\\n\\n2.revert 到version2\\n\\n3.弹出冲突\\n\\n4.处理冲突\\n\\n5.跳出正常的commit处理界面\\n</p>\\n<h2> git 命令操作</h2>\\n<p>以上操作相当于</p>\\n<div class=\\"language-bash line-numbers-mode\\" data-ext=\\"sh\\"><pre class=\\"language-bash\\"><code>//1.指定revert的commit,HEAD~2是自身以0为起点,数三个commit<span class=\\"token punctuation\\">(</span>version2<span class=\\"token punctuation\\">)</span>,然后用下一个<span class=\\"token punctuation\\">(</span>version1<span class=\\"token punctuation\\">)</span>的commit来merge\\n<span class=\\"token function\\">git</span> revert HEAD~2//或者git revert 4c7907<span class=\\"token punctuation\\">(</span>version的id<span class=\\"token punctuation\\">)</span>\\n//2.处理冲突\\n处理冲突\\n//3.继续\\n<span class=\\"token function\\">git</span> revert <span class=\\"token parameter variable\\">--continue</span>\\n//4.冲突后的文件修改\\n<span class=\\"token function\\">git</span> <span class=\\"token function\\">add</span> ./\\n//5.提交\\n<span class=\\"token function\\">git</span> commit <span class=\\"token parameter variable\\">-m</span> <span class=\\"token string\\">'Revert Version2'</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"王新宇"},"autoDesc":true}`);export{e as data};
