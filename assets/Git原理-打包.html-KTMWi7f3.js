const t=JSON.parse('{"key":"v-076aa877","path":"/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/git/Git%E5%8E%9F%E7%90%86/Git%E5%8E%9F%E7%90%86-%E6%89%93%E5%8C%85.html","title":"rec_deepWide","lang":"zh-CN","frontmatter":{"description":"rec_deepWide Git使用zlib压缩这些文件(数据对象,树对象,提交对象,标签对象) 虽然只是在一个几万行的文件后面加入一行新内容，Git 也会用一个全新的对象来存储新的文件内容, 如果 Git 只完整保存其中一个，再保存另一个对象与之前版本的差异内容，岂不更好？ 事实上 Git 可以那样做。 Git 最初向磁盘中存储对象时所使用的格式被称为\\"松散（loose）\\"对象格式。 但是，Git 会时不时地将多个这些对象打包成一个称为\\"包文件（packfile）\\"的二进制文件，以节省空间和提高效率。 当版本库中有太多的松散对象，或者你手动执行 git gc 命令，或者你向远程服务器执行推送时，Git 都会这样做。","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/git/Git%E5%8E%9F%E7%90%86/Git%E5%8E%9F%E7%90%86-%E6%89%93%E5%8C%85.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"rec_deepWide"}],["meta",{"property":"og:description","content":"rec_deepWide Git使用zlib压缩这些文件(数据对象,树对象,提交对象,标签对象) 虽然只是在一个几万行的文件后面加入一行新内容，Git 也会用一个全新的对象来存储新的文件内容, 如果 Git 只完整保存其中一个，再保存另一个对象与之前版本的差异内容，岂不更好？ 事实上 Git 可以那样做。 Git 最初向磁盘中存储对象时所使用的格式被称为\\"松散（loose）\\"对象格式。 但是，Git 会时不时地将多个这些对象打包成一个称为\\"包文件（packfile）\\"的二进制文件，以节省空间和提高效率。 当版本库中有太多的松散对象，或者你手动执行 git gc 命令，或者你向远程服务器执行推送时，Git 都会这样做。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-25T13:46:58.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2023-11-25T13:46:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"rec_deepWide\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-25T13:46:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[],"git":{"createdTime":1700920018000,"updatedTime":1700920018000,"contributors":[{"name":"claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":1.71,"words":514},"filePathRelative":"编程基础/git/Git原理/Git原理-打包.md","localizedDate":"2023年11月25日","excerpt":"<h1> rec_deepWide</h1>\\n<p>Git使用zlib压缩这些文件(数据对象,树对象,提交对象,标签对象)</p>\\n<p>虽然只是在一个几万行的文件后面加入一行新内容，Git 也会用一个全新的对象来存储新的文件内容,\\n如果 Git 只完整保存其中一个，再保存另一个对象与之前版本的差异内容，岂不更好？\\n事实上 Git 可以那样做。 Git 最初向磁盘中存储对象时所使用的格式被称为\\"松散（loose）\\"对象格式。 但是，Git 会时不时地将多个这些对象打包成一个称为\\"包文件（packfile）\\"的二进制文件，以节省空间和提高效率。 当版本库中有太多的松散对象，或者你手动执行 git gc 命令，或者你向远程服务器执行推送时，Git 都会这样做。</p>","copyright":{"author":"王新宇"},"autoDesc":true}');export{t as data};
