import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as n,c as s,e as a}from"./app-A10JnHE0.js";const l={},o=a(`<h1 id="cmdlet" tabindex="-1"><a class="header-anchor" href="#cmdlet" aria-hidden="true">#</a> Cmdlet</h1><h2 id="基础设置" tabindex="-1"><a class="header-anchor" href="#基础设置" aria-hidden="true">#</a> 基础设置</h2><ol><li><code>$PSVersionTable</code>: 查看powershell的版本</li><li><code>Get-ExecutionPolicy</code>: 查看执行策略 <ol><li><code>Restricted</code>: 受限, 表示不能运行<code>.ps1</code>脚本</li><li><code>RemoteSigned</code>: , 使用<code>Set-ExecutionPolicy -ExecutionPolicy RemoteSigned</code>命令更改</li></ol></li></ol><h2 id="cmdlet-1" tabindex="-1"><a class="header-anchor" href="#cmdlet-1" aria-hidden="true">#</a> Cmdlet</h2><p>Cmdlet 的发音为“command-let”, Cmdlet 名称采用单数形式的“动词-名词”命令形式，这样更易于被发现。用于确定正在运行哪些进程的 cmdlet 是 Get-Process，而用于检索服务及其状态的列表的 cmdlet 是 Get-Service。</p><p>三个核心 Cmdlet:</p><ol><li>Get-Help</li><li>Get-Command</li><li>Get-Member</li></ol><h3 id="get-help" tabindex="-1"><a class="header-anchor" href="#get-help" aria-hidden="true">#</a> Get-Help</h3><p>返回帮助主题</p><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code><span class="token function">Get-Help</span> <span class="token operator">-</span>Name <span class="token function">Get-Help</span> <span class="token operator">-</span>Full
help <span class="token operator">-</span>Name <span class="token function">Get-Help</span> <span class="token operator">-</span>Full
help <span class="token function">Get-Help</span> <span class="token operator">-</span>Full
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第一个示例使用 Get-Help cmdlet，第二个示例使用 Help 函数，第三个示例在使用 Help 函数时省略了 Name 参数。 Name 是一个位置参数，在该示例中按位置使用该参数。</p><p>除了<code>-Full</code>之外的其他命令</p><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code><span class="token function">Get-Help</span> <span class="token operator">-</span>Name <span class="token function">Get-Command</span> <span class="token operator">-</span>Full
<span class="token function">Get-Help</span> <span class="token operator">-</span>Name <span class="token function">Get-Command</span> <span class="token operator">-</span>Detailed
<span class="token function">Get-Help</span> <span class="token operator">-</span>Name <span class="token function">Get-Command</span> <span class="token operator">-</span>Examples
<span class="token function">Get-Help</span> <span class="token operator">-</span>Name <span class="token function">Get-Command</span> <span class="token operator">-</span>Online
<span class="token function">Get-Help</span> <span class="token operator">-</span>Name <span class="token function">Get-Command</span> <span class="token operator">-</span>Parameter Noun
<span class="token function">Get-Help</span> <span class="token operator">-</span>Name <span class="token function">Get-Command</span> <span class="token operator">-</span>ShowWindow
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出到格式化窗口</p><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>help <span class="token function">Get-Command</span> <span class="token operator">-</span>Full <span class="token punctuation">|</span> <span class="token function">Out-GridView</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>支持通配符</p><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>help pr*cess
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="get-command" tabindex="-1"><a class="header-anchor" href="#get-command" aria-hidden="true">#</a> Get-Command</h3><p><code>Get-Command</code> 的作用是帮助查找命令。</p><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code><span class="token function">Get-Command</span> <span class="token operator">-</span>Name <span class="token operator">*</span>service*
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="get-member" tabindex="-1"><a class="header-anchor" href="#get-member" aria-hidden="true">#</a> Get-Member</h3><p>Get-Member可帮助发现可用于命令的对象、属性和方法。任何生成基于对象的输出的命令都可以通过管道传递到 Get-Member。</p><h4 id="属性" tabindex="-1"><a class="header-anchor" href="#属性" aria-hidden="true">#</a> 属性</h4><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code><span class="token function">Get-Service</span> <span class="token operator">-</span>Name w32time
<span class="token comment"># Status   Name               DisplayName</span>
<span class="token comment"># ------   ----               -----------</span>
<span class="token comment"># Running  w32time            Windows Time</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Status、Name 和 DisplayName都是属性. 更多的属性可以使用<code>Get-Service -Name w32time | Select-Object -Property *</code>命令来查看.</p><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code><span class="token function">Get-Service</span> <span class="token operator">-</span>Name w32time <span class="token punctuation">|</span> <span class="token function">Get-Member</span>


<span class="token comment">#    TypeName: System.ServiceProcess.ServiceController</span>
<span class="token comment"># Name                      MemberType    Definition</span>
<span class="token comment"># ----                      ----------    ----------</span>
<span class="token comment"># Name                      AliasProperty Name = ServiceName</span>
<span class="token comment"># RequiredServices          AliasProperty RequiredServices = ServicesDependedOn</span>
<span class="token comment"># Disposed                  Event         System.EventHandler Disposed(System.Object, Sy...</span>
<span class="token comment"># Close                     Method        void Close()</span>
<span class="token comment"># Continue                  Method        void Continue()</span>
<span class="token comment"># CanPauseAndContinue       Property      bool CanPauseAndContinue {get;}</span>
<span class="token comment"># CanShutdown               Property      bool CanShutdown {get;}</span>
<span class="token comment"># CanStop                   Property      bool CanStop {get;}</span>
<span class="token comment"># ToString                  ScriptMethod  System.Object ToString();</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>TypeName 指示返回的对象类型。 在本示例中，返回了 System.ServiceProcess.ServiceController 对象。 该对象通常缩写为 TypeName 最后一个句点之后的部分, 即为 ServiceController。</p><p>查找接受该类型的对象(<code>ServiceController</code>)作为输入的命令。</p><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code><span class="token function">Get-Command</span> <span class="token operator">-</span>ParameterType ServiceController

<span class="token comment"># CommandType     Name                                               Version    Source</span>
<span class="token comment"># -----------     ----                                               -------    ------</span>
<span class="token comment"># Cmdlet          Get-Service                                        3.1.0.0    Microsof...</span>
<span class="token comment"># Cmdlet          Start-Service                                      3.1.0.0    Microsof...</span>
<span class="token comment"># Cmdlet          Stop-Service                                       3.1.0.0    Microsof...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="方法" tabindex="-1"><a class="header-anchor" href="#方法" aria-hidden="true">#</a> 方法</h4><p>方法是可执行的操作。 使用 MemberType 参数来缩小 Get-Member 的结果范围，使其仅显示 Get-Service 的方法。</p><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code><span class="token function">Get-Service</span> <span class="token operator">-</span>Name w32time <span class="token punctuation">|</span> <span class="token function">Get-Member</span> <span class="token operator">-</span>MemberType Method

<span class="token comment"># TypeName: System.ServiceProcess.ServiceController</span>
<span class="token comment"># Name                      MemberType Definition</span>
<span class="token comment"># ----                      ---------- ----------</span>
<span class="token comment"># Close                     Method     void Close()</span>
<span class="token comment"># Stop                      Method     void Stop()</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>根据查找的结果来停止服务.</p><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code><span class="token punctuation">(</span><span class="token function">Get-Service</span> <span class="token operator">-</span>Name w32time<span class="token punctuation">)</span><span class="token punctuation">.</span>Stop<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>我很少使用方法，但仍需要注意这些方法。 有时你会遇到 Get-* 命令，却没有相应的命令来修改它。更好的选择是使用 cmdlet 执行该操作（如果存在）。 继续操作，并启动 Windows 时间服务，但这次使用 cmdlet 启动服务。</p><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code><span class="token function">Get-Service</span> <span class="token operator">-</span>Name w32time <span class="token punctuation">|</span> <span class="token function">Start-Service</span> <span class="token operator">-</span>PassThru
<span class="token comment"># Status   Name               DisplayName</span>
<span class="token comment"># ------   ----               -----------</span>
<span class="token comment"># Running  w32time            Windows Time</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>默认情况下，Start-Service 不会像 Get-Service 的启动方法那样返回任何结果。 但使用 cmdlet 的好处之一是，很多时候 cmdlet 提供了方法无法提供的其他功能。 上一个示例中使用了 PassThru 参数。 这会导致 cmdlet 生成输出，而它通常不生成输出。</p><h2 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h2><p>形式上是多行, 实际上是一行, 也就是说管道后面可以换行</p><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code><span class="token function">Get-Service</span> <span class="token punctuation">|</span>
  <span class="token function">Where-Object</span> CanPauseAndContinue <span class="token operator">-eq</span> <span class="token boolean">$true</span> <span class="token punctuation">|</span>
    <span class="token function">Select-Object</span> <span class="token operator">-</span>Property <span class="token operator">*</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>形式上是一行, 实际上是多行, <code>;</code>表示多个命令</p><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code><span class="token variable">$Service</span> = <span class="token string">&#39;w32time&#39;</span><span class="token punctuation">;</span> <span class="token function">Get-Service</span> <span class="token operator">-</span>Name <span class="token variable">$Service</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="cim" tabindex="-1"><a class="header-anchor" href="#cim" aria-hidden="true">#</a> CIM</h2><p>通用信息模型 (CIM) cmdlet。 CIM cmdlet 的设计目的是使其可以同时在 Windows 和非 Windows 计算机上使用。</p><p>所有 CIM cmdlet 都包含在一个模块中。 若要获取 CIM cmdlet 的列表，请结合使用 Get-Command 与 Module 参数</p><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2><ul><li>https://learn.microsoft.com/zh-cn/powershell/scripting/learn/ps101/01-getting-started?view=powershell-7.4</li></ul>`,47),i=[o];function t(c,p){return n(),s("div",null,i)}const m=e(l,[["render",t],["__file","Cmdlet.html.vue"]]);export{m as default};
