import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,e as t}from"./app-jdLxCr9I.js";const p={},e=t(`<h1 id="list" tabindex="-1"><a class="header-anchor" href="#list" aria-hidden="true">#</a> list</h1><p><code>class list([iterable])</code></p><h2 id="构造方法" tabindex="-1"><a class="header-anchor" href="#构造方法" aria-hidden="true">#</a> 构造方法</h2><ul><li>使用一对方括号表示空列表：<code>[]</code></li><li>使用方括号，用逗号分隔项目<code>[a]</code>, <code>[a, b, c]</code></li><li>使用列表推导式： <code>[x for x in iterable]</code></li><li>使用类型构造函数：<code>list()或list(iterable)</code></li></ul><h3 id="序列通用操作" tabindex="-1"><a class="header-anchor" href="#序列通用操作" aria-hidden="true">#</a> 序列通用操作</h3><table><thead><tr><th>操作</th><th>结果</th></tr></thead><tbody><tr><td>x in s</td><td>True如果s的项目等于x，则False</td></tr><tr><td>x not in s</td><td>False如果s的项目等于x，否则True</td></tr><tr><td>s + t</td><td>s和t的并置</td></tr><tr><td>s * n or n * s</td><td>相当于将s添加到自身n次</td></tr><tr><td>s[i]</td><td>i项目s，来源0</td></tr><tr><td>s[i:j]</td><td>从i到j的s</td></tr><tr><td>s[i:j:k]</td><td>slice of s from i to j with step k</td></tr><tr><td>len(s)</td><td>长度s</td></tr><tr><td>min(s)</td><td>s的最小项</td></tr><tr><td>max(s)</td><td>s的最大项目</td></tr><tr><td>s.index（x [， i [， j]]）</td><td>在s中（在索引i之后或索引j之前）的x</td></tr><tr><td>s.count(x)</td><td>s中x的总出现次数</td></tr></tbody></table><h3 id="可变序列操作" tabindex="-1"><a class="header-anchor" href="#可变序列操作" aria-hidden="true">#</a> 可变序列操作</h3><table><thead><tr><th>操作</th><th>结果</th></tr></thead><tbody><tr><td>s [i] = x</td><td>x替换s的项目i</td></tr><tr><td>s [i：j] = t</td><td>从可迭代的t的内容替换从i到j的s</td></tr><tr><td>del s [i：j]</td><td>与s [i：j] = []</td></tr><tr><td>s [i：j：k] = t</td><td>s[i:j:k]的元素被t取代</td></tr><tr><td>del s [i：j：k]</td><td>从列表中删除s[i:j:k]的元素</td></tr><tr><td>s.append(x)</td><td>将x追加到序列的末尾（与s [len（s）：len（s）] = [x]）</td></tr><tr><td>s.clear()</td><td>从s中删除所有项目（与del s [：]相同）</td></tr><tr><td>s.copy()</td><td>创建s的浅拷贝（与s[:]相同）</td></tr><tr><td>s.extend(t)或s + = t</td><td>使用t的内容延伸s（大部分与s [len（s）：len（s）] t3 &gt; = t）</td></tr><tr><td>s * = n</td><td>更新s，其内容重复n次</td></tr><tr><td>s.insert（i， x）</td><td>在由i给出的索引处插入x到s（与s [i：i] = [x]）</td></tr><tr><td>s.pop([i])</td><td>在i检索项目，并从s中删除它</td></tr><tr><td>s.remove(x)</td><td>从s中移除第一个项目s [i] == x</td></tr><tr><td>s.reverse()</td><td>反转s的项目</td></tr></tbody></table><p><strong>解包方式</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>t <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>
first<span class="token punctuation">,</span> <span class="token operator">*</span>middle<span class="token punctuation">,</span> last <span class="token operator">=</span> t
middle
<span class="token comment">#[2, 3]</span>
_<span class="token punctuation">,</span> <span class="token operator">*</span>rest <span class="token operator">=</span> t
rest
<span class="token comment">#[2, 3, 4]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>切片</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token builtin">list</span><span class="token punctuation">[</span>start<span class="token punctuation">:</span>stop<span class="token punctuation">:</span>step<span class="token punctuation">]</span>
s <span class="token operator">=</span> <span class="token builtin">slice</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span>stop<span class="token punctuation">,</span>step<span class="token punctuation">)</span>
<span class="token builtin">list</span><span class="token punctuation">[</span>s<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>列表推导式</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token punctuation">[</span><span class="token number">2</span><span class="token operator">*</span>x <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token comment"># </span>
<span class="token comment">#[0, 2, 4, 6, 8]</span>
<span class="token punctuation">[</span><span class="token number">2</span><span class="token operator">*</span>x <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token keyword">if</span> x<span class="token operator">%</span><span class="token number">2</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token comment"># if过滤</span>
<span class="token comment">#[0, 4, 8]</span>
<span class="token punctuation">[</span><span class="token number">2</span><span class="token operator">*</span>x <span class="token keyword">if</span> x<span class="token operator">%</span><span class="token number">2</span><span class="token operator">==</span><span class="token number">0</span> <span class="token keyword">else</span> <span class="token number">0.5</span><span class="token operator">*</span>x <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">]</span>  <span class="token comment"># if过滤+更改</span>
<span class="token comment">#[0, 0.5, 4, 1.5, 8]</span>
<span class="token punctuation">[</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span> <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token keyword">for</span> y <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token comment"># 笛卡尔</span>
<span class="token comment">#[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (1, 0), (1, 1), (1, 2), (1, 3), (1, 4), (2, 0), (2, 1), (2, 2), (2, 3), (2, 4), (3, 0), (3, 1), (3, 2), (3, 3), (3, 4), (4, 0), (4, 1), (4, 2), (4, 3), (4, 4)]</span>
<span class="token builtin">dict</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&#39;e&#39;</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">}</span>
<span class="token punctuation">[</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span> <span class="token keyword">for</span> x<span class="token punctuation">,</span>y <span class="token keyword">in</span> <span class="token builtin">dict</span><span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token comment">#根据字典生成</span>
<span class="token comment">#[(&#39;a&#39;, 1), (&#39;b&#39;, 2), (&#39;c&#39;, 3), (&#39;d&#39;, 4), (&#39;e&#39;, 5)]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>索引迭代</strong> enumerate()可以把一个list变成索引-元素对。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">for</span> i<span class="token punctuation">,</span> value <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;C&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> value<span class="token punctuation">)</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>zip</strong> zip()可以将可迭代的对象作为参数，将对象中对应的元素打包成一个个元组，并返回一个迭代器，常用于同时遍历两个可迭代对象。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>li1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Python&#39;</span> <span class="token punctuation">,</span><span class="token string">&#39;JavaScript&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Java&#39;</span><span class="token punctuation">]</span>
li2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
nl <span class="token operator">=</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>li1<span class="token punctuation">,</span> li2<span class="token punctuation">)</span>
<span class="token comment">#[(&#39;Python&#39;, 1), (&#39;JavaScript&#39;, 2), (&#39;Java&#39;, 3)]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配合dict可以生成字典</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>l1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;C&#39;</span><span class="token punctuation">]</span>
l2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
<span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">zip</span><span class="token punctuation">(</span>l1<span class="token punctuation">,</span> l2<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;C&#39;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>同时遍历两个列表:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>name_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;张三&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;李四&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;王五&#39;</span><span class="token punctuation">]</span>
age_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">54</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> name<span class="token punctuation">,</span> age <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>name_list<span class="token punctuation">,</span> age_list<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token string">&#39;:&#39;</span><span class="token punctuation">,</span> age<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>列表合并</strong> 除了用extend方法还可以用</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>l1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span>
l2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span>
l3 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">*</span>l1<span class="token punctuation">,</span> <span class="token operator">*</span>l2<span class="token punctuation">]</span>
l4 <span class="token operator">=</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>l1<span class="token punctuation">,</span> l2<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 利用了sum的特性</span>
l5 <span class="token operator">=</span> li<span class="token operator">+</span>li <span class="token comment"># 字典+法的重载</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>列表值的判定</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span>
a<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span>  <span class="token comment"># 返回一个元组，元组的第二个值是第二个值，这个在numpy中可以应用</span>
<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>map</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span>
<span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span>x<span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">,</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>flatten</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> itertools <span class="token keyword">import</span> chain
a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token builtin">list</span><span class="token punctuation">(</span>chain<span class="token punctuation">(</span><span class="token operator">*</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> itertools <span class="token keyword">import</span> chain
wordsList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;hello tom hello&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;aa bb&quot;</span><span class="token punctuation">]</span>
wordsListSplit <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span>x<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>wordsList<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token builtin">list</span><span class="token punctuation">(</span>chain<span class="token punctuation">(</span><span class="token operator">*</span>wordsListSplit<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>scala中有flatmap函数完成这个操作，既先flat再map</p><p><strong>filter</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>lst <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">filter</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span>x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token number">2</span><span class="token punctuation">,</span>lst<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>sort</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token builtin">sorted</span><span class="token punctuation">(</span><span class="token string">&quot;This is a test string from Andrew&quot;</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">.</span>lower<span class="token punctuation">,</span> reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>  <span class="token comment"># 不区分大小写，默认升序reverse=False</span>
student_tuples <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">&#39;john&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&#39;jane&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&#39;dave&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">]</span>
<span class="token builtin">sorted</span><span class="token punctuation">(</span>student_tuples<span class="token punctuation">,</span> key<span class="token operator">=</span><span class="token keyword">lambda</span> student<span class="token punctuation">:</span> student<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># 按元组第二个位置排序</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>reduce</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> functools <span class="token keyword">import</span> <span class="token builtin">reduce</span>
lst <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span>
<span class="token builtin">reduce</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">,</span>y<span class="token punctuation">:</span> x<span class="token operator">+</span>y<span class="token punctuation">,</span>lst<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>https://stackoverflow.com/questions/952914/how-to-make-a-flat-list-out-of-list-of-lists/952952?r=SearchResults#952952</p>`,39),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","list.html.vue"]]);export{k as default};
