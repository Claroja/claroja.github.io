import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as a,c as l,a as s,b as e}from"./app-A10JnHE0.js";const t={},i=s("h2",{id:"模型参数搜索",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#模型参数搜索","aria-hidden":"true"},"#"),e(" 模型参数搜索")],-1),o=s("ol",{start:"6"},[s("li",null,[s("p",null,"Logistic Regression:"),s("ol",null,[s("li",null,[e("C: 设置正则参数"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"λ")]),s("annotation",{encoding:"application/x-tex"},"\\lambda")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal"},"λ")])])]),e(", "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"C"),s("mo",null,"="),s("mfrac",null,[s("mn",null,"1"),s("mi",null,"λ")])]),s("annotation",{encoding:"application/x-tex"},"C=\\frac{1}{\\lambda}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.07153em"}},"C"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.1901em","vertical-align":"-0.345em"}}),s("span",{class:"mord"},[s("span",{class:"mopen nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8451em"}},[s("span",{style:{top:"-2.655em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"λ")])])]),s("span",{style:{top:"-3.23em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3.394em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"1")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.345em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter"})])])])])]),s("li",null,"penalty: Regularization term ('l1' or 'l2').")]),s("div",{class:"language-python line-numbers-mode","data-ext":"py"},[s("pre",{class:"language-python"},[s("code",null,[e("LogisticRegression"),s("span",{class:"token punctuation"},"("),e("C"),s("span",{class:"token operator"},"="),s("span",{class:"token number"},"1000.0"),s("span",{class:"token punctuation"},","),e(" random_state"),s("span",{class:"token operator"},"="),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},")"),e(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"})])])]),s("li",null,[s("p",null,"Neural Networks:"),s("ol",null,[s("li",null,"batch_size: Number of samples per gradient update."),s("li",null,"epochs: Number of epochs to train the model."),s("li",null,"optimizer: Optimizer algorithm to use (e.g., 'adam', 'sgd')."),s("li",null,"learning_rate: Learning rate for the optimizer.")])]),s("li",null,[s("p",null,"Decision Trees:"),s("ol",null,[s("li",null,"criterion is the function to measure the quality of a split"),s("li",null,"max_depth: Maximum depth of the tree."),s("li",null,"random_state is the seed used by the random number generator."),s("li",null,"min_samples_split: Minimum number of samples required to split a node."),s("li",null,"min_samples_leaf: Minimum number of samples required at each leaf node.")]),s("div",{class:"language-python line-numbers-mode","data-ext":"py"},[s("pre",{class:"language-python"},[s("code",null,[e("DecisionTreeClassifier"),s("span",{class:"token punctuation"},"("),e("criterion"),s("span",{class:"token operator"},"="),e("’entropy’"),s("span",{class:"token punctuation"},","),e(" max_depth"),s("span",{class:"token operator"},"="),s("span",{class:"token number"},"3"),s("span",{class:"token punctuation"},","),e(" random_state"),s("span",{class:"token operator"},"="),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},")"),e(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"})])])]),s("li",null,[s("p",null,"Random Forest:"),s("ol",null,[s("li",null,"Parameters from Decision Trees plus:"),s("li",null,"n_estimators: Number of trees in the forest."),s("li",null,"max_features: Number of features to consider when looking for the best split.")])]),s("li",null,[s("p",null,"Gradient Boosting Machines (GBM): Parameters for decision trees plus"),s("ol",null,[s("li",null,"n_estimators: Number of boosting stages."),s("li",null,"learning_rate: Learning rate shrinks the contribution of each tree."),s("li",null,"subsample: Fraction of samples used for fitting the individual base learners.")])]),s("li",null,[s("p",null,"K-Nearest Neighbors (KNN):"),s("ol",null,[s("li",null,"n_neighbors: Number of neighbors to consider."),s("li",null,[e("p Minkowski power parameter "),s("ol",null,[s("li",null,"p = 1, Manhattan distance"),s("li",null,"p = 2, Euclidean distance")])]),s("li",null,"metric: 举例矩阵")]),s("div",{class:"language-python line-numbers-mode","data-ext":"py"},[s("pre",{class:"language-python"},[s("code",null,[e("KNeighborsClassifier"),s("span",{class:"token punctuation"},"("),e("n_neighbors"),s("span",{class:"token operator"},"="),s("span",{class:"token number"},"5"),s("span",{class:"token punctuation"},","),e(" p"),s("span",{class:"token operator"},"="),s("span",{class:"token number"},"2"),s("span",{class:"token punctuation"},","),e(" metric"),s("span",{class:"token operator"},"="),s("span",{class:"token string"},"'minkowski'"),s("span",{class:"token punctuation"},")"),e(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"})])])]),s("li",null,[s("p",null,"Support Vector Machines (SVM):"),s("ol",null,[s("li",null,[e("kernel: Specifies the kernel type to be used. "),s("ol",null,[s("li",null,[e("linear classification, "),s("code",null,"kernel"),e(" = "),s("code",null,"linear")]),s("li",null,[e("non-linear classification, "),s("code",null,"kernel"),e(" = "),s("code",null,"rbf"),e(" or "),s("code",null,"sigmoid"),e(".")])])]),s("li",null,"C: Penalty parameter of the error term. controls the trade-off between smooth decision boundaries and classifying training points correctly."),s("li",null,"random_state is a pseudo-random number generator used to ensure reproducibility of results across different runs.")]),s("div",{class:"language-python line-numbers-mode","data-ext":"py"},[s("pre",{class:"language-python"},[s("code",null,[e("SVC"),s("span",{class:"token punctuation"},"("),e("kernel"),s("span",{class:"token operator"},"="),s("span",{class:"token string"},"'linear'"),s("span",{class:"token punctuation"},","),e(" C"),s("span",{class:"token operator"},"="),s("span",{class:"token number"},"1.0"),s("span",{class:"token punctuation"},","),e(" random_state"),s("span",{class:"token operator"},"="),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},")"),e(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"})])])]),s("li",null,[s("p",null,"Naive Bayes:"),s("p",null,"No specific hyperparameters for cross-validation in the typical sense, though you might cross-validate smoothing parameters for certain variants like Gaussian Naive Bayes.")])],-1),r=[i,o];function u(p,c){return a(),l("div",null,r)}const h=n(t,[["render",u],["__file","4_4_2超参调优_各模型参数.html.vue"]]);export{h as default};
