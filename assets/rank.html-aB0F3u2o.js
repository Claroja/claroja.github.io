const e=JSON.parse('{"key":"v-a9d57862","path":"/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/rank.html","title":"rank","lang":"zh-CN","frontmatter":{"description":"rank Learning to rank (LTR) 在信息检索(IR)，CTR，以及推荐系统中都有广泛的应用。 检索问题可以看做是给定 query 后，系统对文档集合中的候选 doc 进行检索，并对其排序，返回得分最高的 doc。 其中排序任务使用一个排序模型f(q,d)对doc进行排序，其中q表示查询，d表示候选doc。 实际上这里的特征按照与 query/doc 的关系大体上可以分为 {query 端特征, doc 端特征，query-doc 相关特征} 三类。 query 特征是指与 doc 无关的特征，例如 query 自身 embedding 或者在一些场景下可以是 query 的 id 特征，同理 doc 端特征是指与 query 无关的特征，例如 doc 的embedding 或者 id 特征。 而 query-doc 相关特征则可以是将 query-doc 进行联系的特征，例如 BM25 等文本匹配特征、后文会说到的使用 deep match 模型计算的 query-doc 相似特征，以及可以人工生成的 query-doc 之间的交叉特征。","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/rank.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"rank"}],["meta",{"property":"og:description","content":"rank Learning to rank (LTR) 在信息检索(IR)，CTR，以及推荐系统中都有广泛的应用。 检索问题可以看做是给定 query 后，系统对文档集合中的候选 doc 进行检索，并对其排序，返回得分最高的 doc。 其中排序任务使用一个排序模型f(q,d)对doc进行排序，其中q表示查询，d表示候选doc。 实际上这里的特征按照与 query/doc 的关系大体上可以分为 {query 端特征, doc 端特征，query-doc 相关特征} 三类。 query 特征是指与 doc 无关的特征，例如 query 自身 embedding 或者在一些场景下可以是 query 的 id 特征，同理 doc 端特征是指与 query 无关的特征，例如 doc 的embedding 或者 id 特征。 而 query-doc 相关特征则可以是将 query-doc 进行联系的特征，例如 BM25 等文本匹配特征、后文会说到的使用 deep match 模型计算的 query-doc 相似特征，以及可以人工生成的 query-doc 之间的交叉特征。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-27T13:17:01.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2023-11-27T13:17:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"rank\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-27T13:17:01.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[{"level":2,"title":"LTR分类","slug":"ltr分类","link":"#ltr分类","children":[]}],"git":{"createdTime":1701091021000,"updatedTime":1701091021000,"contributors":[{"name":"claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":1.59,"words":476},"filePathRelative":"机器学习/推荐系统/rank.md","localizedDate":"2023年11月27日","excerpt":"<h1> rank</h1>\\n<p>Learning to rank (LTR) 在信息检索(IR)，CTR，以及推荐系统中都有广泛的应用。</p>\\n<p>检索问题可以看做是给定 query 后，系统对文档集合中的候选 doc 进行检索，并对其排序，返回得分最高的 doc。</p>\\n<p>其中排序任务使用一个排序模型f(q,d)对doc进行排序，其中q表示查询，d表示候选doc。</p>\\n<p>实际上这里的特征按照与 query/doc 的关系大体上可以分为 {query 端特征, doc 端特征，query-doc 相关特征} 三类。 query 特征是指与 doc 无关的特征，例如 query 自身 embedding 或者在一些场景下可以是 query 的 id 特征，同理 doc 端特征是指与 query 无关的特征，例如 doc 的embedding 或者 id 特征。 而 query-doc 相关特征则可以是将 query-doc 进行联系的特征，例如 BM25 等文本匹配特征、后文会说到的使用 deep match 模型计算的 query-doc 相似特征，以及可以人工生成的 query-doc 之间的交叉特征。</p>","copyright":{"author":"王新宇"},"autoDesc":true}');export{e as data};
