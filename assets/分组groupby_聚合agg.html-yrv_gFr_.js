import{_ as p}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as i,c,b as n,d as s,e,a}from"./app-7knaTE3M.js";const u={},l=a(`<h1 id="agg聚合" tabindex="-1"><a class="header-anchor" href="#agg聚合" aria-hidden="true">#</a> agg聚合</h1><h2 id="最佳实践" tabindex="-1"><a class="header-anchor" href="#最佳实践" aria-hidden="true">#</a> 最佳实践</h2><ol><li>原理和SQL的<code>group by</code>一样</li><li>同时应用多个聚合函数</li></ol><h2 id="测试数据" tabindex="-1"><a class="header-anchor" href="#测试数据" aria-hidden="true">#</a> 测试数据</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span>
                <span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;wang&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;wei&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;zhao&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;li&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;wu&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                <span class="token string">&quot;gender&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;boy&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;girl&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;girl&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;boy&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;girl&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                <span class="token string">&quot;score&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">56</span><span class="token punctuation">,</span><span class="token number">67</span><span class="token punctuation">,</span><span class="token number">47</span><span class="token punctuation">,</span><span class="token number">87</span><span class="token punctuation">,</span><span class="token boolean">None</span><span class="token punctuation">]</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token triple-quoted-string string">&quot;&quot;&quot;

name	gender	score
0	wang	boy	56.0
1	wei	girl	67.0
2	zhao	girl	47.0
3	li	boy	87.0
4	wu	girl	Na
&quot;&quot;&quot;</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),r={id:"内置的快捷函数",tabindex:"-1"},d=n("a",{class:"header-anchor",href:"#内置的快捷函数","aria-hidden":"true"},"#",-1),k={href:"https://pandas.pydata.org/docs/user_guide/groupby.html#built-in-aggregation-methods",target:"_blank",rel:"noopener noreferrer"},g=a(`<ol><li>查看非空的值<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;gender&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span><span class="token punctuation">)</span>
df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;gender&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>agg<span class="token punctuation">(</span><span class="token string">&#39;sum&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token triple-quoted-string string">&quot;&quot;&quot;
gender	score
0	boy	143.0
1	girl	114.0
&quot;&quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol>`,1),v={id:"自定义函数",tabindex:"-1"},m=n("a",{class:"header-anchor",href:"#自定义函数","aria-hidden":"true"},"#",-1),b={href:"https://pandas.pydata.org/docs/user_guide/groupby.html#aggregation-with-user-defined-functions",target:"_blank",rel:"noopener noreferrer"},h=a(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;gender&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>agg<span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token triple-quoted-string string">&quot;&quot;&quot;

gender	name	score
0	boy	wangli	143.0
1	girl	weizhaowu	114.0
&quot;&quot;&quot;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>✨和内置的<code>sum()</code>函数不一样的地方是, 自定义的<code>x.sum()</code>的结果对<code>object</code>类型也起到的作用. 说明pandas内置的<code>sum()</code>函数是排除了类型为<code>object</code>列的</p><h2 id="同时应用多个聚合函数" tabindex="-1"><a class="header-anchor" href="#同时应用多个聚合函数" aria-hidden="true">#</a> 同时应用多个聚合函数</h2><p><code>agg()</code>方法的</p><ol><li>形参是聚合后的列名</li><li>实参元组 <ol><li>第一位, 是要应用的方法对应的列</li><li>第二位, 是分组应用的方法</li></ol></li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>
df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;gender&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>agg<span class="token punctuation">(</span>
    count_gender <span class="token operator">=</span><span class="token punctuation">(</span><span class="token string">&quot;gender&quot;</span><span class="token punctuation">,</span> <span class="token keyword">lambda</span> x<span class="token punctuation">:</span> <span class="token builtin">len</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token operator">/</span><span class="token builtin">len</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    proportion_gender <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">&quot;gender&quot;</span><span class="token punctuation">,</span> <span class="token keyword">lambda</span> x<span class="token punctuation">:</span> <span class="token builtin">len</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token triple-quoted-string string">&quot;&quot;&quot;
	gender	count_gender	proportion_gender
0	boy	0.4	2
1	girl	0.6	3
&quot;&quot;&quot;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>二次分组求占比.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>df_all_count <span class="token operator">=</span> df_all<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Deck&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Pclass&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&#39;Name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>rename<span class="token punctuation">(</span>columns<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;Name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Count&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span><span class="token punctuation">)</span>
df_all_count<span class="token punctuation">[</span><span class="token string">&#39;deck_sum&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df_all_count<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;Deck&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;Count&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>transform<span class="token punctuation">(</span><span class="token builtin">sum</span><span class="token punctuation">)</span>
df_all_count<span class="token punctuation">[</span><span class="token string">&#39;deck_ratio&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df_all_count<span class="token punctuation">[</span><span class="token string">&#39;Count&#39;</span><span class="token punctuation">]</span><span class="token operator">/</span>df_all_count<span class="token punctuation">[</span><span class="token string">&#39;deck_sum&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>本小节同时参考:</p><ol><li>https://pandas.pydata.org/docs/user_guide/groupby.html#applying-multiple-functions-at-once</li><li>https://pandas.pydata.org/docs/user_guide/groupby.html#named-aggregation</li></ol>`,10);function _(q,y){const t=o("ExternalLinkIcon");return i(),c("div",null,[l,n("h2",r,[d,s(),n("a",k,[s("内置的快捷函数"),e(t)])]),g,n("h2",v,[m,s(),n("a",b,[s("自定义函数"),e(t)])]),h])}const w=p(u,[["render",_],["__file","分组groupby_聚合agg.html.vue"]]);export{w as default};
