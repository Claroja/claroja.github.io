const t=JSON.parse('{"key":"v-75ca6560","path":"/4%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/2_1%E6%A0%91%E6%A8%A1%E5%9E%8B/4%E8%87%AA%E9%80%82%E5%BA%94%E6%8F%90%E5%8D%87%E6%A0%91.html","title":"AdaBoost","lang":"zh-CN","frontmatter":{"description":"AdaBoost 总结 AdaBoost的特点: 子树是stump树, 仅包含一个根节点和两个叶子节点, 随机森林子树则是完整的树 stump树，仅仅使用一个特征, 随机森林子树可以使用多个或全部特征 每棵子树的权重不一样, 随机森林子树权重是一样的 前一棵stump的error会影响到后一颗树, 随机森林中每棵树都是独立的 过程： 首先给每个样本初始化权重，等于总样本量的倒数 使用每个特征分别创建stump树，并计算gini impurity，选择gini impurity最小的作为第一棵stump，并计算权重error。 我们使用这个带权重的error来决定该棵树对最终结果的话语权。如果error越小，预测越准，则话语权越高 前一棵树预测正确的样本的权重会衰减（后一棵树的话语权降低），预测错误的样本的权重会增加（后一颗树的话语权会升高）","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/4%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/2_1%E6%A0%91%E6%A8%A1%E5%9E%8B/4%E8%87%AA%E9%80%82%E5%BA%94%E6%8F%90%E5%8D%87%E6%A0%91.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"AdaBoost"}],["meta",{"property":"og:description","content":"AdaBoost 总结 AdaBoost的特点: 子树是stump树, 仅包含一个根节点和两个叶子节点, 随机森林子树则是完整的树 stump树，仅仅使用一个特征, 随机森林子树可以使用多个或全部特征 每棵子树的权重不一样, 随机森林子树权重是一样的 前一棵stump的error会影响到后一颗树, 随机森林中每棵树都是独立的 过程： 首先给每个样本初始化权重，等于总样本量的倒数 使用每个特征分别创建stump树，并计算gini impurity，选择gini impurity最小的作为第一棵stump，并计算权重error。 我们使用这个带权重的error来决定该棵树对最终结果的话语权。如果error越小，预测越准，则话语权越高 前一棵树预测正确的样本的权重会衰减（后一棵树的话语权降低），预测错误的样本的权重会增加（后一颗树的话语权会升高）"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://claroja.github.io/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-21T12:59:55.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"AdaBoost"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2025-02-21T12:59:55.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"AdaBoost\\",\\"image\\":[\\"https://claroja.github.io/\\"],\\"dateModified\\":\\"2025-02-21T12:59:55.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]},{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"创建随机树桩","slug":"创建随机树桩","link":"#创建随机树桩","children":[{"level":3,"title":"数据","slug":"数据","link":"#数据","children":[]},{"level":3,"title":"创建第一个树桩","slug":"创建第一个树桩","link":"#创建第一个树桩","children":[]},{"level":3,"title":"创建第二个树桩","slug":"创建第二个树桩","link":"#创建第二个树桩","children":[]}]},{"level":2,"title":"预测","slug":"预测","link":"#预测","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1740142795000,"updatedTime":1740142795000,"contributors":[{"name":"Claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":5.89,"words":1766},"filePathRelative":"4机器学习/2_1树模型/4自适应提升树.md","localizedDate":"2025年2月21日","excerpt":"<h1> AdaBoost</h1>\\n<h2> 总结</h2>\\n<p>AdaBoost的特点:</p>\\n<ol>\\n<li>\\n<p>子树是stump树, 仅包含一个根节点和两个叶子节点, 随机森林子树则是完整的树</p>\\n</li>\\n<li>\\n<p>stump树，仅仅使用一个特征, 随机森林子树可以使用多个或全部特征</p>\\n</li>\\n<li>\\n<p>每棵子树的权重不一样, 随机森林子树权重是一样的</p>\\n</li>\\n<li>\\n<p>前一棵stump的error会影响到后一颗树, 随机森林中每棵树都是独立的</p>\\n</li>\\n<li>\\n<p>过程：</p>\\n</li>\\n</ol>\\n<ul>\\n<li>首先给每个样本初始化权重，等于总样本量的倒数</li>\\n<li>使用每个特征分别创建stump树，并计算gini impurity，选择gini impurity最小的作为第一棵stump，并计算权重error。</li>\\n<li>我们使用这个带权重的error来决定该棵树对最终结果的话语权。如果error越小，预测越准，则话语权越高</li>\\n<li>前一棵树预测正确的样本的权重会衰减（后一棵树的话语权降低），预测错误的样本的权重会增加（后一颗树的话语权会升高）</li>\\n</ul>","copyright":{"author":"王新宇"},"autoDesc":true}');export{t as data};
