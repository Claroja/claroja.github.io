const n=JSON.parse(`{"key":"v-6cf1d460","path":"/%E6%95%B0%E6%8D%AE%E5%B7%A5%E7%A8%8B/flink/operator/pyflink_stream_operator.html","title":"stream_operator","lang":"zh-CN","frontmatter":{"description":"stream_operator base map python暂不支持mapPartition from pyflink.common import Types from pyflink.datastream import StreamExecutionEnvironment, RuntimeExecutionMode ## declare an execution environment env = StreamExecutionEnvironment.get_execution_environment() env.set_runtime_mode(RuntimeExecutionMode.BATCH) env.set_parallelism(1) # write all the data to one file ## define the source ds = env.from_collection( collection=[(1, 'aaa|bb'), (2, 'bb|a'), (3, 'aaa|a')], type_info=Types.ROW([Types.INT(), Types.STRING()])) ds = ds.map(lambda x:x[0]) ## define the sink ds.print() ## submit for execution env.execute()","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/%E6%95%B0%E6%8D%AE%E5%B7%A5%E7%A8%8B/flink/operator/pyflink_stream_operator.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"stream_operator"}],["meta",{"property":"og:description","content":"stream_operator base map python暂不支持mapPartition from pyflink.common import Types from pyflink.datastream import StreamExecutionEnvironment, RuntimeExecutionMode ## declare an execution environment env = StreamExecutionEnvironment.get_execution_environment() env.set_runtime_mode(RuntimeExecutionMode.BATCH) env.set_parallelism(1) # write all the data to one file ## define the source ds = env.from_collection( collection=[(1, 'aaa|bb'), (2, 'bb|a'), (3, 'aaa|a')], type_info=Types.ROW([Types.INT(), Types.STRING()])) ds = ds.map(lambda x:x[0]) ## define the sink ds.print() ## submit for execution env.execute()"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-25T13:46:58.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2023-11-25T13:46:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"stream_operator\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-25T13:46:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[{"level":2,"title":"base","slug":"base","link":"#base","children":[{"level":3,"title":"map","slug":"map","link":"#map","children":[]},{"level":3,"title":"flat_map","slug":"flat-map","link":"#flat-map","children":[]},{"level":3,"title":"fliter","slug":"fliter","link":"#fliter","children":[]}]},{"level":2,"title":"agg","slug":"agg","link":"#agg","children":[{"level":3,"title":"key_by","slug":"key-by","link":"#key-by","children":[]},{"level":3,"title":"key_by + reduce","slug":"key-by-reduce","link":"#key-by-reduce","children":[]}]},{"level":2,"title":"rich function","slug":"rich-function","link":"#rich-function","children":[]}],"git":{"createdTime":1700920018000,"updatedTime":1700920018000,"contributors":[{"name":"claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":1.72,"words":515},"filePathRelative":"数据工程/flink/operator/pyflink_stream_operator.md","localizedDate":"2023年11月25日","excerpt":"<h1> stream_operator</h1>\\n<h2> base</h2>\\n<h3> map</h3>\\n<p>python暂不支持<code>mapPartition</code></p>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">from</span> pyflink<span class=\\"token punctuation\\">.</span>common <span class=\\"token keyword\\">import</span>  Types\\n<span class=\\"token keyword\\">from</span> pyflink<span class=\\"token punctuation\\">.</span>datastream <span class=\\"token keyword\\">import</span> StreamExecutionEnvironment<span class=\\"token punctuation\\">,</span> RuntimeExecutionMode\\n<span class=\\"token comment\\">## declare an execution environment</span>\\nenv <span class=\\"token operator\\">=</span> StreamExecutionEnvironment<span class=\\"token punctuation\\">.</span>get_execution_environment<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\nenv<span class=\\"token punctuation\\">.</span>set_runtime_mode<span class=\\"token punctuation\\">(</span>RuntimeExecutionMode<span class=\\"token punctuation\\">.</span>BATCH<span class=\\"token punctuation\\">)</span>\\nenv<span class=\\"token punctuation\\">.</span>set_parallelism<span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\"># write all the data to one file</span>\\n<span class=\\"token comment\\">## define the source</span>\\nds <span class=\\"token operator\\">=</span> env<span class=\\"token punctuation\\">.</span>from_collection<span class=\\"token punctuation\\">(</span>\\n    collection<span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'aaa|bb'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">(</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'bb|a'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">(</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'aaa|a'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span>\\n    type_info<span class=\\"token operator\\">=</span>Types<span class=\\"token punctuation\\">.</span>ROW<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">[</span>Types<span class=\\"token punctuation\\">.</span>INT<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> Types<span class=\\"token punctuation\\">.</span>STRING<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\nds <span class=\\"token operator\\">=</span> ds<span class=\\"token punctuation\\">.</span><span class=\\"token builtin\\">map</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">lambda</span> x<span class=\\"token punctuation\\">:</span>x<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token comment\\">## define the sink</span>\\nds<span class=\\"token punctuation\\">.</span><span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token comment\\">## submit for execution</span>\\nenv<span class=\\"token punctuation\\">.</span>execute<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"王新宇"},"autoDesc":true}`);export{n as data};
