import{_ as i}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as l,c as e,a}from"./app-7knaTE3M.js";const t={},r=a('<h1 id="新闻推荐-基于物品的召回" tabindex="-1"><a class="header-anchor" href="#新闻推荐-基于物品的召回" aria-hidden="true">#</a> 新闻推荐_基于物品的召回</h1><h2 id="召回的步骤" tabindex="-1"><a class="header-anchor" href="#召回的步骤" aria-hidden="true">#</a> 召回的步骤</h2><ol><li>创建文章的推荐列表</li><li>取出该用户所有点击的物品和点击时间<code>[(item1, time1), (item2, time2)..]</code></li><li>遍历该用户所有点击的物品, 时间, 以及时间位置 <ol><li>取出该历史物品的相似物品(topk个)(相似度两种算法: 普通相似度和内容相似度)</li><li>遍历所有相似的物品 <ol><li>如果相似物品在历史点击物品中, 则不处理</li><li>计算创建时间权重: 历史文章与相似文章创建时间差权重, 时间间隔越短权重越大</li><li>计算创建时间顺序权重: 相似文章对应的历史文章排位较靠前, 则创建时间顺序权重较大</li><li>计算文章内容相似: 历史文章与相似文章的内容的相似度</li><li>计算综合权重: 创建时间权重 x 创建时间顺序权重 x 文章内容相似度 x 普通相似权重</li><li>将综合权重, 写入推荐文章列表中</li></ol></li></ol></li><li>如果创建文章数目不满足, 则用热门商品补全, 综合权重设置为负数</li><li>对推荐文章列表按综合权重排序</li></ol><h2 id="参考代码" tabindex="-1"><a class="header-anchor" href="#参考代码" aria-hidden="true">#</a> 参考代码</h2><ol><li><a href="src/recall_itemBasedAct.py">text</a></li><li><a href="src/recall_itemBasedEmb.py">text</a></li><li><a href="src/tools_recall.py">text</a></li></ol>',5),o=[r];function c(_,d){return l(),e("div",null,o)}const n=i(t,[["render",c],["__file","1_1基于物品的召回.html.vue"]]);export{n as default};
