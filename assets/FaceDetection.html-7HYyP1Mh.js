const e=JSON.parse('{"key":"v-2d5fff76","path":"/4%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/4_1%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB/FaceDetection.html","title":"离散_负二项分布","lang":"zh-CN","frontmatter":{"description":"离散_负二项分布 人脸检测是计算机视觉一个问题：如何在图片中定位人脸。 传统算法已经很好的解决了这个问题，比如Opencv中提供的Cascade Classifier算法与Dlib提供的HOG算法。在深度学习领域，最先进的算法是MTCNN(Multi-task Cascade Convolutional Neural Network)，Dlib也提供了深度学习的模型，不过速度很慢。 opencv 传统方法 基于特征的（Feature-based）人脸检测算法是快速和有效的，在过去的几十年应用比较多。最成功的的算法就是Rapid object detection using a boosted cascade of simple features，在Opencv的(python库)[https://pypi.org/project/opencv-python/]中实现了Cascading classifiers。","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/4%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/4_1%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB/FaceDetection.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"离散_负二项分布"}],["meta",{"property":"og:description","content":"离散_负二项分布 人脸检测是计算机视觉一个问题：如何在图片中定位人脸。 传统算法已经很好的解决了这个问题，比如Opencv中提供的Cascade Classifier算法与Dlib提供的HOG算法。在深度学习领域，最先进的算法是MTCNN(Multi-task Cascade Convolutional Neural Network)，Dlib也提供了深度学习的模型，不过速度很慢。 opencv 传统方法 基于特征的（Feature-based）人脸检测算法是快速和有效的，在过去的几十年应用比较多。最成功的的算法就是Rapid object detection using a boosted cascade of simple features，在Opencv的(python库)[https://pypi.org/project/opencv-python/]中实现了Cascading classifiers。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-21T12:59:55.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2025-02-21T12:59:55.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"离散_负二项分布\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-21T12:59:55.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[{"level":2,"title":"opencv","slug":"opencv","link":"#opencv","children":[{"level":3,"title":"传统方法","slug":"传统方法","link":"#传统方法","children":[]},{"level":3,"title":"深度学习方法","slug":"深度学习方法","link":"#深度学习方法","children":[]}]},{"level":2,"title":"Dlib","slug":"dlib","link":"#dlib","children":[{"level":3,"title":"传统方法HOG","slug":"传统方法hog","link":"#传统方法hog","children":[]},{"level":3,"title":"深度学习方法","slug":"深度学习方法-1","link":"#深度学习方法-1","children":[]}]}],"git":{"createdTime":1740142795000,"updatedTime":1740142795000,"contributors":[{"name":"Claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":3.58,"words":1075},"filePathRelative":"4机器学习/4_1人脸识别/FaceDetection.md","localizedDate":"2025年2月21日","excerpt":"<h1> 离散_负二项分布</h1>\\n<p>人脸检测是计算机视觉一个问题：如何在图片中定位人脸。\\n传统算法已经很好的解决了这个问题，比如Opencv中提供的Cascade Classifier算法与Dlib提供的HOG算法。在深度学习领域，最先进的算法是MTCNN(Multi-task Cascade Convolutional Neural Network)，Dlib也提供了深度学习的模型，不过速度很慢。</p>\\n<h2> opencv</h2>\\n<h3> 传统方法</h3>\\n<p>基于特征的（Feature-based）人脸检测算法是快速和有效的，在过去的几十年应用比较多。最成功的的算法就是<a href=\\"https://ieeexplore.ieee.org/document/990517\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Rapid object detection using a boosted cascade of simple features</a>，在Opencv的(python库)[https://pypi.org/project/opencv-python/]中实现了<a href=\\"https://en.wikipedia.org/wiki/Cascading_classifiers\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Cascading classifiers</a>。</p>","copyright":{"author":"王新宇"},"autoDesc":true}');export{e as data};
