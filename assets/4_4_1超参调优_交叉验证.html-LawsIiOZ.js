import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as e,o,c as t,b as n,e as p,d as l,a as c}from"./app-9tftCahk.js";const i={},r=n("h1",{id:"超参调优-交叉验证",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#超参调优-交叉验证","aria-hidden":"true"},"#"),l(" 超参调优_交叉验证")],-1),u={href:"https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.cross_validate.html#sklearn.model_selection.cross_validate",target:"_blank",rel:"noopener noreferrer"},d=c(`<p>参数</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>sklearn<span class="token punctuation">.</span>model_selection<span class="token punctuation">.</span>cross_validate<span class="token punctuation">(</span>
    estimator<span class="token punctuation">,</span>                  <span class="token comment"># 实现了fit方法的模型</span>
    X<span class="token punctuation">,</span>                          <span class="token comment"># {array-like, sparse matrix} of shape (n_samples, n_features), 输入特征</span>
    y<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>                     <span class="token comment"># array-like of shape (n_samples,) or (n_samples, n_outputs), 输出标签</span>
    <span class="token operator">*</span><span class="token punctuation">,</span> 
    groups<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> 
    scoring<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>               <span class="token comment"># str, callable, list, tuple, or dict, 评估的方式</span>
    cv<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>                    <span class="token comment"># int, cross-validation generator or an iterable, 默认: 5折StratifiedKFold; int: 指定折数StratifiedKFold; generator: CV Spliter; iterable: ?.</span>
    n_jobs<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>                <span class="token comment"># int, 并行度</span>
    verbose<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>                  <span class="token comment"># int, </span>
    params<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>                <span class="token comment"># dict, </span>
    pre_dispatch<span class="token operator">=</span><span class="token string">&#39;2*n_jobs&#39;</span><span class="token punctuation">,</span>    <span class="token comment"># int or str, </span>
    return_train_score<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>   <span class="token comment"># bool, </span>
    return_estimator<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>     <span class="token comment"># bool,</span>
    return_indices<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>       <span class="token comment"># bool, </span>
    error_score<span class="token operator">=</span>nan             <span class="token comment"># ‘raise’ or numeric</span>
<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>返回</p><p>字典, 其中key是:</p><ol><li>test_score: 每次cv的测试集得分</li><li>train_score: 每次cv的训练集得分, 仅在return_train_score=True时返回</li><li>fit_time: 每次cv训练时长</li><li>score_time: 每次cv预测时长, 仅在return_train_score=True时返回</li><li>estimator: 每次cv训练好的模型, 仅在return_estimator=True时返回</li><li>indices: 每次cv测试集和训练集的划分坐标, 仅在return_indices=True时返回</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">sklearn</span><span class="token punctuation">.</span>model_selection<span class="token punctuation">.</span>ShuffleSplit<span class="token punctuation">(</span>
    n_splits<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span>        <span class="token comment"># int, 重新打乱和分割的次数, 每次都有放回的抽取, 所以测试集和测试集, 训练集和训练集可能相同, 但是测试集和训练集不会相同</span>
    <span class="token operator">*</span><span class="token punctuation">,</span> 
    test_size<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>     <span class="token comment"># float or int, 测试集大小</span>
    train_size<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>    <span class="token comment"># float or int, 训练集大小</span>
    random_state<span class="token operator">=</span><span class="token boolean">None</span>   <span class="token comment"># int, RandomState instance or None, 随机种子</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6);function m(k,v){const s=e("ExternalLinkIcon");return o(),t("div",null,[r,n("p",null,[n("a",u,[p(s)])]),d])}const h=a(i,[["render",m],["__file","4_4_1超参调优_交叉验证.html.vue"]]);export{h as default};
