import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as a,c as s,e}from"./app-M6UUlHgF.js";const t={},o=e(`<h1 id="sql" tabindex="-1"><a class="header-anchor" href="#sql" aria-hidden="true">#</a> sql</h1><h2 id="写入数据库" tabindex="-1"><a class="header-anchor" href="#写入数据库" aria-hidden="true">#</a> 写入数据库</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> sqlalchemy <span class="token keyword">import</span> create_engine
engine <span class="token operator">=</span> create_engine<span class="token punctuation">(</span><span class="token string">&quot;mysql+pymysql://root:123@localhost:3306/aaa?charset=utf8mb4&quot;</span><span class="token punctuation">)</span>
data<span class="token punctuation">.</span>to_sql<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">&quot;price&quot;</span><span class="token punctuation">,</span>con<span class="token operator">=</span>engine<span class="token punctuation">,</span>if_exists<span class="token operator">=</span><span class="token string">&#39;replace&#39;</span><span class="token punctuation">,</span>index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>index_label<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>to_sql</code>其他的参数说明:</li><li><code>name</code>: 输出的表名</li><li><code>con</code>: 与read_sql中相同，数据库链接</li><li><code>if_exits</code>： 三种模式：fail，若表存在，则不输出；replace：若表存在，覆盖原来表里的数据；append：若表存在，将数据写到原表的后面。默认为fail。</li><li><code>index</code>：是否将df的index单独写到一列中</li><li><code>index_label</code>:指定列作为df的index输出，此时index为True</li></ul><h2 id="读取数据库" tabindex="-1"><a class="header-anchor" href="#读取数据库" aria-hidden="true">#</a> 读取数据库</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> sqlalchemy <span class="token keyword">import</span> create_engine

sql <span class="token operator">=</span> <span class="token string">&#39;select * from data&#39;</span>
conn <span class="token operator">=</span> create_engine<span class="token punctuation">(</span><span class="token string">&#39;mysql+pymysql://root:159951@127.0.0.1:3306/test&#39;</span><span class="token punctuation">)</span>
pdata <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_sql<span class="token punctuation">(</span>sql<span class="token punctuation">,</span>conn<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>参考: https://blog.csdn.net/rubysxl/article/details/103947739</p>`,7),l=[o];function p(c,i){return a(),s("div",null,l)}const u=n(t,[["render",p],["__file","sql.html.vue"]]);export{u as default};
