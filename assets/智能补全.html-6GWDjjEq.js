import{_ as o}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as t,o as p,c,b as n,d as s,e as a,a as l}from"./app-9tftCahk.js";const r={},i=n("h1",{id:"智能补全",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#智能补全","aria-hidden":"true"},"#"),s(" 智能补全")],-1),d={href:"https://code.visualstudio.com/docs/editor/intellisense",target:"_blank",rel:"noopener noreferrer"},u={href:"https://code.visualstudio.com/docs/editor/intellisense#_types-of-completions",target:"_blank",rel:"noopener noreferrer"},k=l(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token comment">// 在一下情况中, 是否启用suggestions</span>
    <span class="token property">&quot;editor.quickSuggestions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;other&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token property">&quot;comments&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token property">&quot;strings&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// 经常使用的排在列表头</span>
    <span class="token property">&quot;editor.suggestSelection&quot;</span><span class="token operator">:</span> <span class="token string">&quot;recentlyUsed&quot;</span><span class="token punctuation">,</span>
    <span class="token comment">// 将snippet提示放在最前</span>
    <span class="token property">&quot;editor.snippetSuggestions&quot;</span><span class="token operator">:</span> <span class="token string">&quot;top&quot;</span><span class="token punctuation">,</span>
    <span class="token comment">// 禁止abc提示</span>
    <span class="token property">&quot;editor.suggest.showWords&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token comment">// 预先展示补全效果</span>
    <span class="token property">&quot;editor.suggest.preview&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="fencedcodeblock" tabindex="-1"><a class="header-anchor" href="#fencedcodeblock" aria-hidden="true">#</a> fencedCodeBlock</h2>`,2),m={href:"https://danielabaron.me/blog/vscode-markdown-basics-custom-fenced-languages/",target:"_blank",rel:"noopener noreferrer"};function v(b,_){const e=t("ExternalLinkIcon");return p(),c("div",null,[i,n("p",null,[n("a",d,[s("参考官网"),a(e)])]),n("p",null,[s("vscode的智能提示, 包含代码补全, snippet, 文字补全等. 具体分类可参考: "),n("a",u,[s("智能补全分类"),a(e)]),s(" 不需要单独安装, 所安装的extension中都已经实现.")]),k,n("p",null,[n("a",m,[s("参考"),a(e)])])])}const f=o(r,[["render",v],["__file","智能补全.html.vue"]]);export{f as default};
