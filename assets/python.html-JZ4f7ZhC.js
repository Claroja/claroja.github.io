import{_ as o}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as d,o as r,c as p,a as t,b as n,d as s,e as a}from"./app-jdLxCr9I.js";const c={},l=a('<h1 id="python" tabindex="-1"><a class="header-anchor" href="#python" aria-hidden="true">#</a> python</h1><h2 id="python-1" tabindex="-1"><a class="header-anchor" href="#python-1" aria-hidden="true">#</a> python</h2><table><thead><tr><th>快捷键</th><th>描述</th></tr></thead><tbody><tr><td><code>Alt+Shift+e</code></td><td>execute Selection/line(pyCharm)</td></tr><tr><td><code>Alt+e</code></td><td>run file in Terminal</td></tr><tr><td><code>Alt+d</code></td><td>debug file</td></tr><tr><td><code>F6</code></td><td>restart</td></tr><tr><td><code>F7</code></td><td>stepOver</td></tr><tr><td><code>F8</code></td><td>stepInto</td></tr><tr><td><code>Shift+F8</code></td><td>stepOut</td></tr></tbody></table><h2 id="debug" tabindex="-1"><a class="header-anchor" href="#debug" aria-hidden="true">#</a> debug</h2><p><code>Ctrl+d Ctrl+b</code> conditionalBreakpoint <code>Ctrl+d b</code> toggleBreakpoint <code>Ctrl+d d</code> disableAllBreakpoints <code>Ctrl+d r</code> removeAllBreakpoints <code>Ctrl+d w</code> selectionToWatch <code>Ctrl+d n</code> goToNextBreakpoint <code>Ctrl+d p</code> goToPreviousBreakpoint <code>Ctrl+d t</code> focusRepl <code>Ctrl+d e</code> selectionToRepl <code>Ctrl+d a</code> enableAllBreakpoints</p><h2 id="脚本传参" tabindex="-1"><a class="header-anchor" href="#脚本传参" aria-hidden="true">#</a> 脚本传参</h2><h3 id="直接运行程序传参" tabindex="-1"><a class="header-anchor" href="#直接运行程序传参" aria-hidden="true">#</a> 直接运行程序传参</h3>',7),i={href:"https://code.visualstudio.com/docs/editor/tasks",target:"_blank",rel:"noopener noreferrer"},u=a(`<ol><li>配置Task, Terminal -&gt; Configure Tasks...</li></ol><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token comment">// See https://go.microsoft.com/fwlink/?LinkId=733558</span>
    <span class="token comment">// for the documentation about the tasks.json format</span>
    <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2.0.0&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;tasks&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Run Python with argument&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;process&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;command&quot;</span><span class="token operator">:</span> <span class="token string">&quot;python&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;args&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                <span class="token string">&quot;\${file}&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;test&quot;</span>
            <span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token property">&quot;presentation&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token property">&quot;reveal&quot;</span><span class="token operator">:</span> <span class="token string">&quot;always&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;panel&quot;</span><span class="token operator">:</span> <span class="token string">&quot;new&quot;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>label</td><td>task的名称</td></tr><tr><td>type</td><td>shell 或 process, 暂时不清楚二者的差别</td></tr><tr><td>command</td><td>执行的程序, 比如bash, python等</td></tr><tr><td>args</td><td>参数列表, <code>\${file}</code>是目前打开的文件, 每个元素在命令行中用空格分隔.</td></tr><tr><td>presentation</td><td>如何输出, output is always revealed, new terminal is created on every task run.</td></tr></tbody></table>`,3),h={start:"2"},k={href:"https://code.visualstudio.com/docs/python/debugging",target:"_blank",rel:"noopener noreferrer"};function v(m,b){const e=d("ExternalLinkIcon");return r(),p("div",null,[l,t("p",null,[n("使用VSCode的Task功能, 参考"),t("a",i,[n("官方文档"),s(e)]),n(":")]),u,t("ol",h,[t("li",null,[n("运行Task, Terminal -> Run Task... "),t("a",k,[n("官方文档"),s(e)])])])])}const y=o(c,[["render",v],["__file","python.html.vue"]]);export{y as default};
