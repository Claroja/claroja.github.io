import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as a,c as s,e as t}from"./app-MTzDpLgJ.js";const e={},p=t(`<h1 id="抽样" tabindex="-1"><a class="header-anchor" href="#抽样" aria-hidden="true">#</a> 抽样</h1><p>随机抽样, 可以设置有放回或无放回, 以及每个样本的权重.</p><h2 id="抽样方法" tabindex="-1"><a class="header-anchor" href="#抽样方法" aria-hidden="true">#</a> 抽样方法</h2><p>随机抽样(random sampling)是一种消除抽样偏差的方法, 但随机抽样的结果包含了有偏差的样本的可能性. 多次选择同一样本的抽样方法称为有放回抽样(sampling with replacement) 同一个样本值选择一次的抽样方法称为无放回抽样(sampling without replacement)</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>  <span class="token comment"># 默认有放回抽样</span>
np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> replace<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>  <span class="token comment"># replace=False为无放回抽样</span>
np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>  <span class="token comment"># 设置随机种子可以保证代码的可复现性</span>
np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="应用" tabindex="-1"><a class="header-anchor" href="#应用" aria-hidden="true">#</a> 应用</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>aa_milne_arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;pooh&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rabbit&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;piglet&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Christopher&#39;</span><span class="token punctuation">]</span>
np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>aa_milne_arr<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> p<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">0.3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="api" tabindex="-1"><a class="header-anchor" href="#api" aria-hidden="true">#</a> API</h2><p><code>random.choice(a, size=None, replace=True, p=None)</code></p><h3 id="参数" tabindex="-1"><a class="header-anchor" href="#参数" aria-hidden="true">#</a> 参数</h3><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td><code>a: 1-D array-like or int</code></td><td>要随机收取的数组(如果为int, 则使用<code>np.arange(int)</code>生成数组)</td></tr><tr><td><code>size: int or tuple of ints, optional</code></td><td>随机抽样的结果的形状</td></tr><tr><td><code>replace: boolean, optional</code></td><td>默认为true, 既有放回的抽取</td></tr><tr><td><code>p: 1-D array-like, optional</code></td><td>随机抽样时, 每个样本被抽取的权重, 默认是均匀分布(uniform distribution), 每个样本权重一样</td></tr></tbody></table><h3 id="返回" tabindex="-1"><a class="header-anchor" href="#返回" aria-hidden="true">#</a> 返回</h3><p>返回抽样的结果, 可以是一个元素, 也可以是一个数组(<code>ndarray</code>)</p><p>参考: https://numpy.org/doc/stable/reference/random/generated/numpy.random.choice.html</p>`,14),o=[p];function c(i,u){return a(),s("div",null,o)}const d=n(e,[["render",c],["__file","抽样.html.vue"]]);export{d as default};
