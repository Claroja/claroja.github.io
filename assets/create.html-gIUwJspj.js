import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,e}from"./app-YE2Hltoy.js";const t={},p=e(`<h1 id="create" tabindex="-1"><a class="header-anchor" href="#create" aria-hidden="true">#</a> create</h1><h2 id="使用列表创建" tabindex="-1"><a class="header-anchor" href="#使用列表创建" aria-hidden="true">#</a> 使用列表创建</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>torch<span class="token punctuation">.</span>tensor<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment">## tensor([[1, 2, 3],</span>
<span class="token comment">##         [4, 5, 6]])</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="内置函数创建" tabindex="-1"><a class="header-anchor" href="#内置函数创建" aria-hidden="true">#</a> 内置函数创建</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>torch<span class="token punctuation">.</span>full<span class="token punctuation">(</span>size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fill_value<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>  <span class="token comment"># 使用指定的fill_value来初始化, numpy中第一个参数是shape</span>
<span class="token comment">## tensor([[2, 2],</span>
<span class="token comment">##         [2, 2]])</span>
torch<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span>size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 使用0来初始化数组, numpy中第一个参数是shape</span>
<span class="token comment">## tensor([[0., 0.],</span>
<span class="token comment">##         [0., 0.]])</span>
torch<span class="token punctuation">.</span>ones<span class="token punctuation">(</span>size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 使用0来初始化数组, numpy中第一个参数是shape</span>
<span class="token comment">## tensor([[1., 1.],</span>
<span class="token comment">##         [1., 1.]])</span>
torch<span class="token punctuation">.</span>empty<span class="token punctuation">(</span>size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 随机初始化元素, 速度不计较快, numpy中第一个参数是shape</span>
<span class="token comment">## tensor([[0.0000e+00, 1.8750e+00],</span>
<span class="token comment">##         [2.2421e-44, 0.0000e+00]])</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="序列生成创建" tabindex="-1"><a class="header-anchor" href="#序列生成创建" aria-hidden="true">#</a> 序列生成创建</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>torch<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span>  <span class="token comment"># 从10到30每隔5生成一个数</span>
<span class="token comment">## tensor([10, 15, 20, 25])</span>
torch<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span> <span class="token punctuation">)</span>  <span class="token comment"># 从0-2中间生成9个数</span>
<span class="token comment">## tensor([0.0000, 0.6667, 1.3333, 2.0000])</span>
torch<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span> <span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>  <span class="token comment"># 转换形状成2维数组</span>
<span class="token comment">## tensor([[0.0000, 0.6667],</span>
<span class="token comment">##         [1.3333, 2.0000]])</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="numpy" tabindex="-1"><a class="header-anchor" href="#numpy" aria-hidden="true">#</a> numpy</h2><h3 id="numpy-torch" tabindex="-1"><a class="header-anchor" href="#numpy-torch" aria-hidden="true">#</a> numpy-&gt;torch</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> torch
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

x <span class="token operator">=</span> np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
torch<span class="token punctuation">.</span>from_numpy<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">type</span><span class="token punctuation">(</span>torch<span class="token punctuation">.</span>float32<span class="token punctuation">)</span>
<span class="token comment">## tensor([[1., 1., 1.],</span>
<span class="token comment">##         [1., 1., 1.],</span>
<span class="token comment">##         [1., 1., 1.]])</span>

torch<span class="token punctuation">.</span>from_numpy<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">(</span><span class="token string">&quot;cuda&quot;</span><span class="token punctuation">)</span>
<span class="token comment">## tensor([[1., 1., 1.],</span>
<span class="token comment">##         [1., 1., 1.],</span>
<span class="token comment">##         [1., 1., 1.]], device=&#39;cuda:0&#39;, dtype=torch.float64)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="torch-numpy" tabindex="-1"><a class="header-anchor" href="#torch-numpy" aria-hidden="true">#</a> torch-&gt;numpy</h3><p>torch转换成numpy时要考虑两点:</p><ul><li>tensor可能在不同的设备上, 比如GPU(numpy只能在CPU)</li><li>tensor可能支持automatic differentiation,既<code>requires_grad=True</code></li></ul><h4 id="torch在cpu-且没有自动求导" tabindex="-1"><a class="header-anchor" href="#torch在cpu-且没有自动求导" aria-hidden="true">#</a> torch在CPU, 且没有自动求导</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> torch
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

x <span class="token operator">=</span> torch<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

x<span class="token punctuation">.</span>numpy<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">## array([[1., 1., 1.],</span>
<span class="token comment">## #        [1., 1., 1.],</span>
<span class="token comment">## #        [1., 1., 1.]], dtype=float32)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="torch在cpu-有自动求导" tabindex="-1"><a class="header-anchor" href="#torch在cpu-有自动求导" aria-hidden="true">#</a> torch在CPU, 有自动求导</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> torch
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

x <span class="token operator">=</span> torch<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
x<span class="token punctuation">.</span>requires_grad <span class="token operator">=</span> <span class="token boolean">True</span>

x<span class="token punctuation">.</span>detach<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>numpy<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">## array([[1., 1., 1.],</span>
<span class="token comment">## #        [1., 1., 1.],</span>
<span class="token comment">## #        [1., 1., 1.]], dtype=float32)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="torch在gpu-有自动求导" tabindex="-1"><a class="header-anchor" href="#torch在gpu-有自动求导" aria-hidden="true">#</a> torch在GPU, 有自动求导</h4><p><code>detach()</code>和<code>to()</code>没有前后顺序的要求</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> torch
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

x <span class="token operator">=</span> torch<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
x<span class="token punctuation">.</span>requires_grad <span class="token operator">=</span> <span class="token boolean">True</span>
x <span class="token operator">=</span> x<span class="token punctuation">.</span>to<span class="token punctuation">(</span><span class="token string">&quot;cuda&quot;</span><span class="token punctuation">)</span>
x<span class="token punctuation">.</span>to<span class="token punctuation">(</span><span class="token string">&quot;cpu&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>detach<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>numpy<span class="token punctuation">(</span><span class="token punctuation">)</span>
x<span class="token punctuation">.</span>detach<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">(</span><span class="token string">&quot;cpu&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>numpy<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">## array([[1., 1., 1.],</span>
<span class="token comment">##        [1., 1., 1.],</span>
<span class="token comment">##        [1., 1., 1.]], dtype=float32)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>参考: https://sparrow.dev/pytorch-numpy-conversion/</p>`,21),c=[p];function o(i,u){return s(),a("div",null,c)}const d=n(t,[["render",o],["__file","create.html.vue"]]);export{d as default};
