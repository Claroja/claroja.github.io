const e=JSON.parse('{"key":"v-50b3c574","path":"/4%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/3python/7%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E6%8F%8F%E8%BF%B0%E7%AC%A6(descriptor)/delete.html","title":"delete","lang":"zh-CN","frontmatter":{"description":"delete 当一个类中包含了魔术方法__get__(),__set__(),__delete__()任何一个时, 这个类就称为描述符类. 作用: 对一个类中的某个成员进行一个详细的管理操作(获取,赋值,删除) 类似于代理的思想 下例中, PersionName对应了Person实例的一个属性, 当我们访问Person的属性name时, 是调用了PersonName中的三个描述符方法.","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/4%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/3python/7%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E6%8F%8F%E8%BF%B0%E7%AC%A6(descriptor)/delete.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"delete"}],["meta",{"property":"og:description","content":"delete 当一个类中包含了魔术方法__get__(),__set__(),__delete__()任何一个时, 这个类就称为描述符类. 作用: 对一个类中的某个成员进行一个详细的管理操作(获取,赋值,删除) 类似于代理的思想 下例中, PersionName对应了Person实例的一个属性, 当我们访问Person的属性name时, 是调用了PersonName中的三个描述符方法."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-24T12:46:58.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2025-02-24T12:46:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"delete\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-24T12:46:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[],"git":{"createdTime":1740401218000,"updatedTime":1740401218000,"contributors":[{"name":"Claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":0.59,"words":176},"filePathRelative":"4编程语言/3python/7面向对象/描述符(descriptor)/delete.md","localizedDate":"2025年2月24日","excerpt":"<h1> delete</h1>\\n<p>当一个类中包含了魔术方法<code>__get__()</code>,<code>__set__()</code>,<code>__delete__()</code>任何一个时, 这个类就称为描述符类.\\n作用:</p>\\n<ol>\\n<li>对一个类中的某个成员进行一个详细的管理操作(获取,赋值,删除)</li>\\n<li>类似于代理的思想</li>\\n</ol>\\n<p>下例中, <code>PersionName</code>对应了<code>Person</code>实例的一个属性, 当我们访问<code>Person</code>的属性<code>name</code>时, 是调用了<code>PersonName</code>中的三个描述符方法.</p>","copyright":{"author":"王新宇"},"autoDesc":true}');export{e as data};
