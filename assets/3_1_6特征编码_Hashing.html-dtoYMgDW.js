import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as t,o,c,b as n,d as s,e as i,a as p}from"./app-nD1Z-e8V.js";const l={},r=n("h1",{id:"哈希编码-hashingencoder",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#哈希编码-hashingencoder","aria-hidden":"true"},"#"),s(" 哈希编码(HashingEncoder)")],-1),d=n("ol",null,[n("li",null,"哈希编码是使用二进制对标签编码做哈希映射。好处在于哈希编码器不需要维护类别字典，且输出长度是固定的。若后续出现训练集未出现的类别，哈希编码还能接受新值。"),n("li",null,"对于类别取值较多的特征，哈希法编码可以将原始的高维特征向量压缩成较低维特征向量，且尽量不损失原始特征的表达能力。但按位分开哈希编码，模型学习相对比较困难。")],-1),u=n("h2",{id:"pandas",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#pandas","aria-hidden":"true"},"#"),s(" pandas")],-1),k={id:"category-encoders",tabindex:"-1"},m=n("a",{class:"header-anchor",href:"#category-encoders","aria-hidden":"true"},"#",-1),_={href:"https://contrib.scikit-learn.org/category_encoders/index.html",target:"_blank",rel:"noopener noreferrer"},h=p(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> category_encoders <span class="token keyword">as</span> ce
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
data <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token string">&#39;Sex&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">&#39;F&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;M&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;M&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;F&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;M&#39;</span><span class="token punctuation">,</span><span class="token boolean">None</span><span class="token punctuation">,</span><span class="token string">&#39;F&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;M&#39;</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

ce<span class="token punctuation">.</span>HashingEncoder<span class="token punctuation">(</span>cols<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;Sex&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>data<span class="token punctuation">)</span>


<span class="token comment">#    col_0  col_1  col_2  col_3  col_4  col_5  col_6  col_7</span>
<span class="token comment"># 0      0      0      1      0      0      0      0      0</span>
<span class="token comment"># 1      0      0      0      0      1      0      0      0</span>
<span class="token comment"># 2      0      0      0      0      1      0      0      0</span>
<span class="token comment"># 3      0      0      1      0      0      0      0      0</span>
<span class="token comment"># 4      0      0      0      0      1      0      0      0</span>
<span class="token comment"># 5      0      0      0      0      0      0      0      0</span>
<span class="token comment"># 6      0      0      1      0      0      0      0      0</span>
<span class="token comment"># 7      0      0      0      0      1      0      0      0</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2><ol><li>https://datascience.stackexchange.com/questions/39317/difference-between-ordinalencoder-and-labelencoder</li><li>https://www.cnblogs.com/dangui/p/15836197.html</li></ol>`,3);function v(b,g){const a=t("ExternalLinkIcon");return o(),c("div",null,[r,d,u,n("h2",k,[m,s(),n("a",_,[s("category_encoders"),i(a)])]),h])}const y=e(l,[["render",v],["__file","3_1_6特征编码_Hashing.html.vue"]]);export{y as default};
