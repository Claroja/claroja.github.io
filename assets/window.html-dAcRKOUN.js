const t=JSON.parse('{"key":"v-04585c3b","path":"/%E6%95%B0%E6%8D%AE%E5%B7%A5%E7%A8%8B/flink/%E5%9F%BA%E7%A1%80/window.html","title":"window","lang":"zh-CN","frontmatter":{"description":"window 比如 是因为我们想看到过去一分钟，过去半小时的访问数据，这时候我们就需要窗口。 Window: Windows将无界流拆分为一个个有限大小的buckets，然后在每一个buckets中进行计算。 (start_time,end_time]：当创建Window时间窗口的时，每个window都会有一个开始时间和结束时间（前开后闭），这个时间是系统时间。 窗口生命周期, 只要属于此窗口的第一个元素到达，就会创建一个窗口，当时间（事件或处理时间）超过其结束时间戳加上用户指定的允许延迟时，窗口将被完全删除。例如：使用基于事件时间的窗口策略，每5分钟创建一个不重叠（或翻滚）的窗口并允许延迟1分钟。假定目前是12:00。当具有落入该间隔的时间戳的第一个元素到达时，Flink将为12:00到12:05之间的间隔创建一个新窗口，当水位线（watermark）到12:06时间戳时将删除它。","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/%E6%95%B0%E6%8D%AE%E5%B7%A5%E7%A8%8B/flink/%E5%9F%BA%E7%A1%80/window.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"window"}],["meta",{"property":"og:description","content":"window 比如 是因为我们想看到过去一分钟，过去半小时的访问数据，这时候我们就需要窗口。 Window: Windows将无界流拆分为一个个有限大小的buckets，然后在每一个buckets中进行计算。 (start_time,end_time]：当创建Window时间窗口的时，每个window都会有一个开始时间和结束时间（前开后闭），这个时间是系统时间。 窗口生命周期, 只要属于此窗口的第一个元素到达，就会创建一个窗口，当时间（事件或处理时间）超过其结束时间戳加上用户指定的允许延迟时，窗口将被完全删除。例如：使用基于事件时间的窗口策略，每5分钟创建一个不重叠（或翻滚）的窗口并允许延迟1分钟。假定目前是12:00。当具有落入该间隔的时间戳的第一个元素到达时，Flink将为12:00到12:05之间的间隔创建一个新窗口，当水位线（watermark）到12:06时间戳时将删除它。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-27T13:17:01.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2023-11-27T13:17:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"window\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-27T13:17:01.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[],"git":{"createdTime":1701091021000,"updatedTime":1701091021000,"contributors":[{"name":"claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":1.3,"words":390},"filePathRelative":"数据工程/flink/基础/window.md","localizedDate":"2023年11月27日","excerpt":"<h1> window</h1>\\n<p>比如 是因为我们想看到过去一分钟，过去半小时的访问数据，这时候我们就需要窗口。</p>\\n<p><strong>Window</strong>: Windows将无界流拆分为一个个有限大小的buckets，然后在每一个buckets中进行计算。\\n<strong>(start_time,end_time]</strong>：当创建Window时间窗口的时，每个window都会有一个开始时间和结束时间（前开后闭），这个时间是系统时间。</p>\\n<p><strong>窗口生命周期</strong>, 只要属于此窗口的第一个元素到达，就会创建一个窗口，当时间（事件或处理时间）超过其结束时间戳加上用户指定的允许延迟时，窗口将被完全删除。例如：使用基于事件时间的窗口策略，每5分钟创建一个不重叠（或翻滚）的窗口并允许延迟1分钟。假定目前是12:00。当具有落入该间隔的时间戳的第一个元素到达时，Flink将为12:00到12:05之间的间隔创建一个新窗口，当水位线（watermark）到12:06时间戳时将删除它。</p>","copyright":{"author":"王新宇"},"autoDesc":true}');export{t as data};
