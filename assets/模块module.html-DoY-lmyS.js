import{_ as o}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as t,o as l,c,b as n,d as a,e as s,a as i}from"./app-nD1Z-e8V.js";const p={},r=n("h1",{id:"模块module",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#模块module","aria-hidden":"true"},"#"),a(" 模块module")],-1),d=n("p",null,"nodejs有两种模块规范:",-1),u={href:"https://nodejs.org/dist/latest-v20.x/docs/api/modules.html",target:"_blank",rel:"noopener noreferrer"},m={href:"https://nodejs.org/dist/latest-v20.x/docs/api/esm.html",target:"_blank",rel:"noopener noreferrer"},h=i(`<p>ECMAScript是未来的发展方向, 也是这篇文章的主要内容.</p><h2 id="指定模块类型" tabindex="-1"><a class="header-anchor" href="#指定模块类型" aria-hidden="true">#</a> 指定模块类型</h2><p>由于nodejs有两种模块导入模式, 所以需要告诉nodejs使用哪种方式. 如, 指定esm(ecma script modules)模式:</p><ul><li>文件使用<code>.mjs</code>类型</li><li><code>package.json</code>文件中设置: <ul><li>&quot;type&quot;: &quot;module&quot;</li><li>&quot;--input-type&quot;: &quot;module&quot;</li><li>或者&quot;--experimental-default-type&quot;: &quot;module&quot;</li></ul></li></ul><h2 id="模块导入写法" tabindex="-1"><a class="header-anchor" href="#模块导入写法" aria-hidden="true">#</a> 模块导入写法</h2><p>有三种写法:</p><ul><li>相对路径: <code>&#39;./startup.js&#39;</code>, 相对如本文件的路径, 注意这里不是相对于工作路径</li><li>绝对路径: <code>&#39;file:///opt/nodejs/config.js&#39;</code></li><li>Bare路径: <code>&#39;some-package/shuffle&#39;</code>,</li></ul><blockquote><p>相对路径和绝对路径都需要带上文件的拓展名<code>.js</code></p></blockquote><h2 id="例子" tabindex="-1"><a class="header-anchor" href="#例子" aria-hidden="true">#</a> 例子</h2><p>下面的代码导出(export)一个方法:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// addTwo.mjs</span>
<span class="token keyword">function</span> <span class="token function">addTwo</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> num <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token punctuation">{</span> addTwo <span class="token punctuation">}</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下面的代码导入(import)一个方法:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// app.mjs</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> addTwo <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./addTwo.mjs&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// Prints: 6</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">addTwo</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2>`,14),k={href:"https://zhuanlan.zhihu.com/p/367249029",target:"_blank",rel:"noopener noreferrer"},v={href:"https://262.ecma-international.org/14.0/",target:"_blank",rel:"noopener noreferrer"};function _(f,b){const e=t("ExternalLinkIcon");return l(),c("div",null,[r,d,n("ul",null,[n("li",null,[n("a",u,[a("CommonJS modules"),s(e)])]),n("li",null,[n("a",m,[a("ECMAScript modules"),s(e)])])]),h,n("p",null,[n("a",k,[a("ECMAScript"),s(e)]),n("a",v,[a("ecma"),s(e)])])])}const x=o(p,[["render",_],["__file","模块module.html.vue"]]);export{x as default};
