const e=JSON.parse(`{"key":"v-528e059c","path":"/%E7%88%AC%E8%99%AB/selenium/javascript/selenium_javascript.html","title":"javascript","lang":"zh-CN","frontmatter":{"description":"javascript 可以通过执行javascript代码来获得元素. 建议使用querySelector方法, 因为: 选择器是通用的, 在bs4中也可以使用 选择器的书写比较简单, 比写getElementByID这些方法简便 通过js获得元素 elem = driver.execute_script(f'return document.querySelector(\\"p\\")') df_item = pd.read_html(elem.get_attribute('outerHTML'))[0]","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/%E7%88%AC%E8%99%AB/selenium/javascript/selenium_javascript.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"javascript"}],["meta",{"property":"og:description","content":"javascript 可以通过执行javascript代码来获得元素. 建议使用querySelector方法, 因为: 选择器是通用的, 在bs4中也可以使用 选择器的书写比较简单, 比写getElementByID这些方法简便 通过js获得元素 elem = driver.execute_script(f'return document.querySelector(\\"p\\")') df_item = pd.read_html(elem.get_attribute('outerHTML'))[0]"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-25T13:46:58.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2023-11-25T13:46:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"javascript\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-25T13:46:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[],"git":{"createdTime":1700920018000,"updatedTime":1700920018000,"contributors":[{"name":"claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":0.41,"words":123},"filePathRelative":"爬虫/selenium/javascript/selenium_javascript.md","localizedDate":"2023年11月25日","excerpt":"<h1> javascript</h1>\\n<p>可以通过执行<code>javascript</code>代码来获得元素. 建议使用<code>querySelector</code>方法, 因为:</p>\\n<ol>\\n<li>\\n<p>选择器是通用的, 在<code>bs4</code>中也可以使用</p>\\n</li>\\n<li>\\n<p>选择器的书写比较简单, 比写<code>getElementByID</code>这些方法简便</p>\\n</li>\\n<li>\\n<p>通过<code>js</code>获得元素</p>\\n</li>\\n</ol>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code>elem <span class=\\"token operator\\">=</span> driver<span class=\\"token punctuation\\">.</span>execute_script<span class=\\"token punctuation\\">(</span><span class=\\"token string-interpolation\\"><span class=\\"token string\\">f'return document.querySelector(\\"p\\")'</span></span><span class=\\"token punctuation\\">)</span>\\ndf_item <span class=\\"token operator\\">=</span> pd<span class=\\"token punctuation\\">.</span>read_html<span class=\\"token punctuation\\">(</span>elem<span class=\\"token punctuation\\">.</span>get_attribute<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'outerHTML'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"王新宇"},"autoDesc":true}`);export{e as data};
