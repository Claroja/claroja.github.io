import{_ as p}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as e,o,c,b as s,d as n,e as i,a}from"./app-9tftCahk.js";const l={},u=a(`<h2 id="最佳实践" tabindex="-1"><a class="header-anchor" href="#最佳实践" aria-hidden="true">#</a> 最佳实践</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> sklearn <span class="token keyword">import</span> svm<span class="token punctuation">,</span> linear_model<span class="token punctuation">,</span> neighbors<span class="token punctuation">,</span> naive_bayes<span class="token punctuation">,</span> ensemble<span class="token punctuation">,</span> gaussian_process
<span class="token keyword">from</span> xgboost <span class="token keyword">import</span> XGBClassifier
<span class="token keyword">from</span> sklearn <span class="token keyword">import</span> datasets
<span class="token keyword">from</span> sklearn <span class="token keyword">import</span> model_selection

data <span class="token operator">=</span> datasets<span class="token punctuation">.</span>load_iris<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># 以下模型均带有predict_proba方法, 均适应soft投票模式</span>

vote_est <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">(</span><span class="token string">&#39;ada&#39;</span><span class="token punctuation">,</span> ensemble<span class="token punctuation">.</span>AdaBoostClassifier<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token string">&#39;bc&#39;</span><span class="token punctuation">,</span> ensemble<span class="token punctuation">.</span>BaggingClassifier<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token string">&#39;etc&#39;</span><span class="token punctuation">,</span>ensemble<span class="token punctuation">.</span>ExtraTreesClassifier<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token string">&#39;gbc&#39;</span><span class="token punctuation">,</span> ensemble<span class="token punctuation">.</span>GradientBoostingClassifier<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token string">&#39;rfc&#39;</span><span class="token punctuation">,</span> ensemble<span class="token punctuation">.</span>RandomForestClassifier<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token string">&#39;gpc&#39;</span><span class="token punctuation">,</span> gaussian_process<span class="token punctuation">.</span>GaussianProcessClassifier<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token string">&#39;lr&#39;</span><span class="token punctuation">,</span> linear_model<span class="token punctuation">.</span>LogisticRegressionCV<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token string">&#39;bnb&#39;</span><span class="token punctuation">,</span> naive_bayes<span class="token punctuation">.</span>BernoulliNB<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token string">&#39;gnb&#39;</span><span class="token punctuation">,</span> naive_bayes<span class="token punctuation">.</span>GaussianNB<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token string">&#39;knn&#39;</span><span class="token punctuation">,</span> neighbors<span class="token punctuation">.</span>KNeighborsClassifier<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token string">&#39;svc&#39;</span><span class="token punctuation">,</span> svm<span class="token punctuation">.</span>SVC<span class="token punctuation">(</span>probability<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token string">&#39;xgb&#39;</span><span class="token punctuation">,</span> XGBClassifier<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">]</span>
<span class="token comment"># Hard Vote or majority rules</span>

vote_hard <span class="token operator">=</span> ensemble<span class="token punctuation">.</span>VotingClassifier<span class="token punctuation">(</span>estimators <span class="token operator">=</span> vote_est <span class="token punctuation">,</span> voting <span class="token operator">=</span> <span class="token string">&#39;hard&#39;</span><span class="token punctuation">)</span>
vote_hard_cv <span class="token operator">=</span> model_selection<span class="token punctuation">.</span>cross_validate<span class="token punctuation">(</span>vote_hard<span class="token punctuation">,</span> data<span class="token punctuation">[</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> data<span class="token punctuation">[</span><span class="token string">&#39;target&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">)</span>
vote_hard<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> data<span class="token punctuation">[</span><span class="token string">&#39;target&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment"># Soft Vote or weighted probabilities</span>
vote_soft <span class="token operator">=</span> ensemble<span class="token punctuation">.</span>VotingClassifier<span class="token punctuation">(</span>estimators <span class="token operator">=</span> vote_est <span class="token punctuation">,</span> voting <span class="token operator">=</span> <span class="token string">&#39;soft&#39;</span><span class="token punctuation">)</span>
vote_soft_cv <span class="token operator">=</span> model_selection<span class="token punctuation">.</span>cross_validate<span class="token punctuation">(</span>vote_soft<span class="token punctuation">,</span> data<span class="token punctuation">[</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> data<span class="token punctuation">[</span><span class="token string">&#39;target&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">)</span>
vote_soft<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> data<span class="token punctuation">[</span><span class="token string">&#39;target&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>



</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),r={id:"votingclassifierapi",tabindex:"-1"},k=s("a",{class:"header-anchor",href:"#votingclassifierapi","aria-hidden":"true"},"#",-1),d={href:"https://scikit-learn.org/stable/modules/generated/sklearn.ensemble.VotingClassifier.html",target:"_blank",rel:"noopener noreferrer"},v=a(`<ol><li><p>构造参数</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">sklearn</span><span class="token punctuation">.</span>ensemble<span class="token punctuation">.</span>VotingClassifier<span class="token punctuation">(</span>
    estimators<span class="token punctuation">,</span>                 <span class="token comment"># estimatorslist of (str, estimator) tuples, </span>
    <span class="token operator">*</span><span class="token punctuation">,</span> 
    voting<span class="token operator">=</span><span class="token string">&#39;hard&#39;</span><span class="token punctuation">,</span>              <span class="token comment"># {‘hard’, ‘soft’}, hard: 少数服从多数; soft: 模型的权重*预测的概率</span>
    weights<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>               <span class="token comment"># array-like of shape (n_classifiers,), 每个模型的投票权重</span>
    n_jobs<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>                <span class="token comment"># int, 并行度</span>
    flatten_transform<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>     <span class="token comment"># bool, </span>
    verbose<span class="token operator">=</span><span class="token boolean">False</span>               <span class="token comment"># bool, </span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>对象属性</p><ol><li>estimators_: list of classifiers, 分类器组成的列表</li><li>named_estimators_: Bunch, 通过名字获取子分类器</li><li>le_: LabelEncoder, 训练的时候编码, 预测的时候解码</li><li>classes_: ndarray of shape (n_classes,), 目标变量</li><li>n_features_in_: int, fit过程使用的特征数</li><li>feature_names_in_: ndarray of shape (n_features_in_,), fit过程使用的特征名称</li></ol></li></ol>`,1);function m(b,_){const t=e("ExternalLinkIcon");return o(),c("div",null,[u,s("h2",r,[k,n(),s("a",d,[n("VotingClassifier"),i(t)]),n("API")]),v])}const h=p(l,[["render",m],["__file","2投票器VotingClassifier.html.vue"]]);export{h as default};
