const n=JSON.parse('{"key":"v-461ee64c","path":"/4%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/3python/7%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E6%A0%87%E5%87%86%E6%96%B9%E6%B3%95/with.html","title":"with","lang":"zh-CN","frontmatter":{"description":"with class test: def __enter__(self): return \\"enter\\" def __exit__(self, exc_type, exc_value, traceback): if exc_type == IndexError: print(exc_value, type(exc_value)) print(traceback) return True with test() as test: # test()不是调用的__call__方法，而是__enter__方法 print(A) a = [] a[0]","head":[["meta",{"property":"og:url","content":"https://claroja.github.io/4%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/3python/7%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E6%A0%87%E5%87%86%E6%96%B9%E6%B3%95/with.html"}],["meta",{"property":"og:site_name","content":"Claroja"}],["meta",{"property":"og:title","content":"with"}],["meta",{"property":"og:description","content":"with class test: def __enter__(self): return \\"enter\\" def __exit__(self, exc_type, exc_value, traceback): if exc_type == IndexError: print(exc_value, type(exc_value)) print(traceback) return True with test() as test: # test()不是调用的__call__方法，而是__enter__方法 print(A) a = [] a[0]"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-24T12:46:58.000Z"}],["meta",{"property":"article:author","content":"claroja"}],["meta",{"property":"article:modified_time","content":"2025-02-24T12:46:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"with\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-24T12:46:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"claroja\\",\\"url\\":\\"https://claroja.github.io\\"}]}"]]},"headers":[],"git":{"createdTime":1740401218000,"updatedTime":1740401218000,"contributors":[{"name":"Claroja","email":"63183535@qq.com","commits":1}]},"readingTime":{"minutes":0.41,"words":123},"filePathRelative":"4编程语言/3python/7面向对象/标准方法/with.md","localizedDate":"2025年2月24日","excerpt":"<h1> with</h1>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">test</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">__enter__</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token string\\">\\"enter\\"</span>\\n    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">__exit__</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">,</span> exc_type<span class=\\"token punctuation\\">,</span> exc_value<span class=\\"token punctuation\\">,</span> traceback<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token keyword\\">if</span> exc_type <span class=\\"token operator\\">==</span> IndexError<span class=\\"token punctuation\\">:</span>\\n            <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span>exc_value<span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">type</span><span class=\\"token punctuation\\">(</span>exc_value<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span>traceback<span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token keyword\\">return</span> <span class=\\"token boolean\\">True</span>\\n\\n<span class=\\"token keyword\\">with</span> test<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">as</span> test<span class=\\"token punctuation\\">:</span> <span class=\\"token comment\\"># test()不是调用的__call__方法，而是__enter__方法</span>\\n    <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span>A<span class=\\"token punctuation\\">)</span>\\n    a <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span>\\n    a<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"王新宇"},"autoDesc":true}');export{n as data};
